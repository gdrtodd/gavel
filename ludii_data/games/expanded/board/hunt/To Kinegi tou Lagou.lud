(game "To Kinegi tou Lagou" (players 2) (equipment {(board (add (remove (remove (merge {(concentric {1 8}) (shift 0 -5 (concentric {1 4})) (shift 0 5 (concentric {1 4})) (shift -5 0 (concentric {1 4})) (shift 5 0 (concentric {1 4})) (shift 5 5 (concentric {1 8})) (shift 5 -5 (concentric {1 8})) (shift -5 -5 (concentric {1 8})) (shift -5 5 (concentric {1 8}))}) vertices:{20 18 27 11 48 49 50 51 52 41 42 43 44 45 34 35 36 37 30 59 58 57 64 63}) edges:{{0 1} {0 7} {0 5} {0 3} {33 35} {30 29} {27 25} {39 37}}) edges:{{15 8} {22 6} {4 12} {19 2} {18 36} {38 20} {40 14} {16 26} {28 24} {23 32} {31 11} {10 34} {5 30} {3 35} {39 1} {27 7}}) use:Vertex) (piece "Human" Each (move Step (to if:(is Empty (to))))) (piece "Dog" Each (move Step (to if:(is Empty (to))))) (piece "Hare" Each (move Step (to if:(is Empty (to))))) (hand Each size:2)}) (rules (start {(place "Hare2" (centrePoint)) (place "Human1" (handSite P1)) (place "Dog1" (handSite P1 1) count:2)}) phases:{(phase "PlacementP1" (play (move (from (sites Hand P1) if:(is Occupied (from))) (to (sites {1 2 3 4 5 6 7 8}) if:(is Empty (to))) (then (if (not (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase (all Sites (sites Hand P1) if:(= 0 (count Cell at:(site)))) "HuntingP2")) (phase "HuntingP2" (play (forEach Piece (then (if (not (can Move (step (from (where "Hare" P2)) (to if:(is Empty (to)))))) (and {(addScore P2 (- (count Moves) 3)) (remove (sites Occupied by:All container:"Board")) (add (piece "Hare1") (to (sites Centre))) (add (piece "Human2") (to (handSite P2))) (add (piece "Dog2") (to (handSite P2 1)) count:2)}))))) (nextPhase (= 1 (count Sites in:(sites Occupied by:All container:"Board"))) "PlacementP2")) (phase "PlacementP2" (play (move (from (sites Hand P2) if:(is Occupied (from))) (to (intersection (sites Empty) (sites {1 2 3 4 5 6 7 8})) if:(is Empty (to))) (then (if (not (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase (all Sites (sites Hand P2) if:(= 0 (count Cell at:(site)))) "HuntingP1")) (phase "HuntingP1" (play (forEach Piece (then (if (not (can Move (step (from (where "Hare" P1)) (to if:(is Empty (to)))))) (addScore P1 (- (count Moves) (+ (score P2) 6))))))) (end (if (!= 0 (score P1)) (byScore))))})) 