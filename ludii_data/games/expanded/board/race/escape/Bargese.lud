(game "Bargese" (players 2) (equipment {(board (add (hole (merge (shift 0 (/ (- 19 3) 2) (rectangle 3 19)) (shift (/ (- 19 3) 2) 0 (rectangle 19 3))) (poly {{8 8} {8 11} {11 11} {11 8}})) cells:{{8 28 48 68 69 70 71 51 31 11 10 9}}) {(track "Track1" "26,W,S,E,8,S,E,N,11,E,N,W,53,N,W,S,42,W,S1,E7,End" P1 directed:True) (track "Track2" "27,E,N,W,53,N,W,S,42,W,S,E,8,S,E,N,11,E,N1,W7,End" P2 directed:True)}) (hand Each) (dice d:2 from:0 num:6) (piece "Pawn" Each (if (and {(>= 0 (var "EnteredPiece")) (= (trackSite Move from:(from) steps:1) -2) (or (= (mapEntry "Throw" (count Pips)) 25) (= (mapEntry "Throw" (count Pips)) 11))}) (move Remove (from) level:(level) (then (set Var "EnteredPiece" 1))) (if (and (>= 0 (var "EnteredPiece")) (= (trackSite Move from:(from) steps:2) -2)) (move (from (from)) (to (trackSite Move from:(from) steps:1))) (move (from (from) level:(level)) (to (trackSite Move from:(from) steps:(if (< 0 (var "EnteredPiece")) (- (mapEntry "Throw" (count Pips)) 1) (mapEntry "Throw" (count Pips)))) if:(not (and (is In (to) (sites "SafeSites")) (is Enemy (who at:(to))))) (apply (if (is Enemy (who at:(to))) (forEach Level (to) FromTop (fromTo (from (to) level:(level)) (to (handSite (who at:(to) level:(level))))))))) (then (set Var "EnteredPiece" 0)))))) (map "Throw" {(pair 0 6) (pair 1 11) (pair 2 2) (pair 3 3) (pair 4 4) (pair 5 25) (pair 6 12)}) (map "DefaultEntry" {(pair P1 26) (pair P2 27)}) (map "XEntry" {(pair P1 2) (pair P2 48)}) (regions "SafeSites" (sites {60 62 16 48 87 89 37 2}))}) (rules (start {(place Stack "Pawn1" (handSite P1) count:4) (place Stack "Pawn2" (handSite P2) count:4)}) (play (do (if (>= 0 (var "EnteredPiece")) (roll)) next:(if (can Move (or {(if (and {(>= 0 (var "EnteredPiece")) (is Occupied (handSite Mover)) (= (mapEntry "Throw" (count Pips)) 25)}) (move (from (handSite Mover)) (to (mapEntry "DefaultEntry" Mover)) (then (set Var "EnteredPiece" 1)))) (if (and {(>= 0 (var "EnteredPiece")) (is Occupied (handSite Mover)) (= (mapEntry "Throw" (count Pips)) 11)}) (move (from (handSite Mover)) (to (mapEntry "DefaultEntry" Mover)) (then (set Var "EnteredPiece" 1)))) (if (and {(>= 0 (var "EnteredPiece")) (is Occupied (handSite Mover)) (= (mapEntry "Throw" (count Pips)) 11)}) (move (from (handSite Mover)) (to (mapEntry "XEntry" Mover)))) (forEach Piece)})) (or {(if (and {(>= 0 (var "EnteredPiece")) (is Occupied (handSite Mover)) (= (mapEntry "Throw" (count Pips)) 25)}) (move (from (handSite Mover)) (to (mapEntry "DefaultEntry" Mover)) (then (set Var "EnteredPiece" 1)))) (if (and {(>= 0 (var "EnteredPiece")) (is Occupied (handSite Mover)) (= (mapEntry "Throw" (count Pips)) 11)}) (move (from (handSite Mover)) (to (mapEntry "DefaultEntry" Mover)) (then (set Var "EnteredPiece" 1)))) (if (and {(>= 0 (var "EnteredPiece")) (is Occupied (handSite Mover)) (= (mapEntry "Throw" (count Pips)) 11)}) (move (from (handSite Mover)) (to (mapEntry "XEntry" Mover)))) (forEach Piece)}) (move Pass (then (set Var "EnteredPiece" 0)))) (then (if (is In (mapEntry "Throw" (count Pips)) (sites {12 25 11 6})) (moveAgain))))) (end (if (no Pieces Mover) (result Mover Win))))) 