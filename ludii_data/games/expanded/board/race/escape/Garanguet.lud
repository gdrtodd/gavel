(game "Garanguet" (players 2) (equipment {(board (rectangle 2 13) {(track "Track1" {6 12 11 10 9 8 7 5 4 3 2 1 0 13 14 15 16 17 18 20 21 22 23 24 25} P1 directed:True) (track "Track2" {19 25 24 23 22 21 20 18 17 16 15 14 13 0 1 2 3 4 5 7 8 9 10 11 12} P2 directed:True)} use:Vertex) (dice num:3) (piece "Disc" Each) (map {(pair 1 6) (pair 2 19)}) (regions "Home" P1 {7 8 9 10 11 12}) (regions "Home" P2 {20 21 22 23 24 25})}) (rules (start {(place Stack "Disc1" 12 count:15) (place Stack "Disc2" 25 count:15)}) (play (do (if (not (is Prev Mover)) (roll)) next:(if (all DiceEqual) (forEach Site (sites Occupied by:Mover) (if (= (trackSite Move from:(site) steps:(/ (count Pips) 3)) -1) (move Remove (site)) (move (from (site)) (to (trackSite Move from:(site) steps:(/ (count Pips) 3)) if:(or (not (is Enemy (who at:(to)))) (= 1 (size Stack at:(to)))) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (mapEntry (next)))))))) (then (if (< (value Player Mover) 8) (and (moveAgain) (if (< (value Player Mover) 0) (set Value Mover 1) (set Value Mover (+ 1 (value Player Mover))))) (set Value Mover 0)))) (if (or {(and (= (face 26) (face 27)) (> (face 26) (face 28))) (and (= (face 26) (face 28)) (> (face 26) (face 27))) (and (= (face 27) (face 28)) (> (face 27) (face 26)))}) (or (if (not (and (= (value Player Mover) 0) (!= (count MovesThisTurn) 0))) (forEach Site (sites Occupied by:Mover) (if (= (trackSite Move from:(site) steps:(if (and (= (face 26) (face 27)) (> (face 26) (face 28))) (face 26) (if (and (= (face 26) (face 28)) (> (face 26) (face 27))) (face 26) (face 27)))) -1) (move Remove (site)) (move (from (site)) (to (trackSite Move from:(site) steps:(if (and (= (face 26) (face 27)) (> (face 26) (face 28))) (face 26) (if (and (= (face 26) (face 28)) (> (face 26) (face 27))) (face 26) (face 27)))) if:(or (not (is Enemy (who at:(to)))) (= 1 (size Stack at:(to)))) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (mapEntry (next)))))))) (then (and (if (< (count MovesThisTurn) 4) (moveAgain)) (if (< (value Player Mover) 3) (if (< (value Player Mover) 0) (set Value Mover 1) (set Value Mover (+ 1 (value Player Mover)))) (set Value Mover 0)))))) (if (or (or (= (count MovesThisTurn) (value Player Mover)) (and (= (count MovesThisTurn) 0) (< (value Player Mover) 0))) (and (!= (count MovesThisTurn) 0) (= (value Player Mover) 0))) (forEach Site (sites Occupied by:Mover) (if (= (trackSite Move from:(site) steps:(if (and (= (face 26) (face 27)) (> (face 26) (face 28))) (face 28) (if (and (= (face 26) (face 28)) (> (face 26) (face 27))) (face 27) (face 26)))) -1) (move Remove (site)) (move (from (site)) (to (trackSite Move from:(site) steps:(if (and (= (face 26) (face 27)) (> (face 26) (face 28))) (face 28) (if (and (= (face 26) (face 28)) (> (face 26) (face 27))) (face 27) (face 26)))) if:(or (not (is Enemy (who at:(to)))) (= 1 (size Stack at:(to)))) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (mapEntry (next)))))))) (then (if (< (count MovesThisTurn) 4) (moveAgain) (set Value Mover 0)))))) (forEach Die if:(!= (pips) 0) (forEach Site (sites Occupied by:Mover) (if (= (trackSite Move from:(site) steps:(pips)) -1) (move Remove (site)) (move (from (site)) (to (trackSite Move from:(site) steps:(pips)) if:(or (not (is Enemy (who at:(to)))) (= 1 (size Stack at:(to)))) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (mapEntry (next)))))))) (then (if (not (all DiceUsed)) (moveAgain))))))))) (end (if (no Pieces Mover) (result Mover Win))))) 