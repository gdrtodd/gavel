(game "Lange Puff" (players 2) (equipment {(board (rectangle 2 13) {(track "Track1" {26 25 24 23 22 21 20 18 17 16 15 14 13 0 1 2 3 4 5 7 8 9 10 11 12} P1 directed:True) (track "Track2" {27 25 24 23 22 21 20 18 17 16 15 14 13 0 1 2 3 4 5 7 8 9 10 11 12} P2 directed:True)} use:Vertex) (dice d:6 num:2) (piece "Disc" Each (forEach Die replayDouble:(= 1 (value Player Mover)) if:(!= (pips) 0) (if (= (trackSite Move from:(from) steps:(pips)) -1) (move Remove (from)) (move (from (from)) (to (trackSite Move from:(from) steps:(pips)) if:(or (not (is Enemy (who at:(to)))) (= 1 (size Stack at:(to)))) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite Next))))))) (then (if (not (all DiceUsed)) (moveAgain) (if (= 1 (value Player Mover)) (if (and (all DiceEqual) (= 0 (size Array (values Remembered)))) (and (moveAgain) (set Var "PlayOpposite" 1))) (set Value Mover 1)))))) (hand Each)}) (rules (start {(place Stack "Disc1" (handSite P1) count:15) (place Stack "Disc2" (handSite P2) count:15)}) (play (do (if (or (is Pending) (not (is Prev Mover))) (roll)) next:(if (= 1 (var "PlayOpposite")) (or {(forEach Piece (forEach Value (values Remembered "Opposite") (if (= (trackSite Move from:(from) steps:(value)) -1) (move Remove (from)) (move (from (from)) (to (trackSite Move from:(from) steps:(value)) if:(or (not (is Enemy (who at:(to)))) (= 1 (size Stack at:(to)))) (apply (and (if (is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite Next)))) (forget Value "Opposite" (value)))))) (then (if (!= 0 (size Array (values Remembered "Opposite"))) (moveAgain) (and {(set Var "PlayOpposite" 0) (set Pending) (moveAgain)}))))) top:True) (forEach Piece container:(mover) (forEach Value (values Remembered "Opposite") (if (= (trackSite Move from:(from) steps:(value)) -1) (move Remove (from)) (move (from (from)) (to (trackSite Move from:(from) steps:(value)) if:(or (not (is Enemy (who at:(to)))) (= 1 (size Stack at:(to)))) (apply (and (if (is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite Next)))) (forget Value "Opposite" (value)))))) (then (if (!= 0 (size Array (values Remembered "Opposite"))) (moveAgain) (and {(set Var "PlayOpposite" 0) (set Pending) (moveAgain)}))))) top:True) (move Pass (then (and {(forget Value "Opposite" All) (set Var "PlayOpposite" 0) (set Pending) (moveAgain)})))}) (do (if (and {(= 0 (count MovesThisTurn)) (all DiceEqual) (= 1 (value Player Mover))}) (and (remember Value "Opposite" (- 7 (face 28))) (remember Value "Opposite" (- 7 (face 28))))) next:(or (forEach Piece top:True) (forEach Piece container:(mover) top:True)))))) (end (if (no Pieces Mover) (result Mover Win))))) 