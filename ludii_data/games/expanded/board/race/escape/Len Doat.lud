(game "Len Doat" (players 2) (equipment {(board (merge {(rectangle 3 5) (shift 7.5 0 (rectangle 3 5)) (shift 0 3.5 (rectangle 3 5)) (shift 7.5 3.5 (rectangle 3 5))}) {(track "Track1" "20,E,N,W,14,W,S,E,44,W,S,E,45,E,N,W,15,E,N1,W,End" P1 directed:True) (track "Track2" "39,W,S,E,45,E,N,W,15,E,N,W,14,W,S,E,44,W,S1,E,End" P2 directed:True)}) (dice d:2 from:0 num:5) (hand Each) (piece "Marker" Each (if (= (trackSite Move steps:(value Player Mover)) -2) (move Remove (from)) (if (!= (trackSite Move steps:(value Player Mover)) -1) (if (if (not (is Enemy (who at:(trackSite Move steps:(value Player Mover))))) True (not (is In (trackSite Move steps:(value Player Mover)) (sites "Protect")))) (move (from) (to (trackSite Move steps:(value Player Mover)) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite Next)) count:(count at:(to))))) (then (if (or (= 1 (value Player Mover)) (= 5 (value Player Mover))) (and (moveAgain) (set Value Mover -2))))))))) (map "EntrySite" {(pair P1 (coord "F2")) (pair P2 (coord "E5"))}) (regions "Protect" (sites {"A1" "A3" "A4" "A6" "J1" "J3" "J4" "J6"}))}) (rules (start (place "Marker" "Hand" count:3)) (play (if (can Move (if (< (value Player Mover) 0) (do (roll) next:(if (= (value Player Mover) -2) (do (set Value Mover (count Pips)) next:(if (and (= (value Player Mover) 1) (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))))) (move (from (handSite Mover)) (to (mapEntry "EntrySite" (mover))) (then (and (moveAgain) (set Value Mover -2)))) (if (and (= (value Player Mover) 5) (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))))) (move (from (handSite Mover)) (to (mapEntry "EntrySite" (mover))) count:(count Cell at:(handSite Mover)) (then (and (moveAgain) (set Value Mover -2)))) (forEach Piece)) (then (if (!= (value Player Mover) -2) (set Value Mover -1))))) (move Pass (then (set Value Mover (count Pips)))))) (if (and (= (value Player Mover) 1) (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))))) (move (from (handSite Mover)) (to (mapEntry "EntrySite" (mover))) (then (and (moveAgain) (set Value Mover -2)))) (if (and (= (value Player Mover) 5) (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))))) (move (from (handSite Mover)) (to (mapEntry "EntrySite" (mover))) count:(count Cell at:(handSite Mover)) (then (and (moveAgain) (set Value Mover -2)))) (forEach Piece)) (then (if (!= (value Player Mover) -2) (set Value Mover -1)))))) (if (< (value Player Mover) 0) (do (roll) next:(if (= (value Player Mover) -2) (do (set Value Mover (count Pips)) next:(if (and (= (value Player Mover) 1) (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))))) (move (from (handSite Mover)) (to (mapEntry "EntrySite" (mover))) (then (and (moveAgain) (set Value Mover -2)))) (if (and (= (value Player Mover) 5) (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))))) (move (from (handSite Mover)) (to (mapEntry "EntrySite" (mover))) count:(count Cell at:(handSite Mover)) (then (and (moveAgain) (set Value Mover -2)))) (forEach Piece)) (then (if (!= (value Player Mover) -2) (set Value Mover -1))))) (move Pass (then (set Value Mover (count Pips)))))) (if (and (= (value Player Mover) 1) (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))))) (move (from (handSite Mover)) (to (mapEntry "EntrySite" (mover))) (then (and (moveAgain) (set Value Mover -2)))) (if (and (= (value Player Mover) 5) (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site)))))) (move (from (handSite Mover)) (to (mapEntry "EntrySite" (mover))) count:(count Cell at:(handSite Mover)) (then (and (moveAgain) (set Value Mover -2)))) (forEach Piece)) (then (if (!= (value Player Mover) -2) (set Value Mover -1))))) (move Pass (then (and (if (or (= 1 (value Player Mover)) (= 5 (value Player Mover))) (and (moveAgain) (set Value Mover -2))) (if (!= (value Player Mover) -2) (set Value Mover -1))))))) (end (if (no Pieces Mover) (result Mover Win))))) 