(game "Pahada Keliya" (players 4) (equipment {(board (add (hole (merge (shift 0 (/ (- 19 3) 2) (rectangle 3 19)) (shift (/ (- 19 3) 2) 0 (rectangle 19 3))) (poly {{8 8} {8 11} {11 11} {11 8}})) cells:{{8 28 48 68 69 70 71 51 31 11 10 9}}) {(track "Track1" "96,9,S,E,N,11,E,N,W,53,N,W,S,42,W,S,E,8,S,E1,N7,End" P1 directed:True) (track "Track2" "96,26,W,S,E,8,S,E,N,11,E,N,W,53,N,W,S,42,W,S1,E7,End" P2 directed:True) (track "Track3" "96,52,N,W,S,42,W,S,E,8,S,E,N,11,E,N,W,53,N,W1,S7,End" P3 directed:True) (track "Track4" "96,27,E,N,W,53,N,W,S,42,W,S,E,8,S,E,N,11,E,N1,W7,End" P4 directed:True)}) (dice d:4 faces:{1 3 4 6} num:2) (piece "Pawn" Each (forEach Die if:(!= (pips) 0) (if (= (trackSite Move from:(from) steps:(pips)) -2) (move Remove (from) level:(level)) (move (from (from) level:(level)) (to (trackSite Move from:(from) steps:(pips)) if:(if (not (is In (to) (sites Mover "CentralRow"))) True (if (or (is In (from) (sites Mover "CentralRow")) (= (from) 96)) True (<= 1 (value Player Mover)))) (apply (if (is Enemy (who at:(to))) (forEach Level (to) FromTop (and {(if (= 1 (state at:(to) level:(level))) (if (is Mover P1) (set Value P3 (- (if (is Mover P1) (value Player P3) (if (is Mover P3) (value Player P1) (if (is Mover P2) (value Player P4) (value Player P2)))) 1)) (if (is Mover P3) (set Value P1 (- (if (is Mover P1) (value Player P3) (if (is Mover P3) (value Player P1) (if (is Mover P2) (value Player P4) (value Player P2)))) 1)) (if (is Mover P2) (set Value P4 (- (if (is Mover P1) (value Player P3) (if (is Mover P3) (value Player P1) (if (is Mover P2) (value Player P4) (value Player P2)))) 1)) (set Value P2 (- (if (is Mover P1) (value Player P3) (if (is Mover P3) (value Player P1) (if (is Mover P2) (value Player P4) (value Player P2)))) 1)))))) (remove (to) level:(level)) (add (piece (if (= (who at:(to) level:(level)) 1) (id "Pawn" P1) (if (= (who at:(to) level:(level)) 2) (id "Pawn" P2) (if (= (who at:(to) level:(level)) 3) (id "Pawn" P3) (id "Pawn" P4))))) (to (centrePoint)))}))))) (then (if (and (= 0 (state at:(last To) level:(last LevelTo))) (is In (last To) (if (is Mover P1) (sites P3 "RightCentral") (if (is Mover P3) (sites P1 "RightCentral") (if (is Mover P2) (sites P4 "RightCentral") (sites P2 "RightCentral")))))) (and (set State at:(last To) 1) (if (is Mover P1) (set Value P3 (+ 1 (if (is Mover P1) (value Player P3) (if (is Mover P3) (value Player P1) (if (is Mover P2) (value Player P4) (value Player P2)))))) (if (is Mover P3) (set Value P1 (+ 1 (if (is Mover P1) (value Player P3) (if (is Mover P3) (value Player P1) (if (is Mover P2) (value Player P4) (value Player P2)))))) (if (is Mover P2) (set Value P4 (+ 1 (if (is Mover P1) (value Player P3) (if (is Mover P3) (value Player P1) (if (is Mover P2) (value Player P4) (value Player P2)))))) (set Value P2 (+ 1 (if (is Mover P1) (value Player P3) (if (is Mover P3) (value Player P1) (if (is Mover P2) (value Player P4) (value Player P2)))))))))))))) (then (if (not (all DiceUsed)) (moveAgain))))) (regions "CentralRow" P1 (sites Direction from:55 N included:True distance:7)) (regions "CentralRow" P2 (sites Direction from:19 E included:True distance:7)) (regions "CentralRow" P3 (sites Direction from:94 S included:True distance:7)) (regions "CentralRow" P4 (sites Direction from:34 W included:True distance:7)) (regions "RightCentral" P1 (sites Direction from:56 N included:True distance:7)) (regions "RightCentral" P2 (sites Direction from:0 E included:True distance:7)) (regions "RightCentral" P3 (sites Direction from:93 S included:True distance:7)) (regions "RightCentral" P4 (sites Direction from:50 W included:True distance:7))}) (rules (start {(set Team 1 {P1 P3}) (set Team 2 {P2 P4}) (place Stack "Pawn1" 61) (place Stack "Pawn1" 58) (place Stack "Pawn1" 62 count:2) (place Stack "Pawn2" 21) (place Stack "Pawn2" 20) (place Stack "Pawn2" 2 count:2) (place Stack "Pawn3" 88) (place Stack "Pawn3" 91) (place Stack "Pawn3" 87 count:2) (place Stack "Pawn4" 32) (place Stack "Pawn4" 33) (place Stack "Pawn4" 48 count:2)}) (play (do (if (not (is Prev Mover)) (roll)) next:(forEach Piece))) (end (if (no Pieces TeamMover) (result TeamMover Win))))) 