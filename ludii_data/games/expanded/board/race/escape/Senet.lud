(game "Senet" (players 2) (equipment {(board (rectangle 3 10) {(track "Track1" "20,E,S1,W,S1,E,End" P1 directed:True) (track "Track2" "20,E,S1,W,S1,E,End" P2 directed:True) (track "TrackOpposite1" "9,W,N1,E,N1,W" P1 directed:True) (track "TrackOpposite2" "9,W,N1,E,N1,W" P2 directed:True)}) (dice d:2 from:0 num:4) (map {(pair 0 5) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4)}) (regions "Symbols" (sites {"F2" "F1" "G1" "H1" "I1"})) (regions "Ankh Waset" (sites {"F2"})) (regions "Neferu" (sites {"F1"})) (regions "Water" (sites {"G1"})) (regions "Baw" (sites {"H1"})) (regions "Two Men" (sites {"I1"})) (regions "Horus" (sites {"J1"})) (regions "TopRow" (sites Top)) (regions "MiddleRow" (difference (expand (sites Top)) (sites Top))) (regions "BottomRow" (sites Bottom)) (piece "SenetPiece" Each) (hand Each)}) (rules (start {(place "SenetPiece1" (sites {"B3" "D3" "F3" "H3" "J3" "I2" "G2"})) (place "SenetPiece2" (sites {"A3" "C3" "E3" "G3" "I3" "J2" "H2"}))}) phases:{(phase "Opening" (play (do (roll) next:(move Pass (then (if (= 1 (mapEntry (count Pips))) (and {(fromTo (from (coord "G2")) (to (coord "F2"))) (if (is Mover P2) (swap Players P1 P2)) (set NextPlayer (player 1))})))))) (nextPhase (= 1 (count Pips)) "Playing")) (phase "Playing" (play (do (roll) next:(if (can Move (if (and (= (state at:(coord "F2")) 1) (= 1 (count Sites in:(intersection (sites Occupied by:Mover) (sites "Ankh Waset"))))) (priority {(if (is Empty (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (move (from (coord "F2")) (to (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))))) (move Swap Pieces (coord "F2") (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (then (set State at:(last To) 0))) (if (is Empty (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (move (from (coord "F2")) (to (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))))) (move Swap Pieces (coord "F2") (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (then (set State at:(last To) 0)))}) (if (= 1 (count Sites in:(intersection (sites Occupied by:Mover) (sites "Water")))) (if (= (mapEntry (count Pips)) 4) (move Remove (sites "Water")) (or (if (= 1 (count Sites in:(intersection (sites Empty) (sites "Ankh Waset")))) (move (from (sites "Water")) (to (sites "Ankh Waset")) (then (set State at:(last To) 1)))) (move Pass))) (if True (priority {(forEach Piece (or {(if (is In (from) (sites "Neferu")) (if (!= (trackSite Move steps:(mapEntry (count Pips))) -1) (if (= (trackSite Move steps:(mapEntry (count Pips))) -2) (move Remove (from)) (if (is Empty (trackSite Move steps:(mapEntry (count Pips)))) (move (from) (to (trackSite Move steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move steps:(mapEntry (count Pips)))))) (if (and (= 1 (count in:(intersection (sites Empty) (sites "Water")))) (is In (trackSite Move steps:(mapEntry (count Pips))) (union {(sites "Baw") (sites "Two Men") (sites "Horus")}))) (move Swap Pieces (from) (trackSite Move steps:(mapEntry (count Pips))) (then (fromTo (from (last From)) (to (trackSite Move from:(last From) steps:1))))))))))) (if (is In (from) (union {(sites "Two Men") (sites "Baw")})) (if (!= (trackSite Move steps:(mapEntry (count Pips))) -1) (if (= (trackSite Move steps:(mapEntry (count Pips))) -2) (move Remove (from))))) (if (is In (from) (sites "Horus")) (if (or (= (trackSite Move steps:(mapEntry (count Pips))) -2) (= (trackSite Move steps:(mapEntry (count Pips))) -1)) (move Remove (from)))) (if (not (is In (from) (union {(sites "Neferu") (sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")}))) (or {(if (not (or {(= (trackSite Move steps:(mapEntry (count Pips))) -2) (= (trackSite Move steps:(mapEntry (count Pips))) -1) (is In (trackSite Move steps:(mapEntry (count Pips))) (union {(sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")}))})) (if (is Empty (trackSite Move steps:(mapEntry (count Pips)))) (move (from) (to (trackSite Move steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move steps:(mapEntry (count Pips)))))) (move Swap Pieces (from) (trackSite Move steps:(mapEntry (count Pips)))))))}))})) (forEach Piece (or {(if (is In (from) (sites "Neferu")) (if (!= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) -1) (if (is Empty (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (move (from) (to (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))))) (move Swap Pieces (from) (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))))))) (if (not (is In (from) (union {(sites "Neferu") (sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")}))) (if (!= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) -1) (if (is Empty (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (move (from) (to (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))))) (move Swap Pieces (from) (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))))))}))} (then (if (is In (mapEntry (count Pips)) (sites {1 4 5})) (moveAgain)))))))) (if (and (= (state at:(coord "F2")) 1) (= 1 (count Sites in:(intersection (sites Occupied by:Mover) (sites "Ankh Waset"))))) (priority {(if (is Empty (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (move (from (coord "F2")) (to (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move from:(coord "F2") steps:(mapEntry (count Pips)))))) (move Swap Pieces (coord "F2") (trackSite Move from:(coord "F2") steps:(mapEntry (count Pips))))) (then (set State at:(last To) 0))) (if (is Empty (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (move (from (coord "F2")) (to (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips)))))) (move Swap Pieces (coord "F2") (trackSite Move from:(coord "F2") "TrackOpposite" steps:(mapEntry (count Pips))))) (then (set State at:(last To) 0)))}) (if (= 1 (count Sites in:(intersection (sites Occupied by:Mover) (sites "Water")))) (if (= (mapEntry (count Pips)) 4) (move Remove (sites "Water")) (or (if (= 1 (count Sites in:(intersection (sites Empty) (sites "Ankh Waset")))) (move (from (sites "Water")) (to (sites "Ankh Waset")) (then (set State at:(last To) 1)))) (move Pass))) (if True (priority {(forEach Piece (or {(if (is In (from) (sites "Neferu")) (if (!= (trackSite Move steps:(mapEntry (count Pips))) -1) (if (= (trackSite Move steps:(mapEntry (count Pips))) -2) (move Remove (from)) (if (is Empty (trackSite Move steps:(mapEntry (count Pips)))) (move (from) (to (trackSite Move steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move steps:(mapEntry (count Pips)))))) (if (and (= 1 (count in:(intersection (sites Empty) (sites "Water")))) (is In (trackSite Move steps:(mapEntry (count Pips))) (union {(sites "Baw") (sites "Two Men") (sites "Horus")}))) (move Swap Pieces (from) (trackSite Move steps:(mapEntry (count Pips))) (then (fromTo (from (last From)) (to (trackSite Move from:(last From) steps:1))))))))))) (if (is In (from) (union {(sites "Two Men") (sites "Baw")})) (if (!= (trackSite Move steps:(mapEntry (count Pips))) -1) (if (= (trackSite Move steps:(mapEntry (count Pips))) -2) (move Remove (from))))) (if (is In (from) (sites "Horus")) (if (or (= (trackSite Move steps:(mapEntry (count Pips))) -2) (= (trackSite Move steps:(mapEntry (count Pips))) -1)) (move Remove (from)))) (if (not (is In (from) (union {(sites "Neferu") (sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")}))) (or {(if (not (or {(= (trackSite Move steps:(mapEntry (count Pips))) -2) (= (trackSite Move steps:(mapEntry (count Pips))) -1) (is In (trackSite Move steps:(mapEntry (count Pips))) (union {(sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")}))})) (if (is Empty (trackSite Move steps:(mapEntry (count Pips)))) (move (from) (to (trackSite Move steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move steps:(mapEntry (count Pips))))) (if (= (trackSite Move steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move steps:(mapEntry (count Pips)))))) (move Swap Pieces (from) (trackSite Move steps:(mapEntry (count Pips)))))))}))})) (forEach Piece (or {(if (is In (from) (sites "Neferu")) (if (!= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) -1) (if (is Empty (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (move (from) (to (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))))) (move Swap Pieces (from) (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))))))) (if (not (is In (from) (union {(sites "Neferu") (sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")}))) (if (!= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) -1) (if (is Empty (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (move (from) (to (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (and (not (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 19) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 29) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 10) (or (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 S through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (if (= (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))) 0) (or (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 N through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))) (or (is Line 2 W through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))) (is Line 2 E through:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))))))))) (is Enemy (who at:(trackSite Move "TrackOpposite" steps:(mapEntry (count Pips)))))) (move Swap Pieces (from) (trackSite Move "TrackOpposite" steps:(mapEntry (count Pips))))))))}))} (then (if (is In (mapEntry (count Pips)) (sites {1 4 5})) (moveAgain))))))) (move Pass (then (if (is In (mapEntry (count Pips)) (sites {1 4 5})) (moveAgain))))))))} (end (if (no Pieces Mover) (result Mover Win))))) 