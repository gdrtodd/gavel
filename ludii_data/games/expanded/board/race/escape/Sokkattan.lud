(game "Sokkattan" (players 4) (equipment {(board (add (hole (merge (shift 0 (/ (- 19 3) 2) (rectangle 3 19)) (shift (/ (- 19 3) 2) 0 (rectangle 19 3))) (poly {{8 8} {8 11} {11 11} {11 8}})) cells:{{8 28 48 68 69 70 71 51 31 11 10 9}}) {(track "Track1" "96,9,S,E,N,11,E,N,W,53,N,W,S,42,W,S,E,8,S,E1,N7,End" P1 directed:True) (track "Track2" "96,26,W,S,E,8,S,E,N,11,E,N,W,53,N,W,S,42,W,S1,E7,End" P2 directed:True) (track "Track3" "96,52,N,W,S,42,W,S,E,8,S,E,N,11,E,N,W,53,N,W1,S7,End" P3 directed:True) (track "Track4" "96,27,E,N,W,53,N,W,S,42,W,S,E,8,S,E,N,11,E,N1,W7,End" P4 directed:True)}) (hand Each) (dice d:2 from:0 num:6) (piece "Pawn" Each (if (= (trackSite Move from:(from) steps:(mapEntry "Throw" (count Pips))) -2) (move Remove (from) level:(level)) (move (from (from) level:(level)) (to (trackSite Move from:(from) steps:(mapEntry "Throw" (count Pips))) if:(not (and (is In (to) (sites "SafeSites")) (is Enemy (who at:(to))))) (apply (if (is Enemy (who at:(to))) (forEach Level (to) FromTop (fromTo (from (to) level:(level)) (to (handSite (who at:(to) level:(level)))))))))))) (regions "SafeSites" (sites {67 63 65 23 38 3 82 84 86 30 47 15})) (map "Throw" {(pair 0 6) (pair 1 10) (pair 2 2) (pair 3 3) (pair 4 4) (pair 5 25) (pair 6 12)}) (map "Entry" {(pair P1 67) (pair P2 23) (pair P3 82) (pair P4 30)})}) (rules (start {(set Team 1 {P1 P3}) (set Team 2 {P2 P4}) (place Stack "Pawn1" (handSite P1) count:3) (place Stack "Pawn2" (handSite P2) count:3) (place Stack "Pawn3" (handSite P3) count:3) (place Stack "Pawn4" (handSite P4) count:3)}) (play (do (roll) next:(if (= (var "ExtraOne") 1) (priority {(if (is Occupied (handSite Mover)) (move (from (handSite Mover)) (to (mapEntry "Entry" Mover)))) (forEach Piece (if (= (trackSite Move from:(from) steps:1) -2) (move Remove (from) level:(level)) (move (from (from) level:(level)) (to (trackSite Move from:(from) steps:1) if:(not (and (is In (to) (sites "SafeSites")) (is Enemy (who at:(to))))) (apply (if (is Enemy (who at:(to))) (forEach Level (to) FromTop (fromTo (from (to) level:(level)) (to (handSite (who at:(to) level:(level))))))))))))} (then (and (moveAgain) (set Var "ExtraOne" 0)))) (or (if (and (is Occupied (handSite Mover)) (is In (mapEntry "Throw" (count Pips)) (sites {10 25}))) (move (from (handSite Mover)) (to (mapEntry "Entry" Mover)))) (forEach Piece))) (then (if (not (is In (mapEntry "Throw" (count Pips)) (sites {2 3 4}))) (and (if (is In (mapEntry "Throw" (count Pips)) (sites {10 25})) (set Var "ExtraOne" 1)) (moveAgain)))))) (end (if (no Pieces TeamMover) (result TeamMover Win))))) 