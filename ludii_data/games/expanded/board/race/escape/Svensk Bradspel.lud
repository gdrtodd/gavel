(game "Svensk Bradspel" (players 2) (equipment {(board (rectangle 2 13) {(track "Track1" {6 25 24 23 22 21 20 18 17 16 15 14 13 0 1 2 3 4 5 7 8 9 10 11 12 -2} P1 directed:True) (track "Track2" {19 0 1 2 3 4 5 7 8 9 10 11 12 25 24 23 22 21 20 18 17 16 15 14 13 -2} P2 directed:True)} use:Vertex) (dice d:6 num:2) (piece "Disc" Each (forEach Die replayDouble:True if:(!= (pips) 0) (if (= (trackSite Move from:(from) steps:(pips)) -2) (if (all Sites (sites Occupied by:Mover) if:(is In (site) (sites Mover "FinalQuadrant"))) (move Remove (from))) (move (from (from)) (to (trackSite Move from:(from) steps:(pips)) if:(and (or (not (is Enemy (who at:(to)))) (= 1 (size Stack at:(to)))) (if (not (is In (to) (sites Mover "StartingSide"))) True (if (= (value Player Mover) 1) True (is Empty (to))))) (apply (if (is Enemy (who at:(to))) (fromTo (from (to)) (to (mapEntry "Bar" Next)))))))) (then (and (if (not (all DiceUsed)) (moveAgain)) (if (and (= (last To) (mapEntry "12thPoint" Mover)) (!= 1 (value Player Mover))) (set Value Mover 1)))))) (regions "FinalQuadrant" P1 (sites {7 8 9 10 11 12})) (regions "FinalQuadrant" P2 (sites {13 14 15 16 17 18})) (regions "StartingSide" P1 (sites {25 24 23 22 21 20 18 17 16 15 14})) (regions "StartingSide" P2 (sites {0 1 2 3 4 5 7 8 9 10 11})) (map "12thPoint" {(pair P1 13) (pair P2 12)}) (map "Bar" {(pair P1 6) (pair P2 19)})}) (rules (start {(place Stack "Disc1" 25 count:15) (place Stack "Disc2" 0 count:15)}) (play (do (if (not (is Prev Mover)) (roll)) next:(forEach Piece top:True))) (end {(if (no Pieces Mover) (result Mover Win)) (if (if (is Mover P1) (and {(is Friend (who at:10)) (is Friend (who at:11)) (is Friend (who at:12)) (= 5 (size Stack at:10)) (= 5 (size Stack at:11)) (= 5 (size Stack at:12))}) (and {(is Friend (who at:13)) (is Friend (who at:14)) (is Friend (who at:15)) (= 5 (size Stack at:13)) (= 5 (size Stack at:14)) (= 5 (size Stack at:15))})) (result Mover Win)) (if (if (is Mover P1) (and {(is Friend (who at:8)) (is Friend (who at:9)) (is Friend (who at:10)) (is Friend (who at:11)) (is Friend (who at:12)) (= 3 (size Stack at:8)) (= 3 (size Stack at:9)) (= 3 (size Stack at:10)) (= 3 (size Stack at:11)) (= 3 (size Stack at:12))}) (and {(is Friend (who at:13)) (is Friend (who at:14)) (is Friend (who at:15)) (is Friend (who at:17)) (is Friend (who at:18)) (= 3 (size Stack at:13)) (= 3 (size Stack at:14)) (= 3 (size Stack at:15)) (= 3 (size Stack at:17)) (= 3 (size Stack at:18))})) (result Mover Win)) (if (if (is Mover P1) (and {(is Friend (who at:10)) (is Friend (who at:11)) (is Friend (who at:12)) (= 3 (size Stack at:10)) (= 5 (size Stack at:11)) (= 7 (size Stack at:12))}) (and {(is Friend (who at:13)) (is Friend (who at:14)) (is Friend (who at:15)) (= 7 (size Stack at:13)) (= 5 (size Stack at:14)) (= 3 (size Stack at:15))})) (result Mover Win)) (if (if (is Mover P1) (and (is Friend (who at:12)) (= 15 (size Stack at:12))) (and (is Friend (who at:13)) (= 15 (size Stack at:13)))) (result Mover Win))}))) 