(game "Thaayam" (players 4) (equipment {(board (square 5) {(track "Track1" "2,E,N,W,S,E1,N3,E2,S2,W1,N1" P1 directed:True) (track "Track2" "14,N,W,S,E,N1,W3,N2,E2,S1,W1" P2 directed:True) (track "Track3" "22,W,S,E,N,W1,S3,W2,N2,E1,S1" P3 directed:True) (track "Track4" "10,S,E,N,W,S1,E3,S2,W2,N1,E1" P4 directed:True)}) (hand Each) (regions "MarkedCells" (union {(sites Centre) (intersection (sites Outer) (sites Row (row of:(centrePoint)))) (intersection (sites Outer) (sites Column (column of:(centrePoint))))})) (piece "Counter" Each (or (if (!= (trackSite Move steps:(value)) -1) (move (from (from) level:(level)) (to (trackSite Move steps:(value)) (apply if:True (and (if (and {(is Enemy (who at:(to))) (= (value Piece at:(to)) 1) (not (is In (to) (sites "MarkedCells")))}) (fromTo (from (to)) (to (handSite (who at:(to))) (apply if:True (and (set Pending) (moveAgain)))) count:(size Stack at:(to)) stack:True)) (forget Value (value))))))) (if (and (= 1 (value)) (all Sites (sites Occupied by:Mover) if:(is In (site) (sites Centre)))) (move (from (from) level:(level)) (to (handSite Mover) (apply if:True (forget Value (value)))) (then (remove (last To))))))) (piece "DoubleCounter" Each (if (and (> (/ (value) 2) 0) (!= (trackSite Move steps:(/ (value) 2)) -1)) (move (from (from) level:(level)) (to (trackSite Move steps:(/ (value) 2)) (apply if:True (and (if (and {(is Enemy (who at:(to))) (= (value Piece at:(to)) 2) (not (is In (to) (sites "MarkedCells")))}) (and {(remove (to)) (add (piece (if (= (who at:(to)) P1) (id "Counter" P1) (if (= (who at:(to)) P2) (id "Counter" P2) (if (= (who at:(to)) P3) (id "Counter" P3) (id "Counter" P4))))) (to (handSite (who at:(to)))) count:2 stack:True) (set Pending) (moveAgain)})) (forget Value (value))))) (then (if (= (centrePoint) (last To)) (and (remove (last To)) (add (piece (if (= (who at:(last To)) P1) (id "Counter" P1) (if (= (who at:(last To)) P2) (id "Counter" P2) (if (= (who at:(last To)) P3) (id "Counter" P3) (id "Counter" P4))))) (to (last To)) count:2 stack:True))))))) (dice d:2 from:0 num:4) (map "Start" {(pair P1 2) (pair P2 14) (pair P3 22) (pair P4 10)}) (map "OppositeStart" {(pair P1 22) (pair P2 10) (pair P3 2) (pair P4 14)})}) (rules (start {(place Stack "Counter1" (handSite P1) count:4 value:1) (place Stack "Counter2" (handSite P2) count:4 value:1) (place Stack "Counter3" (handSite P3) count:4 value:1) (place Stack "Counter4" (handSite P4) count:4 value:1)}) (play (if (can Move (if (or (not (is Prev Mover)) (is Pending)) (do (roll) next:(move Pass (then (and {(if (or {(= (if (= 0 (count Pips)) 8 (count Pips)) 1) (= (if (= 0 (count Pips)) 8 (count Pips)) 4) (= (if (= 0 (count Pips)) 8 (count Pips)) 8)}) (set Pending)) (if (not (all Sites (sites Occupied by:Mover) if:(not (is In (site) (sites Board))))) (remember Value (if (= 0 (count Pips)) 8 (count Pips))) (if (or (= (if (= 0 (count Pips)) 8 (count Pips)) 1) (is In 1 (values Remembered))) (remember Value (if (= 0 (count Pips)) 8 (count Pips))))) (moveAgain)})))) (or (forEach Value (values Remembered) (or (if (and (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site))))) (= 1 (value))) (move (from (handSite Mover)) (to (mapEntry "Start" (mover)) (apply if:True (forget Value (value)))))) (forEach Piece) (then (if (!= 0 (size Array (values Remembered))) (moveAgain))))) (if (and {(= (size Stack at:(mapEntry "OppositeStart" (mover))) 2) (= (who at:(mapEntry "OppositeStart" (mover)) level:0) Mover) (= (who at:(mapEntry "OppositeStart" (mover)) level:1) Mover)}) (move Select (from (mapEntry "OppositeStart" (mover))) (then (and {(remove (mapEntry "OppositeStart" (mover)) count:2) (add (piece (id "DoubleCounter" Mover)) (to (mapEntry "OppositeStart" (mover))) (then (set Value at:(mapEntry "OppositeStart" (mover)) 2))) (moveAgain)}))))))) (if (or (not (is Prev Mover)) (is Pending)) (do (roll) next:(move Pass (then (and {(if (or {(= (if (= 0 (count Pips)) 8 (count Pips)) 1) (= (if (= 0 (count Pips)) 8 (count Pips)) 4) (= (if (= 0 (count Pips)) 8 (count Pips)) 8)}) (set Pending)) (if (not (all Sites (sites Occupied by:Mover) if:(not (is In (site) (sites Board))))) (remember Value (if (= 0 (count Pips)) 8 (count Pips))) (if (or (= (if (= 0 (count Pips)) 8 (count Pips)) 1) (is In 1 (values Remembered))) (remember Value (if (= 0 (count Pips)) 8 (count Pips))))) (moveAgain)})))) (or (forEach Value (values Remembered) (or (if (and (not (all Sites (sites Hand Mover) if:(= 0 (count Cell at:(site))))) (= 1 (value))) (move (from (handSite Mover)) (to (mapEntry "Start" (mover)) (apply if:True (forget Value (value)))))) (forEach Piece) (then (if (!= 0 (size Array (values Remembered))) (moveAgain))))) (if (and {(= (size Stack at:(mapEntry "OppositeStart" (mover))) 2) (= (who at:(mapEntry "OppositeStart" (mover)) level:0) Mover) (= (who at:(mapEntry "OppositeStart" (mover)) level:1) Mover)}) (move Select (from (mapEntry "OppositeStart" (mover))) (then (and {(remove (mapEntry "OppositeStart" (mover)) count:2) (add (piece (id "DoubleCounter" Mover)) (to (mapEntry "OppositeStart" (mover))) (then (set Value at:(mapEntry "OppositeStart" (mover)) 2))) (moveAgain)})))))) (move Pass (then (forEach Value (values Remembered) (forget Value (value))))))) (end (if (no Pieces Mover) (result Mover Win))))) 