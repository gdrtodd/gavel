(game "Tokkadille" (players 2) (equipment {(board (rectangle 2 13) {(track "Track1" {12 11 10 9 8 7 5 4 3 2 1 0 13 14 15 16 17 18 20 21 22 23 24 25} P1 directed:True) (track "Track2" {25 24 23 22 21 20 18 17 16 15 14 13 0 1 2 3 4 5 7 8 9 10 11 12} P2 directed:True) (track "ReverseHuckeTrack1" {0 1 2 3 4 5 7} P1 directed:True) (track "ReverseHuckeTrack2" {13 14 15 16 17 18 20} P2 directed:True)} use:Vertex) (dice d:6 num:2) (piece "Disc" Each (if (is In (from) (sites Mover "BeforeHucke")) (forEach Die if:(!= (pips) 0) (move (from (from)) (to (trackSite Move from:(from) "Track" steps:(pips)) if:(and (is In (to) (sites Mover "BeforeHucke")) (not (is Enemy (who at:(to))))))) (then (if (not (all DiceUsed)) (moveAgain)))) (if (!= (from) (mapEntry "Hucke" (mover))) (forEach Die if:(!= (pips) 0) (if (= (trackSite Move from:(from) "Track" steps:(pips)) -1) (move Remove (from)) (move (from (from)) (to (trackSite Move from:(from) "Track" steps:(pips)) if:(not (is Enemy (who at:(to))))))) (then (if (not (all DiceUsed)) (moveAgain))))))) (regions "BeforeHucke" P1 (sites {12 11 10 9 8 7 5 4 3 2 1})) (regions "BeforeHucke" P2 (sites {25 24 23 22 21 20 18 17 16 15 14})) (map "Hucke" {(pair P1 0) (pair P2 13)})}) (rules (start {(place Stack "Disc1" 12 count:15) (place Stack "Disc2" 25 count:15)}) (play (do (if (not (is Prev Mover)) (roll)) next:(do (if (not (is Prev Mover)) (forEach Site (sites Occupied by:Mover) (if (is In (site) (sites Mover "BeforeHucke")) (and (if (and {(is In (trackSite Move from:(site) "Track" steps:(face 26)) (sites Mover "BeforeHucke")) (is Enemy (who at:(trackSite Move from:(site) "Track" steps:(face 26)))) (= 1 (size Stack at:(trackSite Move from:(site) "Track" steps:(face 26))))}) (addScore Mover 1)) (if (and {(is In (trackSite Move from:(site) "Track" steps:(face 27)) (sites Mover "BeforeHucke")) (is Enemy (who at:(trackSite Move from:(site) "Track" steps:(face 27)))) (= 1 (size Stack at:(trackSite Move from:(site) "Track" steps:(face 27))))}) (addScore Mover 1))) (if (!= (site) (mapEntry "Hucke" (mover))) (and (if (and (is Enemy (who at:(trackSite Move from:(site) "Track" steps:(face 26)))) (= 1 (size Stack at:(trackSite Move from:(site) "Track" steps:(face 26))))) (addScore Mover 1)) (if (and (is Enemy (who at:(trackSite Move from:(site) "Track" steps:(face 27)))) (= 1 (size Stack at:(trackSite Move from:(site) "Track" steps:(face 27))))) (addScore Mover 1))) (if (and {(= 1 (face 26)) (= 1 (face 27)) (<= 4 (size Stack at:(mapEntry "Hucke" (mover)))) (= 1 (size Stack at:(trackSite Move from:(site) "Track" steps:(face 26))))}) (addScore Mover 1)))))) next:(or {(if (and (>= 0 (var "MovingFromHucke")) (>= 0 (var "MovingToHucke"))) (forEach Piece)) (if (>= 0 (var "MovingFromHucke")) (if (or (< 0 (var "MovingToHucke")) (if (= (face 26) (face 27)) (<= 2 (count Pieces Mover in:(sites {(trackSite Move from:(mapEntry "Hucke" (mover)) "ReverseHuckeTrack" steps:(face 27))}))) (and (<= 1 (count Pieces Mover in:(sites {(trackSite Move from:(mapEntry "Hucke" (mover)) "ReverseHuckeTrack" steps:(face 26))}))) (<= 1 (count Pieces Mover in:(sites {(trackSite Move from:(mapEntry "Hucke" (mover)) "ReverseHuckeTrack" steps:(face 27))})))))) (or (if (and (!= 26 (var "MovingToHucke")) (is Friend (who at:(trackSite Move from:(mapEntry "Hucke" (mover)) "ReverseHuckeTrack" steps:(face 26))))) (move (from (trackSite Move from:(mapEntry "Hucke" (mover)) "ReverseHuckeTrack" steps:(face 26))) (to (mapEntry "Hucke" (mover))) (then (if (= 0 (count MovesThisTurn)) (and (moveAgain) (set Var "MovingToHucke" 26)) (set Var "MovingToHucke" 0))))) (if (and (!= 27 (var "MovingToHucke")) (is Friend (who at:(trackSite Move from:(mapEntry "Hucke" (mover)) "ReverseHuckeTrack" steps:(face 27))))) (move (from (trackSite Move from:(mapEntry "Hucke" (mover)) "ReverseHuckeTrack" steps:(face 27))) (to (mapEntry "Hucke" (mover))) (then (if (= 0 (count MovesThisTurn)) (and (moveAgain) (set Var "MovingToHucke" 27)) (set Var "MovingToHucke" 0)))))))) (if (>= 0 (var "MovingToHucke")) (if (or (< 0 (var "MovingFromHucke")) (if (and (and (!= (face 26) 1) (!= (face 27) 1)) (<= 2 (count Pieces Mover in:(sites {(mapEntry "Hucke" (mover))})))) (if (= (face 26) (face 27)) (not (is Enemy (who at:(trackSite Move from:(mapEntry "Hucke" (mover)) "Track" steps:(face 27))))) (and (not (is Enemy (who at:(trackSite Move from:(mapEntry "Hucke" (mover)) "Track" steps:(face 26))))) (not (is Enemy (who at:(trackSite Move from:(mapEntry "Hucke" (mover)) "Track" steps:(face 27))))))))) (or (if (and (!= 26 (var "MovingFromHucke")) (not (is Enemy (who at:(trackSite Move from:(mapEntry "Hucke" (mover)) "Track" steps:(face 26)))))) (move (from (mapEntry "Hucke" (mover))) (to (trackSite Move from:(mapEntry "Hucke" (mover)) "Track" steps:(face 26))) (then (if (= 0 (count MovesThisTurn)) (and (moveAgain) (set Var "MovingFromHucke" 26)) (set Var "MovingFromHucke" 0))))) (if (and (!= 27 (var "MovingFromHucke")) (not (is Enemy (who at:(trackSite Move from:(mapEntry "Hucke" (mover)) "Track" steps:(face 27)))))) (move (from (mapEntry "Hucke" (mover))) (to (trackSite Move from:(mapEntry "Hucke" (mover)) "Track" steps:(face 27))) (then (if (= 0 (count MovesThisTurn)) (and (moveAgain) (set Var "MovingFromHucke" 27)) (set Var "MovingFromHucke" 0))))))))})) (then (if (no Pieces Mover) (addScore Mover 2))))) (end (if (<= 12 (score Mover)) (result Mover Win))))) 