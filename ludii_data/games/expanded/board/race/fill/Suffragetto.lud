(game "Suffragetto" (players 2) (equipment {(board (square 17)) (regions "House of Commons" Shared (sites {"H14" "I14" "J14" "H13" "I13" "J13"})) (regions "Albert Hall" Shared (sites {"H4" "I4" "J4" "H5" "I5" "J5"})) (regions "The Arena" Shared (difference (expand (expand (sites {"E17"}) steps:8 E) steps:16 S) (union (sites "House of Commons") (sites "Albert Hall")))) (regions "The Free Zone" Shared (union {(expand (sites {"P5"}) steps:6 N) (expand (sites {"B13"}) steps:6 S) (expand (sites {"C17" "D17" "N17" "O17"}) steps:16 S)})) (regions "Hospital Grounds" Shared (expand (sites {"P17"}) steps:5 S)) (regions "Prison Yard" Shared (expand (sites {"B1"}) steps:5 N)) (regions "Prison" Shared (union (expand (sites {"A1"}) steps:16 N) (expand (sites {"B17"}) steps:3 S))) (regions "Hospital" Shared (union (expand (sites {"Q1"}) steps:16 N) (expand (sites {"P1"}) steps:3 N))) (piece "Suffragette" P1 (or {(move (from (from) if:(is In (from) (union {(sites "The Arena") (sites "The Free Zone") (sites "Prison Yard")}))) (to (intersection {(sites Around (from)) (sites Empty) (union {(sites "The Arena") (sites "The Free Zone") (sites "House of Commons")})}))) (move (from (from) if:(is In (from) (sites "House of Commons"))) (to (intersection {(sites Around (from)) (sites Empty) (sites "House of Commons")}))) (move Hop (from if:(is In (from) (union {(sites "The Arena") (sites "The Free Zone") (sites "Prison Yard")}))) (between if:(is Occupied (between)) (apply (if (if (= 0 (state at:(from))) (and (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena"))) (is In (between) (sites Around (from) Diagonal))) (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena")))) (fromTo (from (between)) (to (sites Random (intersection (sites Empty) (sites "Hospital")))))))) (to if:(and (is Empty (to)) (is In (to) (union {(sites "The Arena") (sites "The Free Zone") (sites "House of Commons")})))) (then (moveAgain))) (move Hop (from if:(is In (from) (sites "House of Commons"))) (between if:(is Occupied (between)) (apply (if (if (= 0 (state at:(from))) (and (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena"))) (is In (between) (sites Around (from) Diagonal))) (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena")))) (fromTo (from (between)) (to (sites Random (intersection (sites Empty) (sites "Hospital")))))))) (to if:(and (is Empty (to)) (is In (to) (sites "House of Commons")))))})) (piece "Policeman" P2 (or {(move (from (from) if:(is In (from) (union {(sites "The Arena") (sites "The Free Zone") (sites "Hospital Grounds")}))) (to (intersection {(sites Around (from)) (sites Empty) (union {(sites "The Arena") (sites "The Free Zone") (sites "Albert Hall")})}))) (move (from (from) if:(is In (from) (sites "Albert Hall"))) (to (intersection {(sites Around (from)) (sites Empty) (sites "Albert Hall")}))) (move Hop (from if:(is In (from) (union {(sites "The Arena") (sites "The Free Zone") (sites "Hospital Grounds")}))) (between if:(is Occupied (between)) (apply (if (if (= 0 (state at:(from))) (and (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena"))) (is In (between) (sites Around (from) Diagonal))) (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena")))) (fromTo (from (between)) (to (sites Random (intersection (sites Empty) (sites "Prison")))))))) (to if:(and (is Empty (to)) (is In (to) (union {(sites "The Arena") (sites "The Free Zone") (sites "Albert Hall")})))) (then (moveAgain))) (move Hop (from if:(is In (from) (sites "Albert Hall"))) (between if:(is Occupied (between)) (apply (if (if (= 0 (state at:(from))) (and (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena"))) (is In (between) (sites Around (from) Diagonal))) (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena")))) (fromTo (from (between)) (to (sites Random (intersection (sites Empty) (sites "Prison")))))))) (to if:(and (is Empty (to)) (is In (to) (sites "Albert Hall")))))})) (piece "Leader" P1 (or {(move (from (from) if:(is In (from) (union {(sites "The Arena") (sites "The Free Zone") (sites "Prison Yard")}))) (to (intersection {(sites Around (from)) (sites Empty) (union {(sites "The Arena") (sites "The Free Zone") (sites "House of Commons")})}))) (move (from (from) if:(is In (from) (sites "House of Commons"))) (to (intersection {(sites Around (from)) (sites Empty) (sites "House of Commons")}))) (move Hop (from if:(is In (from) (union {(sites "The Arena") (sites "The Free Zone") (sites "Prison Yard")}))) (between if:(is Occupied (between)) (apply (if (if (= 0 (state at:(from))) (and (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena"))) (is In (between) (sites Around (from) Diagonal))) (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena")))) (fromTo (from (between)) (to (sites Random (intersection (sites Empty) (sites "Hospital")))))))) (to if:(and (is Empty (to)) (is In (to) (union {(sites "The Arena") (sites "The Free Zone") (sites "House of Commons")})))) (then (moveAgain))) (move Hop (from if:(is In (from) (sites "House of Commons"))) (between if:(is Occupied (between)) (apply (if (if (= 0 (state at:(from))) (and (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena"))) (is In (between) (sites Around (from) Diagonal))) (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena")))) (fromTo (from (between)) (to (sites Random (intersection (sites Empty) (sites "Hospital")))))))) (to if:(and (is Empty (to)) (is In (to) (sites "House of Commons")))))})) (piece "Inspector" P2 (or {(move (from (from) if:(is In (from) (union {(sites "The Arena") (sites "The Free Zone") (sites "Hospital Grounds")}))) (to (intersection {(sites Around (from)) (sites Empty) (union {(sites "The Arena") (sites "The Free Zone") (sites "Albert Hall")})}))) (move (from (from) if:(is In (from) (sites "Albert Hall"))) (to (intersection {(sites Around (from)) (sites Empty) (sites "Albert Hall")}))) (move Hop (from if:(is In (from) (union {(sites "The Arena") (sites "The Free Zone") (sites "Hospital Grounds")}))) (between if:(is Occupied (between)) (apply (if (if (= 0 (state at:(from))) (and (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena"))) (is In (between) (sites Around (from) Diagonal))) (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena")))) (fromTo (from (between)) (to (sites Random (intersection (sites Empty) (sites "Prison")))))))) (to if:(and (is Empty (to)) (is In (to) (union {(sites "The Arena") (sites "The Free Zone") (sites "Albert Hall")})))) (then (moveAgain))) (move Hop (from if:(is In (from) (sites "Albert Hall"))) (between if:(is Occupied (between)) (apply (if (if (= 0 (state at:(from))) (and (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena"))) (is In (between) (sites Around (from) Diagonal))) (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena")))) (fromTo (from (between)) (to (sites Random (intersection (sites Empty) (sites "Prison")))))))) (to if:(and (is Empty (to)) (is In (to) (sites "Albert Hall")))))}))}) (rules (start {(place "Suffragette1" {57 61 73 74 78 79 88 89 90 91 92 94 95 96 97 98} state:0) (place "Policeman2" {227 231 209 210 214 215 196 197 198 199 200 194 193 192 191 190} state:0) (place "Leader1" {87 93 99 72 80} state:1) (place "Inspector2" {189 195 201 208 216} state:1)}) (play (priority {(if (< 0 (var "ReleaseCountdown")) (if (is Odd (var "ReleaseCountdown")) (move (from (if (= (id P1) (id Mover)) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= (var "LastState") (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= (var "LastState") (state at:(site))))))) (forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= (var "LastState") (state at:(site))))) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= (var "LastState") (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= (var "LastState") (state at:(site))))))) (forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= (var "LastState") (state at:(site))))))) (to (intersection (sites Empty) (if (= (id P1) (id Mover)) (sites "Prison Yard") (sites "Hospital Grounds")))) (then (and (set Var "LastState" -2) (set Var "ReleaseCountdown" (- (var "ReleaseCountdown") 1))))) (or (move (from (if (= (id P1) (id Mover)) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 0 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 0 (state at:(site))))))) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 1 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 1 (state at:(site))))))) (intersection (sites "Prison") (sites Occupied by:All)) (forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 0 (state at:(site))))) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 1 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 1 (state at:(site))))))) (forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 1 (state at:(site)))))) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 0 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 0 (state at:(site))))))) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 1 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 1 (state at:(site))))))) (intersection (sites "Hospital") (sites Occupied by:All)) (forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 0 (state at:(site))))) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 1 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 1 (state at:(site))))))) (forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 1 (state at:(site)))))))) (to (intersection (sites Empty) (if (= (id P1) (id Mover)) (sites "Prison Yard") (sites "Hospital Grounds")))) (then (and (set Var "LastState" (state at:(last To))) (set Var "ReleaseCountdown" (- (var "ReleaseCountdown") 1))))) (move Pass (then (and (set Var "LastState" -2) (set Var "ReleaseCountdown" 0))))))) (if (is Decided "Release") (move (from (if (= (id P1) (id Mover)) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 0 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 0 (state at:(site))))))) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 1 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 1 (state at:(site))))))) (intersection (sites "Prison") (sites Occupied by:All)) (forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 0 (state at:(site))))) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 1 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 1 (state at:(site))))))) (forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 1 (state at:(site)))))) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 0 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 0 (state at:(site))))))) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 1 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 1 (state at:(site))))))) (intersection (sites "Hospital") (sites Occupied by:All)) (forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 0 (state at:(site))))) (if (and (<= 1 (count Sites in:(forEach (intersection (sites "Prison") (sites Occupied by:All)) if:(= 1 (state at:(site)))))) (<= 1 (count Sites in:(forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 1 (state at:(site))))))) (forEach (intersection (sites "Hospital") (sites Occupied by:All)) if:(= 1 (state at:(site)))))))) (to (intersection (sites Empty) (if (= (id P1) (id Mover)) (sites "Prison Yard") (sites "Hospital Grounds")))) (then (and (set Var "LastState" (state at:(last To))) (set Var "ReleaseCountdown" 11))))) (if (is Proposed "Release") (or (move Vote "Release") (move Vote "No"))) (if (is Prev Mover) (or (if (= (id P1) (id Mover)) (move Hop (from (last To) if:(is In (from) (union {(sites "The Arena") (sites "The Free Zone") (sites "Prison Yard")}))) (between if:(is Occupied (between)) (apply (if (if (= 0 (state at:(from))) (and (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena"))) (is In (between) (sites Around (from) Diagonal))) (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena")))) (fromTo (from (between)) (to (sites Random (intersection (sites Empty) (sites "Hospital")))))))) (to if:(and (is Empty (to)) (is In (to) (union {(sites "The Arena") (sites "The Free Zone") (sites "House of Commons")})))) (then (moveAgain))) (move Hop (from (last To) if:(is In (from) (union {(sites "The Arena") (sites "The Free Zone") (sites "Hospital Grounds")}))) (between if:(is Occupied (between)) (apply (if (if (= 0 (state at:(from))) (and (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena"))) (is In (between) (sites Around (from) Diagonal))) (and (is Enemy (who at:(between))) (is In (between) (sites "The Arena")))) (fromTo (from (between)) (to (sites Random (intersection (sites Empty) (sites "Prison")))))))) (to if:(and (is Empty (to)) (is In (to) (union {(sites "The Arena") (sites "The Free Zone") (sites "Albert Hall")})))) (then (moveAgain)))) (move Pass)) (or (if (and {(= 0 (count Sites in:(intersection (sites "Prison Yard") (sites Occupied by:All)))) (= 0 (count Sites in:(intersection (sites "Hospital Grounds") (sites Occupied by:All)))) (<= 12 (count Sites in:(intersection (sites "Prison") (sites Occupied by:All)))) (<= 12 (count Sites in:(intersection (sites "Hospital") (sites Occupied by:All))))}) (move Propose "Release" (then (do (note "Release prisoners?" to:Next) next:(vote "Release"))))) (forEach Piece)))})) (end {(if (= 6 (count Pieces P1 in:(sites "House of Commons"))) (result P1 Win)) (if (= 6 (count Pieces P2 in:(sites "Albert Hall"))) (result P2 Win))}))) 