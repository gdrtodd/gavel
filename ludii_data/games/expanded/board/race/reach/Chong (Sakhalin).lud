(game "Chong (Sakhalin)" (players 2) (equipment {(board (rectangle 3 12) {(track "Track1" "0,E,N1,W,N1,E" P1 directed:True) (track "Track2" "35,W,S1,E,S1,W" P2 directed:True)}) (dice d:6 num:4) (piece "Marker" Each (move (from) (to (trackSite Move from:(from) steps:(pips)) if:(or {(is Empty (to)) (and (is Enemy (who at:(to))) (if (not (= (what at:(to)) (id "King" Next))) True (= 1 (abs (- (to) (from))))))}) (apply if:(is Enemy (who at:(to))) (remove (to)))))) (piece "King" Each (if (= 1 (pips)) (if (<= 2 (count Pieces Mover)) (if (and (!= 1 (value Player Mover)) (= 1 (count Pieces Mover))) (move (from (from)) (to (from)) (then (set Value Mover 1))) (move (from) (to (trackSite Move from:(from) steps:(pips)) if:(or {(is Empty (to)) (and (is Enemy (who at:(to))) (if (not (= (what at:(to)) (id "King" Next))) True (= 1 (abs (- (to) (from))))))}) (apply if:(is Enemy (who at:(to))) (remove (to)))))) (firstMoveOnTrack "Track" Mover (if (and (> (site) (from)) (is Mover (who at:(site)))) (move Swap Pieces (from) (site)))))))}) (rules (start {(place "Marker1" (difference (sites Bottom) (sites Right))) (place "King1" (intersection (sites Bottom) (sites Right))) (place "Marker2" (difference (sites Top) (sites Left))) (place "King2" (intersection (sites Top) (sites Left)))}) phases:{(phase "Opening" (play (do (roll) next:(if (!= 0 (+ {(if (= 1 (face (+ 0 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 1 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 2 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 3 (count Sites in:(sites Board))))) 1 0)})) (if (is Mover P1) (if (is Mover (who at:(- (where "King" Mover) (+ {(if (= 1 (face (+ 0 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 1 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 2 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 3 (count Sites in:(sites Board))))) 1 0)})))) (move Swap Pieces (where "King" Mover) (- (where "King" Mover) (+ {(if (= 1 (face (+ 0 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 1 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 2 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 3 (count Sites in:(sites Board))))) 1 0)})))) (if (is Mover (who at:(+ (where "King" Mover) (+ {(if (= 1 (face (+ 0 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 1 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 2 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 3 (count Sites in:(sites Board))))) 1 0)})))) (move Swap Pieces (where "King" Mover) (+ (where "King" Mover) (+ {(if (= 1 (face (+ 0 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 1 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 2 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 3 (count Sites in:(sites Board))))) 1 0)})))) (then (fromTo (from (last From)) (to (trackSite Move from:(last From) steps:(- (count Pips) (+ {(if (= 1 (face (+ 0 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 1 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 2 (count Sites in:(sites Board))))) 1 0) (if (= 1 (face (+ 3 (count Sites in:(sites Board))))) 1 0)}))) (apply if:(is Enemy (who at:(to))) (remove (to)))))))))) (nextPhase Mover (not (was Pass)) "Playing")) (phase "Playing" (play (do (if (not (is Prev Mover)) (roll)) next:(forEach Die if:(!= (pips) 0) (forEach Piece) (then (if (not (all DiceUsed)) (moveAgain)))))))} (end {(if (= (who at:0) P2) (result P2 Win)) (if (= (who at:(- (count Sites in:(sites Board)) 1)) P1) (result P1 Win))}))) 