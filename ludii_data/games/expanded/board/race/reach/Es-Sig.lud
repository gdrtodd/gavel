(game "Es-Sig" (players 4) (equipment {(board (merge {(rectangle 8 1) (square 7) (shift 8 0 (square 1))}) {(track "Track" "50,19,W,N1,E,N1,W,N1,E,N1,W,N1,E,N1,W4" directed:True) (track "ExtensionTrack" "45,W,N" directed:True) (track "GhoulaTrack" "19,W,N1,E,N1,W,N1,E,N1,W,N1,E,N1,W" directed:True) (track "ReverseGhoulaTrack" "50,12,E,S1,W,S1,E,S1,W,S1,E,S1,W,S1,E" directed:True)}) (piece "Ghoula" Neutral) (piece "Stick" Each (if (= (from) 49) (if (= (state at:(from) level:(level)) 6) (move (from (from) level:(level)) (to 48) (then (forEach Level (last To) (set State at:(last To) level:(level) 0)))) (if (= (mapEntry "Throw" (count Pips)) 1) (move Select (from (from) level:(level)) (then (set State at:(last To) level:(last LevelTo) (+ 1 (state at:(last To) level:(last LevelTo)))))))) (if (= (from) 31) (if (= (state at:(from) level:(level)) 11) (move (from (from) level:(level)) (to 32) (then (forEach Level (last To) (set State at:(last To) level:(level) 0)))) (if (= (mapEntry "Throw" (count Pips)) 1) (move Select (from (from) level:(level)) (then (set State at:(last To) level:(last LevelTo) (+ 1 (state at:(last To) level:(last LevelTo)))))))) (if (and (!= (from) 45) (is In (from) (sites Track "Track"))) (move (from (from) level:(level) if:(if (<= 1 (state at:(from) level:(level))) True (= (mapEntry "Throw" (count Pips)) 1))) (to (trackSite Move "Track" steps:(mapEntry "Throw" (count Pips))) if:True) (then (if (not (<= 1 (state at:(last To) level:(topLevel at:(last To))))) (set State at:(last To) level:(topLevel at:(last To)) 1)))) (if (is In (from) (sites Track "ExtensionTrack")) (or {(if (and (!= (from) 14) (= (mapEntry "Throw" (count Pips)) 1)) (move (from (from) level:(level)) (to (trackSite Move "ExtensionTrack" steps:1)))) (if (= (from) 14) (move Pass (then (if (!= 1 (count Pips)) (and (moveAgain) (set Var 1))))))})))) (then (if (and (= (last To) 14) (!= (last From) 14)) (if (!= -1 (var "ScoreToGet")) (and (set Score Mover (- (var "ScoreToGet") 1)) (set Var "ScoreToGet" (- (var "ScoreToGet") 1))) (and (set Score Mover (count Players)) (set Var "ScoreToGet" (count Players))))))) maxState:12) (dice d:2 from:0 num:4) (map "Throw" {(pair 0 4) (pair 1 3) (pair 2 0) (pair 3 1) (pair 4 6)}) (map "ThrowGhoula" {(pair 0 4) (pair 1 6) (pair 2 4) (pair 3 2) (pair 4 6)})}) (rules (start (place Stack items:{"Ghoula0" "Stick4" "Stick3" "Stick2" "Stick1"} 50)) (play (do (roll) next:(if (> (var) 0) (if (= 1 (size Stack at:(where "Ghoula" Neutral))) (or (move (from (where "Ghoula" Neutral) level:(where Level "Ghoula" Neutral at:(where "Ghoula" Neutral))) (to (trackSite Move from:(where "Ghoula" Neutral) "GhoulaTrack" steps:(mapEntry "ThrowGhoula" (count Pips))))) (move (from (where "Ghoula" Neutral) level:(where Level "Ghoula" Neutral at:(where "Ghoula" Neutral))) (to (trackSite Move from:(where "Ghoula" Neutral) "ReverseGhoulaTrack" steps:(mapEntry "ThrowGhoula" (count Pips)))))) (move (from (where "Ghoula" Neutral) level:(where Level "Ghoula" Neutral at:(where "Ghoula" Neutral))) (to (trackSite Move from:(where "Ghoula" Neutral) "ReverseGhoulaTrack" steps:(mapEntry "ThrowGhoula" (count Pips)))) (then (if (= (last From) 19) (forEach Level (last From) FromTop (remove (last From) level:(level))) (forEach Level (last From) FromTop (fromTo (from (last From) level:(level)) (to (last To))))))) (then (set Var 0))) (if (or (= (where "Stick" Mover) 14) (!= 0 (mapEntry "Throw" (count Pips)))) (forEach Piece))))) (end {(forEach Player if:(no Pieces Player) (result Player Loss)) (if (or (and (= 1 (size Stack at:(where "Ghoula" Neutral))) (= 12 (where "Ghoula" Neutral))) (and (all Sites (difference (sites Board) (sites {50 14})) if:(or (is Empty (site)) (and (= 1 (size Stack at:(site))) (= (site) (where "Ghoula" Neutral))))) (is Empty 50))) (byScore))}))) 