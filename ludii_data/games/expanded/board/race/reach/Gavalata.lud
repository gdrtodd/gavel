(game "Gavalata" (players 4) (equipment {(board (square 5) {(track "Track1" "2,W,N,E,S,W1,N3,W2,S2,E1,N1" P1 directed:True) (track "Track2" "22,E,S,W,N,E1,S3,E2,N2,W1,S1" P2 directed:True) (track "Track3" "14,S,W,N,E,S1,W3,S2,E2,N1,W1" P3 directed:True) (track "Track4" "10,N,E,S,W,N1,E3,N2,W2,S1,E1" P4 directed:True)}) (dice d:2 from:0 num:4) (piece "Paddle" Each (if (!= (trackSite Move steps:(count Pips)) -1) (move (from (from) level:(level)) (to (trackSite Move steps:(count Pips)) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (mapEntry (who at:(to)))))))) (then (if (= 12 (last To)) (remove (last To)))))) (map {(pair 1 "C1") (pair 2 "C5") (pair 3 "E3") (pair 4 "A3")})}) (rules (start {(place Stack "Paddle1" (mapEntry 1) count:2) (place Stack "Paddle2" (mapEntry 2) count:2) (place Stack "Paddle3" (mapEntry 3) count:2) (place Stack "Paddle4" (mapEntry 4) count:2)}) (play (do (roll) next:(if (!= 0 (count Pips)) (forEach Piece) (move Pass)))) (end (if (no Pieces Mover) (result Mover Win))))) 