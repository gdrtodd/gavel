(game "Sig (El Oued)" (players 4) (equipment {(board (scale 2 1 (merge {(square 5) (shift 4 5 (rectangle 3 1)) (scale 2 1 (shift 1.5 8 (rectangle 3 1)))})) {(track "FirstTrack" "0,E,N1,W,N1,E1" directed:True) (track "SecondTrack" "13,E,N1,W,N1,E" directed:True)}) (dice d:2 from:0 num:6) (piece "Father" Each (or {(if (and (!= (from) 0) (is In (from) (sites Track "FirstTrack"))) (move (from (from) level:(level)) (to (trackSite Move "FirstTrack" steps:(if (= 1 (var "SpecialSig")) (+ 1 (mapEntry "Throw" (count Pips))) (mapEntry "Throw" (count Pips)))))) (then (forEach Site (sites Track Mover "FirstTrack" from:(last From) to:(last To)) (if (!= (site) (last To)) (forEach Level (site) FromTop (if (is Enemy (who at:(site) level:(level))) (fromTo (from (site) level:(level)) (to 0)))))))) (if (is In (from) (sites Track "SecondTrack")) (move (from (from) level:(level)) (to (trackSite Move "SecondTrack" steps:(if (= 1 (var "SpecialSig")) (+ 1 (mapEntry "Throw" (count Pips))) (mapEntry "Throw" (count Pips))))) (then (forEach Site (sites Track Mover "SecondTrack" from:(last From) to:(last To)) (if (!= (site) (last To)) (forEach Level (site) FromTop (if (is Enemy (who at:(site) level:(level))) (fromTo (from (site) level:(level)) (to 0))))))))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 0) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 1))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 11) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 12))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 12) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 13))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 24) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 25))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 25) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 26))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 26) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 28))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 28) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 27))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 27) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 29))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 29) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 30)))})) (piece "Djinn" Each (if (= 30 (where "Father" Mover)) (or {(if (and (!= (from) 0) (is In (from) (sites Track "FirstTrack"))) (move (from (from) level:(level)) (to (trackSite Move "FirstTrack" steps:(* 2 (if (= 1 (var "SpecialSig")) (+ 1 (mapEntry "Throw" (count Pips))) (mapEntry "Throw" (count Pips))))))) (then (forEach Site (sites Track Mover "FirstTrack" from:(last From) to:(last To)) (if (!= (site) (last To)) (forEach Level (site) FromTop (if (is Enemy (who at:(site) level:(level))) (fromTo (from (site) level:(level)) (to 0)))))))) (if (is In (from) (sites Track "SecondTrack")) (move (from (from) level:(level)) (to (trackSite Move "SecondTrack" steps:(* 2 (if (= 1 (var "SpecialSig")) (+ 1 (mapEntry "Throw" (count Pips))) (mapEntry "Throw" (count Pips)))))) (then (forEach Site (sites Track Mover "SecondTrack" from:(last From) to:(last To)) (if (!= (site) (last To)) (forEach Level (site) FromTop (if (is Enemy (who at:(site) level:(level))) (fromTo (from (site) level:(level)) (to 0))))))))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 0) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 1))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 11) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 12))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 12) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 13))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 24) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 25))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 25) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 26))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 26) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 28))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 28) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 27))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 27) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 29))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 29) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 30))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 23) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 25)))}))) (piece "Mother" Each (if (= 30 (where "Djinn" Mover)) (or {(if (and (!= (from) 0) (is In (from) (sites Track "FirstTrack"))) (move (from (from) level:(level)) (to (trackSite Move "FirstTrack" steps:(if (= 1 (var "SpecialSig")) (+ 1 (mapEntry "Throw" (count Pips))) (mapEntry "Throw" (count Pips)))))) (then (forEach Site (sites Track Mover "FirstTrack" from:(last From) to:(last To)) (if (!= (site) (last To)) (forEach Level (site) FromTop (if (is Enemy (who at:(site) level:(level))) (fromTo (from (site) level:(level)) (to 0)))))))) (if (is In (from) (sites Track "SecondTrack")) (move (from (from) level:(level)) (to (trackSite Move "SecondTrack" steps:(if (= 1 (var "SpecialSig")) (+ 1 (mapEntry "Throw" (count Pips))) (mapEntry "Throw" (count Pips))))) (then (forEach Site (sites Track Mover "SecondTrack" from:(last From) to:(last To)) (if (!= (site) (last To)) (forEach Level (site) FromTop (if (is Enemy (who at:(site) level:(level))) (fromTo (from (site) level:(level)) (to 0))))))))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 0) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 1))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 11) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 12))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 12) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 13))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 24) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 25))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 25) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 26))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 26) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 28))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 28) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 27))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 27) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 29))) (if (and {(= (mapEntry "Throw" (count Pips)) 1) (= (from) 29) (if (not (is Prev Mover)) True (= 1 (var "SpecialSig")))}) (move (from (from) level:(level)) (to 30)))}))) (map "Throw" {(pair 0 12) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4) (pair 5 1) (pair 6 6)}) (map "ExtraThrow" {(pair 0 3) (pair 1 1) (pair 2 0) (pair 3 0) (pair 4 0) (pair 5 1) (pair 6 1)})}) (rules (start {(place Stack "Father1" 0) (place Stack "Djinn1" 0) (place Stack "Mother1" 0) (place Stack "Father2" 0) (place Stack "Djinn2" 0) (place Stack "Mother2" 0) (place Stack "Father3" 0) (place Stack "Djinn3" 0) (place Stack "Mother3" 0) (place Stack "Father4" 0) (place Stack "Djinn4" 0) (place Stack "Mother4" 0)}) (play (do (roll) next:(if (can Move (forEach Piece)) (forEach Piece) (move Pass)) (then (if (!= 0 (mapEntry "ExtraThrow" (count Pips))) (and (if (= 3 (mapEntry "ExtraThrow" (count Pips))) (if (<= (var) 0) (set Var 2))) (if (!= (mover) (prev)) (and (moveAgain) (if (!= 1 (mapEntry "Throw" (count Pips))) (set Var "SpecialSig" 1))))) (if (> (var) 0) (and {(set Var (- (var) 1)) (moveAgain)}) (set Var "SpecialSig" 0)))))) (end (if (and {(= 30 (where "Djinn" Mover)) (= 30 (where "Father" Mover)) (= 30 (where "Mother" Mover))}) (result Mover Win))))) 