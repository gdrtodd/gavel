(game "Bao" (players 2) (equipment {(mancalaBoard 4 8 store:None {(track "TrackCCW1" "0,E,N1,W" loop:True P1) (track "TrackCCW2" "16,E,N1,W" loop:True P2) (track "TrackCW1" "7,W,N1,E" loop:True P1) (track "TrackCW2" "23,W,N1,E" loop:True P2)}) (piece "Seed" Shared) (hand Each) (regions "Home" P1 (expand (sites Bottom))) (regions "Home" P2 (expand (sites Top))) (regions "Inner" P1 (sites Row 1)) (regions "Inner" P2 (sites Row 2)) (regions "SquaresHoles" (sites {19 12})) (regions "RightSquare" (sites {18 13})) (map "LeftMostInner" {(pair P1 8) (pair P2 23)}) (map "RightMostInner" {(pair P1 15) (pair P2 16)}) (map "AdjacentLeftMostInner" {(pair P1 9) (pair P2 22)}) (map "AdjacentRightMostInner" {(pair P1 14) (pair P2 17)})}) (rules (start {(set Count 22 at:(handSite P1)) (set Count 22 at:(handSite P2)) (set Count 6 to:(sites "SquaresHoles")) (set Count 2 to:(sites "RightSquare"))}) (play (if (is Prev Mover) (if (is Pending) (or (if (or (= 1 (var "Side")) (= 0 (var "Side"))) (do (fromTo (from (if (is Mover P1) (+ (last To afterConsequence:True) 8) (- (last To afterConsequence:True) 8))) (to (mapEntry "LeftMostInner" Mover)) count:(count at:(if (is Mover P1) (+ (last To afterConsequence:True) 8) (- (last To afterConsequence:True) 8)))) next:(move Select (from (mapEntry "LeftMostInner" Mover)) (then (sow count:(if (!= (value Player Mover) 1) (if (is In (last From) (sites "SquaresHoles")) (if (<= (count at:(from)) 6) (count at:(last From)) (min 1 (count at:(last From)))) (count at:(last From))) (count at:(last From))) "TrackCW" owner:(mover) apply:(if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (and {(moveAgain) (set Pending) (if (is In (to) (expand (sites Right))) (set Var "Side" 2) (if (is In (to) (expand (sites Left))) (set Var "Side" 1) (set Var "Side" 0)))}) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 1)}) (set Var "Direction" 0)))) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 1)}) (set Var "Direction" 0)))) (then (if (and {(!= 1 (value Player Mover)) (is In (last From) (sites "SquaresHoles")) (< (count at:(last From)) 6)}) (set Value Mover 1)))))))) (if (or (= 2 (var "Side")) (= 0 (var "Side"))) (do (fromTo (from (if (is Mover P1) (+ (last To afterConsequence:True) 8) (- (last To afterConsequence:True) 8))) (to (mapEntry "RightMostInner" Mover)) count:(count at:(if (is Mover P1) (+ (last To afterConsequence:True) 8) (- (last To afterConsequence:True) 8)))) next:(move Select (from (mapEntry "RightMostInner" Mover)) (then (sow count:(if (!= (value Player Mover) 1) (if (is In (last From) (sites "SquaresHoles")) (if (<= (count at:(from)) 6) (count at:(last From)) (min 1 (count at:(last From)))) (count at:(last From))) (count at:(last From))) "TrackCCW" owner:(mover) apply:(if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (and {(moveAgain) (set Pending) (if (is In (to) (expand (sites Right))) (set Var "Side" 2) (if (is In (to) (expand (sites Left))) (set Var "Side" 1) (set Var "Side" 0)))}) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 2)}) (set Var "Direction" 0)))) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 2)}) (set Var "Direction" 0)))) (then (if (and {(!= 1 (value Player Mover)) (is In (last From) (sites "SquaresHoles")) (< (count at:(last From)) 6)}) (set Value Mover 1))))))))) (or (if (and (if (!= (var "Replay") (mapEntry "RightMostInner" Mover)) True (all Sites (difference (sites Mover "Inner") (mapEntry "RightMostInner" Mover)) if:(is Empty (site)))) (or (= (var "Direction") 1) (= (var "Direction") 3))) (move Select (from (var "Replay")) (then (sow count:(if (!= (value Player Mover) 1) (if (is In (last From) (sites "SquaresHoles")) (if (<= (count at:(from)) 6) (count at:(last From)) (min 1 (count at:(last From)))) (count at:(last From))) (count at:(last From))) "TrackCW" owner:(mover) apply:(if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (and {(moveAgain) (set Pending) (if (is In (to) (expand (sites Right))) (set Var "Side" 2) (if (is In (to) (expand (sites Left))) (set Var "Side" 1) (set Var "Side" 0)))}) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 1)}) (set Var "Direction" 0)))) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 1)}) (set Var "Direction" 0)))) (then (if (and {(!= 1 (value Player Mover)) (is In (last From) (sites "SquaresHoles")) (< (count at:(last From)) 6)}) (set Value Mover 1))))))) (if (and (if (!= (var "Replay") (mapEntry "LeftMostInner" Mover)) True (all Sites (difference (sites Mover "Inner") (mapEntry "LeftMostInner" Mover)) if:(is Empty (site)))) (or (= (var "Direction") 2) (= (var "Direction") 3))) (move Select (from (var "Replay")) (then (sow count:(if (!= (value Player Mover) 1) (if (is In (last From) (sites "SquaresHoles")) (if (<= (count at:(from)) 6) (count at:(last From)) (min 1 (count at:(last From)))) (count at:(last From))) (count at:(last From))) "TrackCCW" owner:(mover) apply:(if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (and {(moveAgain) (set Pending) (if (is In (to) (expand (sites Right))) (set Var "Side" 2) (if (is In (to) (expand (sites Left))) (set Var "Side" 1) (set Var "Side" 0)))}) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 2)}) (set Var "Direction" 0)))) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 2)}) (set Var "Direction" 0)))) (then (if (and {(!= 1 (value Player Mover)) (is In (last From) (sites "SquaresHoles")) (< (count at:(last From)) 6)}) (set Value Mover 1))))))))) (if (is Occupied (handSite Mover)) (priority {(move (from (handSite Mover)) (to (sites Mover "Inner") if:(and (is Occupied (to)) (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))))) count:1 (then (and {(moveAgain) (set Pending) (if (is In (last To) (expand (sites Right))) (set Var "Side" 2) (if (is In (last To) (expand (sites Left))) (set Var "Side" 1) (set Var "Side" 0)))}))) (if (!= (value Player Mover) 1) (move (from (handSite Mover)) (to (difference (sites Mover "Inner") (sites "SquaresHoles")) if:(is Occupied (to))) count:1 (then (and {(moveAgain) (set Var "Replay" (last To)) (set Var "Direction" 3)}))) (move (from (handSite Mover)) (to (sites Mover "Inner") if:(is Occupied (to))) count:1 (then (and {(moveAgain) (set Var "Replay" (last To)) (set Var "Direction" 3)})))) (if (!= (value Player Mover) 1) (move (from (handSite Mover)) (to (intersection (sites "SquaresHoles") (sites Mover "Inner")) if:(is Occupied (to))) count:1 (then (and {(moveAgain) (set Var "Replay" (last To)) (set Var "Direction" 3)}))))}) (priority {(or (move Select (from (sites Mover) if:(and (or (< 1 (count at:(from))) (> 16 (count at:(from)))) (is Occupied (if (is Mover P1) (+ (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) 8) (- (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) 8))))) (then (sow "TrackCW" owner:(mover) apply:(if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (and {(moveAgain) (set Pending) (if (is In (to) (expand (sites Right))) (set Var "Side" 2) (if (is In (to) (expand (sites Left))) (set Var "Side" 1) (set Var "Side" 0)))}) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 1)}) (set Var "Direction" 0)))) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 1)}) (set Var "Direction" 0))))))) (move Select (from (sites Mover) if:(and (or (< 1 (count at:(from))) (> 16 (count at:(from)))) (is Occupied (if (is Mover P1) (+ (trackSite Move from:(from) "TrackCCW" steps:(count at:(from))) 8) (- (trackSite Move from:(from) "TrackCCW" steps:(count at:(from))) 8))))) (then (sow "TrackCCW" owner:(mover) apply:(if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (and {(moveAgain) (set Pending) (if (is In (to) (expand (sites Right))) (set Var "Side" 2) (if (is In (to) (expand (sites Left))) (set Var "Side" 1) (set Var "Side" 0)))}) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 2)}) (set Var "Direction" 0)))) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 2)}) (set Var "Direction" 0)))))))) (or (move Select (from (if (!= (value Player Mover) 1) (sites Mover) (difference (sites Mover) (sites "SquaresHoles"))) if:(or (< 1 (count at:(from))) (> 16 (count at:(from))))) (then (sow "TrackCW" owner:(mover) apply:(if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (and {(moveAgain) (set Pending) (if (is In (to) (expand (sites Right))) (set Var "Side" 2) (if (is In (to) (expand (sites Left))) (set Var "Side" 1) (set Var "Side" 0)))}) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 1)}) (set Var "Direction" 0)))) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 1)}) (set Var "Direction" 0))))))) (move Select (from (if (!= (value Player Mover) 1) (sites Mover) (difference (sites Mover) (sites "SquaresHoles"))) if:(or (< 1 (count at:(from))) (> 16 (count at:(from))))) (then (sow "TrackCCW" owner:(mover) apply:(if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (and {(moveAgain) (set Pending) (if (is In (to) (expand (sites Right))) (set Var "Side" 2) (if (is In (to) (expand (sites Left))) (set Var "Side" 1) (set Var "Side" 0)))}) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 2)}) (set Var "Direction" 0)))) (if (< 1 (count at:(to))) (if (or (= 1 (value Player Mover)) (and (!= 1 (value Player Mover)) (not (is In (to) (sites "SquaresHoles"))))) (and {(moveAgain) (set Var "Replay" (to)) (set Var "Direction" 2)}) (set Var "Direction" 0))))))))})))) (end (forEach Player if:(no Moves Player) (result Player Loss))))) 