(game "Dongjintian (Four Players)" (players 4) (equipment {(mancalaBoard 4 5 store:None) (piece "Seed" Shared) (hand Each) (regions "ProtectingHoles" (sites {7 12}))}) (rules (start (set Count 5 to:(sites Board))) (play (if (and (is Prev Mover) (!= 0 (var "NumToSow"))) (if (can Move (move Select (from (last To)) (to (difference (sites Around (last To)) (sites (values Remembered "SowedSites")))) (then (and (add (piece (id "Seed" Shared)) (to (last To))) (if (< 1 (var "NumToSow")) (and {(set Var "NumToSow" (- (var "NumToSow") 1)) (moveAgain) (remember Value "SowedSites" (last From))}) (and {(forget Value "SowedSites" All) (set Var "NumToSow" 0) (if (!= (last To) (ahead (last To) steps:1 (directions Vertex from:(last From) to:(last To)))) (if (is Occupied (ahead (last To) steps:1 (directions Vertex from:(last From) to:(last To)))) (moveAgain) (if (!= (last To) (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (if (is Occupied (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (and (fromTo (from (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (to (handSite Mover)) count:(count at:(ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To))))) (if (and (!= (last To) (ahead (last To) steps:3 (directions Vertex from:(last From) to:(last To)))) (!= (last To) (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To))))) (if (and (is Occupied (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To)))) (is Empty (ahead (last To) steps:3 (directions Vertex from:(last From) to:(last To))))) (fromTo (from (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To)))) (to (handSite Mover)) count:(count at:(ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To))))))))))))})))))) (move Select (from (last To)) (to (difference (sites Around (last To)) (sites (values Remembered "SowedSites")))) (then (and (add (piece (id "Seed" Shared)) (to (last To))) (if (< 1 (var "NumToSow")) (and {(set Var "NumToSow" (- (var "NumToSow") 1)) (moveAgain) (remember Value "SowedSites" (last From))}) (and {(forget Value "SowedSites" All) (set Var "NumToSow" 0) (if (!= (last To) (ahead (last To) steps:1 (directions Vertex from:(last From) to:(last To)))) (if (is Occupied (ahead (last To) steps:1 (directions Vertex from:(last From) to:(last To)))) (moveAgain) (if (!= (last To) (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (if (is Occupied (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (and (fromTo (from (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (to (handSite Mover)) count:(count at:(ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To))))) (if (and (!= (last To) (ahead (last To) steps:3 (directions Vertex from:(last From) to:(last To)))) (!= (last To) (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To))))) (if (and (is Occupied (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To)))) (is Empty (ahead (last To) steps:3 (directions Vertex from:(last From) to:(last To))))) (fromTo (from (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To)))) (to (handSite Mover)) count:(count at:(ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To))))))))))))}))))) (do (and {(add (piece (id "Seed" Shared)) (to (last To)) count:(var "NumToSow")) (forget Value "SowedSites" All) (set Var "NumToSow" 0)}) next:(move Pass))) (if (is Prev Mover) (move (from (ahead (last To) steps:1 (directions Vertex from:(last From) to:(last To)))) (to (sites Around (from))) (then (and {(if (is Occupied (last From)) (and {(moveAgain) (set Var "NumToSow" (count at:(last From))) (remember Value "SowedSites" (last From))}) (if (!= (last To) (ahead (last To) steps:1 (directions Vertex from:(last From) to:(last To)))) (if (is Occupied (ahead (last To) steps:1 (directions Vertex from:(last From) to:(last To)))) (moveAgain) (if (!= (last To) (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (if (is Occupied (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (and (fromTo (from (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (to (handSite Mover)) count:(count at:(ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To))))) (if (and (!= (last To) (ahead (last To) steps:3 (directions Vertex from:(last From) to:(last To)))) (!= (last To) (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To))))) (if (and (is Occupied (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To)))) (is Empty (ahead (last To) steps:3 (directions Vertex from:(last From) to:(last To))))) (fromTo (from (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To)))) (to (handSite Mover)) count:(count at:(ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To))))))))))))) (remove (last From) count:(count at:(last From)))}))) (move (from (sites Board) if:(is Occupied (from))) (to (sites Around (from))) (then (and {(if (is Occupied (last From)) (and {(moveAgain) (set Var "NumToSow" (count at:(last From))) (remember Value "SowedSites" (last From))}) (if (!= (last To) (ahead (last To) steps:1 (directions Vertex from:(last From) to:(last To)))) (if (is Occupied (ahead (last To) steps:1 (directions Vertex from:(last From) to:(last To)))) (moveAgain) (if (!= (last To) (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (if (is Occupied (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (and (fromTo (from (ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To)))) (to (handSite Mover)) count:(count at:(ahead (last To) steps:2 (directions Vertex from:(last From) to:(last To))))) (if (and (!= (last To) (ahead (last To) steps:3 (directions Vertex from:(last From) to:(last To)))) (!= (last To) (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To))))) (if (and (is Occupied (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To)))) (is Empty (ahead (last To) steps:3 (directions Vertex from:(last From) to:(last To))))) (fromTo (from (ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To)))) (to (handSite Mover)) count:(count at:(ahead (last To) steps:4 (directions Vertex from:(last From) to:(last To))))))))))))) (remove (last From) count:(count at:(last From)))})))))) (end (if (<= (count Pieces All in:(sites Board)) 1) (byScore {(score P1 (count Cell at:(handSite P1))) (score P2 (count Cell at:(handSite P2))) (score P3 (count Cell at:(handSite P3))) (score P4 (count Cell at:(handSite P4)))}))))) 