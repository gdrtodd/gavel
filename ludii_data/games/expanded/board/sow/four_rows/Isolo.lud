(game "Isolo" (players 2) (equipment {(mancalaBoard 4 8 store:None {(track "TrackCCW1" "0,E,N1,W" loop:True P1) (track "TrackCCW2" "16,E,N1,W" loop:True P2)}) (regions "Home" P1 (sites Track "TrackCCW1")) (regions "Home" P2 (sites Track "TrackCCW2")) (regions "Inner" P1 (difference (sites Track "TrackCCW1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "TrackCCW2") (sites Top))) (regions "Outer" P1 (sites Bottom)) (regions "Outer" P2 (sites Top)) (piece "Seed" Shared) (hand Each) (map "RightmostOuter" {(pair P1 7) (pair P2 24)}) (map "RightmostInner" {(pair P1 15) (pair P2 16)}) (map "SecondRightmostInner" {(pair P1 14) (pair P2 17)})}) (rules (start (set Count 2 to:(union (sites P1 "Home") (sites P2 "Home")))) phases:{(phase "Opening1" (play (forEach Site (difference (sites Mover "Outer") (mapEntry "RightmostOuter" Mover)) (if (is Occupied (site)) (move (from (site)) (to (mapEntry "RightmostOuter" Mover)) count:(count at:(site)))))) (nextPhase Mover (all Sites (difference (sites Mover "Outer") (mapEntry "RightmostOuter" Mover)) if:(is Empty (site))) "Opening2")) (phase "Opening2" (play (forEach Site (sites Mover "Inner") (if (= 2 (count at:(site))) (move (from (site)) (to (if (is Mover P1) (- (site) 8) (+ (site) 8))) count:1)))) (nextPhase Mover (all Sites (sites Mover "Inner") if:(= (count at:(site)) 1)) "Opening3")) (phase "Opening3" (play (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites {(mapEntry "RightmostInner" Mover)}))) (then (sow "TrackCCW" owner:(mover) apply:(if (!= (to) (mapEntry "RightmostOuter" Mover)) (moveAgain) (fromTo (from (to)) (to (mapEntry "SecondRightmostInner" Mover)) count:1)))))) (nextPhase Mover (not (is Next Mover)) "InitialSowing")) (phase "InitialSowing" (play (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(is Occupied (from))) (then (sow "TrackCCW" owner:(mover) apply:(if (< 1 (count at:(to))) (if (is In (to) (sites Mover "Inner")) (if (or (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (is Occupied (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2))))) (and {(if (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (fromTo (from (if (is Mover P1) (+ (to) 8) (- (to) 8))) (to (last From)) count:(count at:(if (is Mover P1) (+ (to) 8) (- (to) 8))))) (if (is Occupied (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (fromTo (from (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (to (last From)) count:(count at:(if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))))) (sow (last From) count:(+ (count at:(if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (count at:(if (is Mover P1) (+ (to) 8) (- (to) 8)))) "TrackCCW" owner:(mover) skipIf:(is In (to) (sites {(mapEntry "RightmostOuter" Mover) (mapEntry "RightmostInner" Mover)})))}) (moveAgain)) (moveAgain))) skipIf:(is In (to) (sites {(mapEntry "RightmostOuter" Mover) (mapEntry "RightmostInner" Mover)})))))) (nextPhase Mover (is In (last From) (sites {(mapEntry "RightmostOuter" Mover) (mapEntry "RightmostInner" Mover)})) "InitialSowing")) (phase "Sowing" (play (move Select (from (sites Mover "Home") if:(is Occupied (from))) (then (sow "TrackCCW" owner:(mover) apply:(if (< 1 (count at:(to))) (if (is In (to) (sites Mover "Inner")) (if (or (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (is Occupied (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2))))) (and {(if (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (fromTo (from (if (is Mover P1) (+ (to) 8) (- (to) 8))) (to (last From)) count:(count at:(if (is Mover P1) (+ (to) 8) (- (to) 8))))) (if (is Occupied (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (fromTo (from (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (to (last From)) count:(count at:(if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))))) (sow (last From) count:(+ (count at:(if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (count at:(if (is Mover P1) (+ (to) 8) (- (to) 8)))) "TrackCCW" owner:(mover))}) (moveAgain)) (moveAgain))))))))} (end (forEach Player if:(no Moves Player) (result Player Loss))))) 