(game "Mwambulula" (players 2) (equipment {(mancalaBoard 4 8 store:None {(track "Track1" "0,E,N1,W" loop:True P1) (track "Track2" "16,E,N1,W" loop:True P2)}) (regions "Home" P1 (sites Track "Track1")) (regions "Home" P2 (sites Track "Track2")) (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "Track2") (sites Top))) (piece "Seed" Shared) (hand Each)}) (rules (start (set Count 2 to:(union (sites P1 "Home") (sites P2 "Home")))) phases:{(phase "Opening" (play (move (from (sites Mover "Inner") if:(is Occupied (from))) (to Cell (handSite Mover)) count:2)) (nextPhase Mover (all Sites (sites Mover "Inner") if:(= 0 (count at:(site)))) "Sowing")) (phase "Sowing" (play (or (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(> (count at:(from)) 0)) (then (sow "Track" owner:(mover) apply:(if (< 1 (count at:(to))) (if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8))) (and {(fromTo (from (if (is Mover P1) (+ (to) 8) (- (to) 8))) (to (last From)) count:(count at:(if (is Mover P1) (+ (to) 8) (- (to) 8)))) (if (is Occupied (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (fromTo (from (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (to (last From)) count:(count at:(if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))))) (sow (last From) count:(+ (count at:(if (is Mover P1) (+ (to) 8) (- (to) 8))) (count at:(if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2))))) "Track" owner:(mover))}) (moveAgain)) (if (is Occupied (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (and {(fromTo (from (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (to (last From)) count:(count at:(if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2))))) (if (is Occupied (if (is Mover P1) (+ (to) (* 8 3)) (- (to) (* 8 3)))) (fromTo (from (if (is Mover P1) (+ (to) (* 8 3)) (- (to) (* 8 3)))) (to (last From)) count:(count at:(if (is Mover P1) (+ (to) (* 8 3)) (- (to) (* 8 3)))))) (sow (last From) count:(+ (count at:(if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (count at:(if (is Mover P1) (+ (to) (* 8 3)) (- (to) (* 8 3))))) "Track" owner:(mover))}) (moveAgain))))))) (if (and (not (is Prev Mover)) (is Occupied Cell (handSite Mover))) (move Select (from Cell (handSite Mover)) (then (forEach Site (sites Mover "Home") (fromTo (from Cell (handSite Mover)) (to (site))))))))))} (end (forEach NonMover if:(no Moves Player) (result Player Loss))))) 