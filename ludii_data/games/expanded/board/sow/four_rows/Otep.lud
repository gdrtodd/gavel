(game "Otep" (players 2) (equipment {(mancalaBoard 4 8 store:None {(track "Track1" "0,E,N1,W" loop:True P1) (track "Track2" "16,E,N1,W" loop:True P2)}) (regions "Home" P1 (sites Track "Track1")) (regions "Home" P2 (sites Track "Track2")) (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "Track2") (sites Top))) (piece "Seed" Shared) (map "SecondRightOuter" {(pair P1 14) (pair P2 17)}) (map "RightOuter" {(pair P1 15) (pair P2 16)}) (hand Each)}) (rules (start (set Count 2 to:(sites Board))) phases:{(phase "Opening1" (play (move Select (from (mapEntry "SecondRightOuter" Mover)) (then (sow "Track" owner:(mover) apply:(and (fromTo (from (if (is Mover P1) (+ (last From) 8) (- (last From) 8))) (to (mapEntry "RightOuter" Mover)) count:2) (fromTo (from (if (is Mover P1) (+ (last From) (* 8 2)) (- (last From) (* 8 2)))) (to (mapEntry "RightOuter" Mover)) count:2)))))) (nextPhase Mover "Opening2")) (phase "Opening2" (play (move Select (from (mapEntry "RightOuter" Mover)) (then (sow "Track" owner:(mover) apply:(and (fromTo (from (if (is Mover P1) (+ (last From) 8) (- (last From) 8))) (to (mapEntry "RightOuter" Mover)) count:2) (fromTo (from (if (is Mover P1) (+ (last From) (* 8 2)) (- (last From) (* 8 2)))) (to (mapEntry "RightOuter" Mover)) count:2)))))) (nextPhase Mover "Opening3")) (phase "Opening3" (play (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites {(mapEntry "RightOuter" Mover)}))) (then (sow "Track" owner:(mover) apply:(if (< 1 (count at:(to))) (moveAgain)))))) (nextPhase Mover (not (is Next Prev)) "Sowing")) (phase "Sowing" (play (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover)) if:(> (count at:(from)) 1)) (then (sow "Track" owner:(mover) apply:(if (and {(is In (to) (sites Mover "Inner")) (< 1 (count at:(to))) (is Occupied (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (is Occupied (if (is Mover P1) (+ (to) 8) (- (to) 8)))}) (and {(fromTo (from (if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2)))) (to (last From)) count:(count at:(if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2))))) (fromTo (from (if (is Mover P1) (+ (to) 8) (- (to) 8))) (to (last From)) count:(count at:(if (is Mover P1) (+ (to) 8) (- (to) 8)))) (sow (last From) count:(+ (count at:(if (is Mover P1) (+ (to) 8) (- (to) 8))) (count at:(if (is Mover P1) (+ (to) (* 8 2)) (- (to) (* 8 2))))) "Track" owner:(mover))}) (if (< 1 (count at:(to))) (moveAgain))))))))} (end (forEach Player if:(no Moves Player) (result Player Loss))))) 