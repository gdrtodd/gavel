(game "Abalala'e" (players 2) (equipment {(mancalaBoard 3 6 store:None {(track "Track" "0,E,N1,W5,N1,E" loop:True P1) (track "Track" "17,W,S1,E5,S1,W" loop:True P2)}) (regions "Home" P1 (union (sites Bottom) (sites {"D2" "E2" "F2"}))) (regions "Home" P2 (union (sites Top) (sites {"A2" "B2" "C2"}))) (regions "LeftPart" P1 (sites {"A1" "B1" "C1"})) (regions "LeftPart" P2 (sites {"D3" "E3" "F3"})) (regions "MiddleRow" (sites {"A2" "B2" "C2" "D2" "E2" "F2"})) (map "LeftHole" {(pair P1 0) (pair P2 17)}) (piece "Seed" Shared) (hand Each)}) (rules (start (set Count 3 to:(union (sites P1 "Home") (sites P2 "Home")))) (play (move Select (from (if (is Prev Mover) (if (is Pending) (sites Pending) (sites {(last To afterConsequence:True)})) (sites Mover "Home")) if:(> (count at:(from)) 0)) (then (sow count:(if (is Pending) 1 (count at:(last To))) "Track" owner:(mover) apply:(if (> (count at:(to)) 1) (moveAgain) (if (is In (to) (sites Mover "Home")) (if (is In (to) (sites "MiddleRow")) (if (> (count at:(if (is Mover P1) (+ (to) 6) (- (to) 6))) 0) (and {(fromTo (from (if (is Mover P1) (+ (to) 6) (- (to) 6))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (+ (to) 6) (- (to) 6)))) (moveAgain) (set Pending (to))})) (if (is In (to) (sites Mover "LeftPart")) (and {(if (> (count at:(if (is Mover P1) (+ (to) 6) (- (to) 6))) 0) (and {(fromTo (from (if (is Mover P1) (+ (to) 6) (- (to) 6))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (+ (to) 6) (- (to) 6)))) (moveAgain) (set Pending (to))})) (if (> (count at:(if (is Mover P1) (+ (to) (* 6 2)) (- (to) (* 6 2)))) 0) (and {(fromTo (from (if (is Mover P1) (+ (to) (* 6 2)) (- (to) (* 6 2)))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (+ (to) (* 6 2)) (- (to) (* 6 2))))) (moveAgain) (set Pending (to))}))}) (if (> (count at:(if (is Mover P1) (+ (to) (* 6 2)) (- (to) (* 6 2)))) 0) (and {(fromTo (from (if (is Mover P1) (+ (to) (* 6 2)) (- (to) (* 6 2)))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (+ (to) (* 6 2)) (- (to) (* 6 2))))) (moveAgain) (set Pending (to))})))))))))) (end (if (or {(all Sites (sites P1 "Home") if:(= 0 (count at:(site)))) (all Sites (sites P2 "Home") if:(= 0 (count at:(site))))}) (byScore {(score P1 (+ (count Cell at:(handSite P1)) (count in:(sites P1)))) (score P2 (+ (count Cell at:(handSite P2)) (count in:(sites P2))))}))))) 