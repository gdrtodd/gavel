(game "Selus" (players 2) (equipment {(mancalaBoard 3 6 store:None (track "Track" "0,E,N1,W2,17,W,S1,E2" loop:True)) (piece "Seed" Shared) (hand Each) (regions "Home" P1 (union (intersection (sites Row 1) (expand (sites Right) steps:2)) (sites Bottom))) (regions "Home" P2 (union (intersection (sites Row 1) (expand (sites Left) steps:2)) (sites Top))) (regions "ThreeLeftMost" P1 (intersection (sites Bottom) (expand (sites Left) steps:2))) (regions "ThreeLeftMost" P2 (intersection (sites Top) (expand (sites Right) steps:2)))}) (rules (start (set Count 3 to:(sites Board))) (play (priority {(move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover)) if:(< 3 (count at:(site)))) (then (do (set Var "NumSowed" (count at:(last From))) next:(sow apply:(if (< 1 (count at:(to))) (if (and {(= 0 (state at:(to))) (= 4 (count at:(to))) (all Sites (sites Board) if:(!= (mover) (state at:(site)))) (is In (to) (sites Next))}) (set State at:(to) (mover)) (and (moveAgain) (set Var "Replay" (to))))) skipIf:(and (= 3 (count at:(to))) (is In (to) (sites Next))))))) (if (all Sites (intersection (sites Mover "Home") (sites Mover "ThreeLeftMost")) if:(or (= 2 (count at:(site))) (= 3 (count at:(site))))) (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover)) if:(= 2 (count at:(site)))) (then (do (set Var "NumSowed" (count at:(last From))) next:(sow apply:(if (< 1 (count at:(to))) (if (and {(= 0 (state at:(to))) (= 4 (count at:(to))) (all Sites (sites Board) if:(!= (mover) (state at:(site)))) (is In (to) (sites Next))}) (set State at:(to) (mover)) (and (moveAgain) (set Var "Replay" (to))))) skipIf:(and (= 3 (count at:(to))) (is In (to) (sites Next)))))))) (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover)) if:(and (is Occupied (from)) (if (is Prev Mover) True (if (is In (to) (sites Mover "ThreeLeftMost")) (< 3 (count at:(to))) True)))) (then (do (set Var "NumSowed" (count at:(last From))) next:(sow apply:(if (< 1 (count at:(to))) (if (and {(= 0 (state at:(to))) (= 4 (count at:(to))) (all Sites (sites Board) if:(!= (mover) (state at:(site)))) (is In (to) (sites Next))}) (set State at:(to) (mover)) (and (moveAgain) (set Var "Replay" (to))))) skipIf:(and (= 3 (count at:(to))) (is In (to) (sites Next))))))) (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover "ThreeLeftMost")) if:(and (= 1 (count at:(from))) (is Occupied (from)))) (then (do (set Var "NumSowed" (count at:(last From))) next:(sow apply:(if (< 1 (count at:(to))) (if (and {(= 0 (state at:(to))) (= 4 (count at:(to))) (all Sites (sites Board) if:(!= (mover) (state at:(site)))) (is In (to) (sites Next))}) (set State at:(to) (mover)) (and (moveAgain) (set Var "Replay" (to))))) skipIf:(and (= 3 (count at:(to))) (is In (to) (sites Next))))))) (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover "ThreeLeftMost")) if:(and (= 2 (count at:(from))) (is Occupied (from)))) (then (do (set Var "NumSowed" (count at:(last From))) next:(sow apply:(if (< 1 (count at:(to))) (if (and {(= 0 (state at:(to))) (= 4 (count at:(to))) (all Sites (sites Board) if:(!= (mover) (state at:(site)))) (is In (to) (sites Next))}) (set State at:(to) (mover)) (and (moveAgain) (set Var "Replay" (to))))) skipIf:(and (= 3 (count at:(to))) (is In (to) (sites Next))))))) (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover "ThreeLeftMost")) if:(and (= 3 (count at:(from))) (is Occupied (from)))) (then (do (set Var "NumSowed" (count at:(last From))) next:(sow apply:(if (< 1 (count at:(to))) (if (and {(= 0 (state at:(to))) (= 4 (count at:(to))) (all Sites (sites Board) if:(!= (mover) (state at:(site)))) (is In (to) (sites Next))}) (set State at:(to) (mover)) (and (moveAgain) (set Var "Replay" (to))))) skipIf:(and (= 3 (count at:(to))) (is In (to) (sites Next)))))))})) (end (if (no Moves Next) (result Mover Win))))) 