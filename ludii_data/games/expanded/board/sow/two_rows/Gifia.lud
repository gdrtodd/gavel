(game "Gifia" (players 2) (equipment {(mancalaBoard 2 4 {(track "TrackCCW" "1,E,N,W" loop:True) (track "TrackCW" "4,W,N,E" loop:True)}) (regions P1 (difference (expand (sites Left) steps:2) (sites Left))) (regions P2 (difference (expand (sites Right) steps:2) (sites Right))) (map {(pair P1 FirstSite) (pair P2 LastSite)}) (piece "Seed" Shared)}) (rules (start (set Count 6 to:(sites Track))) phases:{(phase "Sowing" (play (if (is Prev Mover) (or (move (from (ahead (last To afterConsequence:True) W)) (to (mapEntry Mover)) count:(count at:(ahead (last To afterConsequence:True) W))) (move (from (ahead (last To afterConsequence:True) E)) (to (mapEntry Mover)) count:(count at:(ahead (last To afterConsequence:True) E)))) (or (move Select (from (sites Mover) if:(is Occupied (from))) (then (sow "TrackCCW" apply:(if (or (= 2 (count at:(to))) (= 4 (count at:(to)))) (and {(fromTo (from (to)) (to (mapEntry Mover)) count:(count at:(to))) (if (!= (to) (ahead (to) W)) (if (or (= 2 (count at:(ahead (to) W))) (= 4 (count at:(ahead (to) W)))) (fromTo (from (ahead (to) W)) (to (mapEntry Mover)) count:(count at:(ahead (to) W))))) (if (!= (to) (ahead (to) E)) (if (or (= 2 (count at:(ahead (to) E))) (= 4 (count at:(ahead (to) E)))) (fromTo (from (ahead (to) E)) (to (mapEntry Mover)) count:(count at:(ahead (to) E)))))}) (if (and (if (!= (to) (ahead (to) W)) (if (or (= 2 (count at:(ahead (to) W))) (= 4 (count at:(ahead (to) W)))) False)) (if (!= (to) (ahead (to) E)) (if (or (= 2 (count at:(ahead (to) E))) (= 4 (count at:(ahead (to) E)))) False))) (moveAgain)))))) (move Select (from (sites Mover) if:(is Occupied (from))) (then (sow "TrackCW" apply:(if (or (= 2 (count at:(to))) (= 4 (count at:(to)))) (and {(fromTo (from (to)) (to (mapEntry Mover)) count:(count at:(to))) (if (!= (to) (ahead (to) W)) (if (or (= 2 (count at:(ahead (to) W))) (= 4 (count at:(ahead (to) W)))) (fromTo (from (ahead (to) W)) (to (mapEntry Mover)) count:(count at:(ahead (to) W))))) (if (!= (to) (ahead (to) E)) (if (or (= 2 (count at:(ahead (to) E))) (= 4 (count at:(ahead (to) E)))) (fromTo (from (ahead (to) E)) (to (mapEntry Mover)) count:(count at:(ahead (to) E)))))}) (if (and (if (!= (to) (ahead (to) W)) (if (or (= 2 (count at:(ahead (to) W))) (= 4 (count at:(ahead (to) W)))) False)) (if (!= (to) (ahead (to) E)) (if (or (= 2 (count at:(ahead (to) E))) (= 4 (count at:(ahead (to) E)))) False))) (moveAgain))))))) (then (if (and (>= 1 (count Pieces All in:(sites P1))) (>= 1 (count Pieces All in:(sites P2)))) (and (forEach Site (sites P1) (fromTo (from (site)) (to (mapEntry P1)) count:(count at:(site)))) (forEach Site (sites P2) (fromTo (from (site)) (to (mapEntry P2)) count:(count at:(site))))))))) (end (if (no Pieces All in:(union (sites Top) (sites Bottom))) {(if (> 6 (count at:(mapEntry P1))) (result P2 Win)) (if (> 6 (count at:(mapEntry P2))) (result P1 Win))})) (nextPhase (no Pieces All in:(union (sites Top) (sites Bottom))) "BetweenRounds")) (phase "BetweenRounds" (play (if (not (all Sites (sites Mover) if:(is Occupied (site)))) (if (<= 6 (count at:(mapEntry Mover))) (move (from (mapEntry Mover)) (to (sites Mover) if:(is Empty (to))) count:6)))) (nextPhase (all Passed) "Sowing"))})) 