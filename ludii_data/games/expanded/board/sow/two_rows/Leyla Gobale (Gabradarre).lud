(game "Leyla Gobale (Gabradarre)" (players 2) (equipment {(mancalaBoard 2 6 store:None (track "TrackCCW" "0,E,N,W" loop:True)) (piece "Seed" Shared) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (hand Each) (map "CorrespondingHoles" {(pair 0 11) (pair 1 10) (pair 2 9) (pair 3 8) (pair 4 7) (pair 5 6) (pair 6 5) (pair 7 4) (pair 8 3) (pair 9 2) (pair 10 1) (pair 11 0)})}) (rules (start {(set RememberValue "Playable" (union (sites Top) (sites Bottom))) (set Count 5 to:(sites Track))}) phases:{(phase "Sowing" (play (or {(move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover)) if:(and {(is Occupied (from)) (= 0 (state at:(from))) (is In (from) (sites (values Remembered "Playable")))})) (then (sow apply:(if (< 1 (count at:(to))) (if (= 0 (state at:(to))) (and (moveAgain) (set Var "Replay" (to)))) (if (is In (to) (sites Mover)) (if (!= 3 (count at:(if (is In (to) (sites Bottom)) (+ (to) 6) (- (to) 6)))) (if (!= 0 (count at:(if (is In (to) (sites Bottom)) (+ (to) 6) (- (to) 6)))) (fromTo (from (if (is In (to) (sites Bottom)) (+ (to) 6) (- (to) 6))) (to (handSite Mover)) count:(count at:(if (is In (to) (sites Bottom)) (+ (to) 6) (- (to) 6))))) (and {(fromTo (from (if (is In (to) (sites Bottom)) (+ (to) 6) (- (to) 6))) (to (to)) count:1) (set State at:(to) (mover)) (set State at:(if (is In (to) (sites Bottom)) (+ (to) 6) (- (to) 6)) (mover))})))))))} (then (if (and (not (is Next Mover)) (or (all Sites (sites P1) if:(or (not (is In (site) (sites (values Remembered "Playable")))) (or (!= 0 (state at:(site))) (is Empty (site))))) (all Sites (sites P2) if:(or (not (is In (site) (sites (values Remembered "Playable")))) (or (!= 0 (state at:(site))) (is Empty (site))))))) (and {(forEach Site (sites P1) (if (= 0 (state at:(site))) (fromTo (from (site)) (to (handSite P1)) count:(count at:(site))))) (forEach Site (sites P2) (if (= 0 (state at:(site))) (fromTo (from (site)) (to (handSite P2)) count:(count at:(site))))) (forEach Site (sites Board) (if (= (state at:(site)) P1) (fromTo (from (site)) (to (handSite P1)) count:(count at:(site))) (if (= (state at:(site)) P2) (fromTo (from (site)) (to (handSite P2)) count:(count at:(site)))))) (if (< (+ {(count Cell at:(handSite P1)) (count in:(forEach (sites Board) if:(= (state at:(site)) P1))) (count in:(forEach (sites P1) if:(= (state at:(site)) 0)))}) (+ {(count Cell at:(handSite P2)) (count in:(forEach (sites Board) if:(= (state at:(site)) P2))) (count in:(forEach (sites P2) if:(= (state at:(site)) 0)))})) (set NextPlayer (player 1)) (set NextPlayer (player 2))) (forget Value "Playable" All)}))))) (end (if (all Sites (sites Board) if:(= 0 (count at:(site)))) {(if (= 0 (count Cell at:(handSite P1))) (result P2 Win)) (if (= 0 (count Cell at:(handSite P2))) (result P1 Win))})) (nextPhase (all Sites (sites Board) if:(= 0 (count at:(site)))) "BetweenRounds")) (phase "BetweenRounds" (play (move (from (handSite Mover)) (to (forEach (sites Mover) if:(= (count at:(site)) (min (results from:(sites Mover) to:(sites Mover) (count at:(to))))))) count:1 (then (and (remember Value "Playable" (last To) unique:True) (if (< 0 (count Cell at:(handSite Mover))) (moveAgain) (forEach Site (sites Mover) (if (is Occupied (site)) (fromTo (from (handSite Next)) (to (mapEntry "CorrespondingHoles" (site))) count:(count at:(site)))))))))) (nextPhase (or (is Empty (handSite P1)) (is Empty (handSite P2))) "Sowing"))})) 