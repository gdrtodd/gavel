(game "Raja Pasu Mandiri" (players 3) (equipment {(board (merge {(rectangle 1 7) (shift 0 2 (rectangle 1 7)) (shift 3 1 (square 1)) (shift 1 1 (square 1)) (shift 5 1 (square 1))}) {(track "Track" "6,W,7,E" loop:True)} use:Vertex) (piece "Seed" Shared) (map {(pair P1 15) (pair P2 14) (pair P3 16)})}) (rules (start {(set Count 7 to:(difference (sites Board) (sites Row 1))) (set RememberValue "Playable" (difference (sites Board) (sites Row 1)))}) phases:{(phase "Sowing" (play (or {(move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (if (is Mover P1) (if (> 3 (% (+ 1 (var "Round")) 9)) (sites {0 1 7 8}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {2 3 4 9 10 11}) (sites {5 6 12 13}))) (if (is Mover P2) (if (> 3 (% (+ 1 (var "Round")) 9)) (sites {2 3 4 9 10 11}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {5 6 12 13}) (sites {0 1 7 8}))) (if (> 3 (% (+ 1 (var "Round")) 9)) (sites {5 6 12 13}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {0 1 7 8}) (sites {2 3 4 9 10 11})))))) if:(and (is Occupied (from)) (is In (from) (sites (values Remembered "Playable"))))) (then (do (set Var "NumSowed" (count at:(last To))) next:(sow apply:(if (< 1 (count at:(to))) (and (moveAgain) (set Var "Replay" (to))) (if (is Occupied (trackSite Move from:(to) "Track" steps:1)) (fromTo (from (to)) (to (mapEntry Mover)) count:(count at:(to))))) skipIf:(not (is In (to) (sites (values Remembered "Playable"))))) (then (and (forEach Site (sites Track from:(last From) to:(trackSite Move from:(last From) "Track" steps:(var "NumSowed"))) (if (= 4 (count at:(site))) (fromTo (from (site)) (to (mapEntry Mover)) count:4))) (set Var "NumSowed" 0))))))} (then (if (> 4 (count in:(difference (sites Board) (sites Row 1)))) (and {(forEach Site (difference (sites Board) (sites Row 1)) (if (is Occupied (site)) (fromTo (from (site)) (to (mapEntry Mover)) count:(count at:(site))))) (if (and (= 6 (count Sites in:(if (> 3 (% (+ 1 (var "Round")) 9)) (sites {0 1 7 8}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {2 3 4 9 10 11}) (sites {5 6 12 13}))))) (< 2 (count at:(mapEntry P1)))) (and (fromTo (from (mapEntry P1)) (to (mapEntry P2)) count:1) (fromTo (from (mapEntry P1)) (to (mapEntry P3)) count:1)) (if (and (= 6 (count Sites in:(if (> 3 (% (+ 1 (var "Round")) 9)) (sites {2 3 4 9 10 11}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {5 6 12 13}) (sites {0 1 7 8}))))) (< 2 (count at:(mapEntry P2)))) (and (fromTo (from (mapEntry P2)) (to (mapEntry P1)) count:1) (fromTo (from (mapEntry P2)) (to (mapEntry P3)) count:1)) (if (and (= 6 (count Sites in:(if (> 3 (% (+ 1 (var "Round")) 9)) (sites {5 6 12 13}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {0 1 7 8}) (sites {2 3 4 9 10 11}))))) (< 2 (count at:(mapEntry P3)))) (and (fromTo (from (mapEntry P3)) (to (mapEntry P1)) count:1) (fromTo (from (mapEntry P3)) (to (mapEntry P2)) count:1))))) (set Var "Round" (+ 1 (var "Round"))) (forget Value "Playable" All)}))))) (end {(if (> 4 (count in:(difference (sites Board) (sites Row 1)))) {(if (> 7 (count at:(mapEntry P1))) (result P1 Loss)) (if (> 7 (count at:(mapEntry P2))) (result P2 Loss)) (if (> 7 (count at:(mapEntry P3))) (result P3 Loss))})}) (nextPhase (> 4 (count in:(difference (sites Board) (sites Row 1)))) "BetweenRounds")) (phase "BetweenRounds" (play (if (not (all Sites (if (is Mover P1) (if (> 3 (% (+ 1 (var "Round")) 9)) (sites {0 1 7 8}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {2 3 4 9 10 11}) (sites {5 6 12 13}))) (if (is Mover P2) (if (> 3 (% (+ 1 (var "Round")) 9)) (sites {2 3 4 9 10 11}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {5 6 12 13}) (sites {0 1 7 8}))) (if (> 3 (% (+ 1 (var "Round")) 9)) (sites {5 6 12 13}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {0 1 7 8}) (sites {2 3 4 9 10 11}))))) if:(is Occupied (site)))) (if (<= 7 (count at:(mapEntry Mover))) (move (from (mapEntry Mover)) (to (if (is Mover P1) (if (> 3 (% (+ 1 (var "Round")) 9)) (sites {0 1 7 8}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {2 3 4 9 10 11}) (sites {5 6 12 13}))) (if (is Mover P2) (if (> 3 (% (+ 1 (var "Round")) 9)) (sites {2 3 4 9 10 11}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {5 6 12 13}) (sites {0 1 7 8}))) (if (> 3 (% (+ 1 (var "Round")) 9)) (sites {5 6 12 13}) (if (> 6 (% (+ 1 (var "Round")) 9)) (sites {0 1 7 8}) (sites {2 3 4 9 10 11})))))) count:7 (then (remember Value "Playable" (last To))))))) (nextPhase (all Passed) "Sowing"))})) 