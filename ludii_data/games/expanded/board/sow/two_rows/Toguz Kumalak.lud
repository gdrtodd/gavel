(game "Toguz Kumalak" (players 2) (equipment {(board (merge {(rectangle 1 9) (shift 2.5 1 (rectangle 1 1)) (shift 5.5 1 (rectangle 1 1)) (shift 0 2 (rectangle 1 9))}) (track "Track" "0,E,19,W" loop:True) use:Vertex) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (map {(pair P1 9) (pair P2 10)}) (piece "Seed" Shared)}) (rules (start (set Count 9 to:(sites Track))) (play (move Select (from (sites Mover) if:(> (count at:(from)) 0)) (then (sow apply:(if (and (is In (to) (sites Next)) (is Even (count at:(to)))) (fromTo (from (to)) (to (mapEntry (mover))) count:(count at:(to))) (if (and {(is In (to) (sites Next)) (= (count at:(to)) 3) (< (value Player Mover) 0) (if (< (value Player Next) 0) True (!= (+ (to) (value Player Next)) 19))}) (and (set Value Mover (to)) (fromTo (from (to)) (to (mapEntry (mover))) count:(count at:(to)))))) origin:(!= (count at:(last From)) 1) (then (and (if (and (> (value Player P1) 0) (> (count at:(value Player P1)) 0)) (fromTo (from (value Player P1)) (to (mapEntry P1)) count:(count at:(value Player P1)))) (if (and (> (value Player P2) 0) (> (count at:(value Player P2)) 0)) (fromTo (from (value Player P2)) (to (mapEntry P2)) count:(count at:(value Player P2)))))))))) (end (if (no Moves Mover) (byScore {(score P1 (+ (count at:(mapEntry P1)) (count in:(sites P1)))) (score P2 (+ (count at:(mapEntry P2)) (count in:(sites P2))))}))))) 