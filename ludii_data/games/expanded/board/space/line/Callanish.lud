(game "Callanish" (players 2) (equipment {(board (square 9)) (piece "Disc" Each (move Select (from if:(and (= (topLevel at:(from)) (level)) (<= 2 (count Sites in:(sites To (move Leap (from (from)) {{F F R F} {F F L F} {F R F F} {F L F F}} (to if:(or (is Empty (to)) (and (is Enemy (who at:(to))) (= (topLevel at:(to)) 0)))))))))) (then (do (set Var "CondemnedSite" (last From)) next:(do (set State at:(var "CondemnedSite") 1) next:(moveAgain))))))}) (rules phases:{(phase "Opening" (play (move Add (to (sites Empty)))) (nextPhase (>= (count Turns) 2) "Playing")) (phase "Playing" (play (if (is Prev Mover) (if (is Pending) (move Add (to (sites To (move Leap (from (var "CondemnedSite")) {{F F R F} {F F L F} {F R F F} {F L F F}} (to if:(or (is Empty (to)) (and (is Enemy (who at:(to))) (= (topLevel at:(to)) 0))))))) stack:True (then (remove (var "CondemnedSite")))) (move Add (to (sites To (move Leap (from (var "CondemnedSite")) {{F F R F} {F F L F} {F R F F} {F L F F}} (to if:(or (is Empty (to)) (and (is Enemy (who at:(to))) (= (topLevel at:(to)) 0))))))) stack:True (then (do (set Pending) next:(moveAgain))))) (forEach Piece))))} (end {(if (and (= (% (- (count Moves) 2) 3) 0) (or {(<= 5 (count Sites in:(intersection (sites Row 0) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Row 1) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Row 2) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Row 3) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Row 4) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Row 5) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Row 6) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Row 7) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Row 8) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Column 0) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Column 1) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Column 2) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Column 3) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Column 4) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Column 5) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Column 6) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Column 7) (sites Occupied by:Next container:"Board")))) (<= 5 (count Sites in:(intersection (sites Column 8) (sites Occupied by:Next container:"Board"))))})) (result Mover Loss)) (if (no Moves Mover) (result Mover Loss))}))) 