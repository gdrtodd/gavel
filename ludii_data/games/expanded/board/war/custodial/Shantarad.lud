(game "Shantarad" (players 2) (equipment {(board (square 5)) (hand Each) (piece "Marker" Each (move Step Orthogonal (to if:(is Empty (to))) (then (custodial (from (last To)) Orthogonal (between (max 1) if:(and (is Enemy (who at:(between))) (!= (centrePoint) (between))) (apply (and (remove (between)) (if (or {(can Move (custodial (from (ahead (last To) N)) Orthogonal (between (max 1) if:(and (is Enemy (who at:(between))) (!= (centrePoint) (between)))) (to if:(is Friend (who at:(to)))))) (can Move (custodial (from (ahead (last To) E)) Orthogonal (between (max 1) if:(and (is Enemy (who at:(between))) (!= (centrePoint) (between)))) (to if:(is Friend (who at:(to)))))) (can Move (custodial (from (ahead (last To) W)) Orthogonal (between (max 1) if:(and (is Enemy (who at:(between))) (!= (centrePoint) (between)))) (to if:(is Friend (who at:(to)))))) (can Move (custodial (from (ahead (last To) S)) Orthogonal (between (max 1) if:(and (is Enemy (who at:(between))) (!= (centrePoint) (between)))) (to if:(is Friend (who at:(to))))))}) (moveAgain) (if (no Moves Next) (and (set Pending) (moveAgain))))))) (to if:(is Friend (who at:(to))))))))}) (rules (start (place "Marker" "Hand" count:12)) phases:{(phase "Placement" (play (if (= (count Moves) 24) (forEach Piece) (move (from (handSite Mover)) (to (difference (sites Empty) (centrePoint))) (then (if (or (= (count Moves) 24) (not (is Prev Mover))) (moveAgain)))))) (nextPhase (= (count Moves) 25) "Movement")) (phase "Movement" (play (if (is Prev Mover) (move Step (from (last To)) Orthogonal (to if:(and (is Empty (to)) (or {(and (is Enemy (who at:(ahead (to) W))) (is Friend (who at:(ahead (ahead (to) W) W)))) (and (is Enemy (who at:(ahead (to) E))) (is Friend (who at:(ahead (ahead (to) E) E)))) (and (is Enemy (who at:(ahead (to) N))) (is Friend (who at:(ahead (ahead (to) N) N)))) (and (is Enemy (who at:(ahead (to) S))) (is Friend (who at:(ahead (ahead (to) S) S))))}))) (then (custodial (from (last To)) Orthogonal (between (max 1) if:(and (is Enemy (who at:(between))) (!= (centrePoint) (between))) (apply (and (remove (between)) (if (or {(can Move (custodial (from (ahead (last To) N)) Orthogonal (between (max 1) if:(and (is Enemy (who at:(between))) (!= (centrePoint) (between)))) (to if:(is Friend (who at:(to)))))) (can Move (custodial (from (ahead (last To) E)) Orthogonal (between (max 1) if:(and (is Enemy (who at:(between))) (!= (centrePoint) (between)))) (to if:(is Friend (who at:(to)))))) (can Move (custodial (from (ahead (last To) W)) Orthogonal (between (max 1) if:(and (is Enemy (who at:(between))) (!= (centrePoint) (between)))) (to if:(is Friend (who at:(to)))))) (can Move (custodial (from (ahead (last To) S)) Orthogonal (between (max 1) if:(and (is Enemy (who at:(between))) (!= (centrePoint) (between)))) (to if:(is Friend (who at:(to))))))}) (moveAgain) (if (no Moves Next) (and (set Pending) (moveAgain))))))) (to if:(is Friend (who at:(to))))))) (do (forEach Piece) ifAfterwards:(not (no Moves Next))))))} (end (if (no Pieces Next) (result Next Loss))))) 