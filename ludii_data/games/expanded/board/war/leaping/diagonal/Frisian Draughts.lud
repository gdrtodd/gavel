(game "Frisian Draughts" (players 2) (equipment {(board (square 10)) (piece "Counter" P1 N) (piece "Counter" P2 S) (piece "DoubleCounter" Each maxState:128) (regions P1 (sites Bottom)) (regions P2 (sites Top))}) (rules (start {(place "Counter1" (difference (expand (sites Bottom) steps:(- 4 1)) (sites Phase 1)) value:10) (place "Counter2" (difference (expand (sites Top) steps:(- 4 1)) (sites Phase 1)) value:10)}) (play (if (is Prev Mover) (if (= (what at:(last To)) (id "Counter" Mover)) (max Moves withValue:True (or (do (move Hop (from (last To)) Orthogonal (between before:1 after:1 if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to))) (then (and (if (can Move (or (do (move Hop (from (last To)) Orthogonal (between before:1 after:1 if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to)))) ifAfterwards:(is In (last To) (sites Phase 0))) (move Hop (from (last To)) Diagonal (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to)))))) (moveAgain) (if (is In (last To) (sites Next)) (promote (last To) (piece "DoubleCounter") Mover) (then (set Value at:(last To) 19)))) (forEach Site (sites Occupied by:Mover) (if (!= 0 (state at:(site))) (set State at:(site) 0)))))) ifAfterwards:(is In (last To) (sites Phase 0))) (move Hop (from (last To)) Diagonal (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to))) (then (and (if (can Move (or (do (move Hop (from (last To)) Orthogonal (between before:1 after:1 if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to)))) ifAfterwards:(is In (last To) (sites Phase 0))) (move Hop (from (last To)) Diagonal (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to)))))) (moveAgain) (if (is In (last To) (sites Next)) (promote (last To) (piece "DoubleCounter") Mover) (then (set Value at:(last To) 19)))) (forEach Site (sites Occupied by:Mover) (if (!= 0 (state at:(site))) (set State at:(site) 0)))))))) (max Moves withValue:True (do (move Hop (from (last To)) All (between before:(count Rows) after:(count Rows) if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to))) (then (and (if (can Move (do (hop (from (last To)) All (between before:(count Rows) after:(count Rows) if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to)))) ifAfterwards:(is In (last To) (sites Phase 0)))) (moveAgain)) (forEach Site (sites Occupied by:Mover) (if (!= 0 (state at:(site))) (set State at:(site) 0)))))) ifAfterwards:(is In (last To) (sites Phase 0))))) (priority {(max Moves withValue:True (or {(forEach Piece "DoubleCounter" (do (move Hop All (between before:(count Rows) after:(count Rows) if:(is Enemy (who at:(between))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to))) (then (and (if (can Move (do (hop (from (last To)) All (between before:(count Rows) after:(count Rows) if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between))))) (to if:(is Empty (to)))) ifAfterwards:(is In (last To) (sites Phase 0)))) (moveAgain)) (forEach Site (sites Occupied by:Mover) (if (!= 0 (state at:(site))) (set State at:(site) 0)))))) ifAfterwards:(is In (last To) (sites Phase 0)))) (forEach Piece "Counter" (or (do (move Hop (from (from)) Orthogonal (between before:1 after:1 if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to))) (then (and (if (can Move (or (do (move Hop (from (last To)) Orthogonal (between before:1 after:1 if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to)))) ifAfterwards:(is In (last To) (sites Phase 0))) (move Hop (from (last To)) Diagonal (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to)))))) (moveAgain) (if (is In (last To) (sites Next)) (promote (last To) (piece "DoubleCounter") Mover) (then (set Value at:(last To) 19)))) (forEach Site (sites Occupied by:Mover) (if (!= 0 (state at:(site))) (set State at:(site) 0)))))) ifAfterwards:(is In (last To) (sites Phase 0))) (move Hop (from (from)) Diagonal (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to))) (then (and (if (can Move (or (do (move Hop (from (last To)) Orthogonal (between before:1 after:1 if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to)))) ifAfterwards:(is In (last To) (sites Phase 0))) (move Hop (from (last To)) Diagonal (between if:(and (not (is In (between) (sites ToClear))) (is Enemy (who at:(between)))) (apply (remove (between) at:EndOfTurn))) (to if:(is Empty (to)))))) (moveAgain) (if (is In (last To) (sites Next)) (promote (last To) (piece "DoubleCounter") Mover) (then (set Value at:(last To) 19)))) (forEach Site (sites Occupied by:Mover) (if (!= 0 (state at:(site))) (set State at:(site) 0))))))))})) (or (forEach Piece "Counter" (move Step (directions {FR FL}) (to if:(is Empty (to)))) (then (and (if (is In (last To) (sites Next)) (promote (last To) (piece "DoubleCounter") Mover) (then (set Value at:(last To) 19))) (forEach Site (sites Occupied by:Mover) (if (!= 0 (state at:(site))) (set State at:(site) 0)))))) (forEach Piece "DoubleCounter" (if (if (> 2 (state at:(from))) True (not (can Move (forEach Piece "Counter" (move Step (directions {FR FL}) (to if:(is Empty (to)))))))) (move Slide Diagonal)) (then (if (!= (where "Counter" Mover) -1) (and (set State at:(last To) (+ 1 (state at:(last To)))) (forEach Site (sites Occupied by:Mover) (if (and (!= (site) (last To)) (!= 0 (state at:(site)))) (set State at:(site) 0))))))))}) (then (and (if (and (and {(= (where "Counter" P1) -1) (= (where "Counter" P2) -1) (= 1 (count Pieces Next)) (= 2 (count Pieces Mover))}) (= -1 (value Player Mover))) (set Value Mover 0)) (if (and (not (is Prev Mover)) (!= -1 (value Player Mover))) (set Value Mover (+ 1 (value Player Mover)))))))) (end {(if (no Moves Next) (result Mover Win)) (if (= 7 (value Player Mover)) (result Mover Draw))}))) 