(game "Lasca" (players {(player N) (player S)}) (equipment {(board (square 7)) (piece "Counter" Each) (piece "CounterStar" Each) (regions P1 (sites Bottom)) (regions P2 (sites Top))}) (rules (start {(place "Counter1" (difference (expand (sites Bottom) steps:2) (sites Phase 1))) (place "Counter2" (difference (expand (sites Top) steps:2) (sites Phase 1)))}) (play (if (is Prev Mover) (if (= (what at:(last To) level:(topLevel at:(last To))) (id "Counter" Mover)) (move Hop (from (last To)) (directions {FR FL}) (between if:(is Enemy (who at:(between))) (apply (fromTo (from (between)) (to)))) (to if:(and (is In (from) (sites Occupied by:Mover)) (is Empty (to)))) stack:True (then (if (is In (last To) (sites Next)) (promote (last To) (piece "CounterStar") Mover) (if (can Move (move Hop (from (last To)) (directions {FR FL}) (between if:(is Enemy (who at:(between))) (apply (fromTo (from (between)) (to)))) (to if:(and (is In (from) (sites Occupied by:Mover)) (is Empty (to)))) stack:True)) (moveAgain))))) (move Hop (from (last To)) Diagonal (between if:(is Enemy (who at:(between))) (apply (fromTo (from (between)) (to)))) (to if:(and (is In (from) (sites Occupied by:Mover)) (is Empty (to)))) stack:True (then (if (can Move (move Hop (from (last To)) Diagonal (between if:(is Enemy (who at:(between))) (apply (fromTo (from (between)) (to)))) (to if:(and (is In (from) (sites Occupied by:Mover)) (is Empty (to)))) stack:True)) (moveAgain))))) (priority {(or {(forEach Piece "Counter" (move Hop (directions {FR FL}) (between if:(is Enemy (who at:(between))) (apply (fromTo (from (between)) (to)))) (to if:(and (is In (from) (sites Occupied by:Mover)) (is Empty (to)))) stack:True (then (if (can Move (move Hop (from (last To)) (directions {FR FL}) (between if:(is Enemy (who at:(between))) (apply (fromTo (from (between)) (to)))) (to if:(and (is In (from) (sites Occupied by:Mover)) (is Empty (to)))) stack:True)) (moveAgain)))) top:True (then (if (is In (last To) (sites Next)) (promote (last To) (piece "CounterStar") Mover)))) (forEach Piece "CounterStar" (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (fromTo (from (between)) (to)))) (to if:(and (is In (from) (sites Occupied by:Mover)) (is Empty (to)))) stack:True (then (if (can Move (move Hop (from (last To)) Diagonal (between if:(is Enemy (who at:(between))) (apply (fromTo (from (between)) (to)))) (to if:(and (is In (from) (sites Occupied by:Mover)) (is Empty (to)))) stack:True)) (moveAgain)))) top:True)}) (or {(forEach Piece "Counter" (move Step (directions {FR FL}) (to if:(and (is In (from) (sites Occupied by:Mover)) (is Empty (to)))) stack:True) top:True (then (if (is In (last To) (sites Next)) (promote (last To) (piece "CounterStar") Mover)))) (forEach Piece "CounterStar" (move Step Diagonal (to if:(and (is In (from) (sites Occupied by:Mover)) (is Empty (to)))) stack:True) top:True)})}))) (end (if (no Moves Next) (result Mover Win))))) 