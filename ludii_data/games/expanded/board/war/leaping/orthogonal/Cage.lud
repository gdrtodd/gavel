(game "Cage" (players 2) (equipment {(board (square 12)) (piece "Disc" Each)}) (rules (start {(place "Disc1" (difference (sites Phase 0) (sites Outer))) (place "Disc2" (difference (sites Phase 1) (sites Outer)))}) (play (forEach Piece (if (!= 1 (var)) (or (move Hop (from) Orthogonal (between if:(is Occupied (between)) (apply (remove (between)))) (to if:(and {(is Empty (to)) (= 0 (count Sites in:(sites Around (to) Own Orthogonal)))})) (then (and {(remove (sites Outer)) (set Var 1) (if (can Move (move Hop (from (last To)) Orthogonal (between if:(is Occupied (between)) (apply (remove (between)))) (to if:(and {(is Empty (to)) (= 0 (count Sites in:(sites Around (to) Own Orthogonal)))})))) (moveAgain) (set Var 0))}))) (move Step (from) (to if:(and {(is Empty (to)) (= 0 (count Sites in:(difference (sites Around (to) Own Orthogonal) (sites {(from)})))) (not (and (< 0 (count Sites in:(sites Around (from) Enemy Orthogonal))) (= 0 (count Sites in:(sites Around (to) Enemy Orthogonal))))) (or {(and (= 0 (count Sites in:(sites Around (from) Enemy Orthogonal))) (< 0 (count Sites in:(sites Around (to) Enemy Orthogonal)))) (or {(and (or (= (from) (+ (to) 12)) (= (from) (- (to) 12))) (> (max (count Sites in:(sites Direction from:(from) N)) (count Sites in:(sites Direction from:(from) S))) (max (count Sites in:(sites Direction from:(to) N)) (count Sites in:(sites Direction from:(to) S))))) (and (or (= (from) (+ (to) 1)) (= (from) (- (to) 1))) (> (max (count Sites in:(sites Direction from:(from) E)) (count Sites in:(sites Direction from:(from) W))) (max (count Sites in:(sites Direction from:(to) E)) (count Sites in:(sites Direction from:(to) W))))) (and (or (= (from) (+ (to) (+ 12 1))) (= (from) (- (to) (+ 12 1)))) (> (max (count Sites in:(sites Direction from:(from) SW)) (count Sites in:(sites Direction from:(from) NE))) (max (count Sites in:(sites Direction from:(to) SW)) (count Sites in:(sites Direction from:(to) NE))))) (and (or (= (from) (+ (to) (- 12 1))) (= (from) (- (to) (- 12 1)))) (> (max (count Sites in:(sites Direction from:(from) SE)) (count Sites in:(sites Direction from:(from) NW))) (max (count Sites in:(sites Direction from:(to) SE)) (count Sites in:(sites Direction from:(to) NW)))))})})})))) (move Hop (from if:(= (from) (last To))) Orthogonal (between if:(is Occupied (between)) (apply (remove (between)))) (to if:(and {(is Empty (to)) (= 0 (count Sites in:(sites Around (to) Own Orthogonal)))})) (then (and {(remove (sites Outer)) (set Var 1) (if (can Move (move Hop (from (last To)) Orthogonal (between if:(is Occupied (between)) (apply (remove (between)))) (to if:(and {(is Empty (to)) (= 0 (count Sites in:(sites Around (to) Own Orthogonal)))})))) (moveAgain) (set Var 0))})))))) (end (if (or (= 0 (count Sites in:(sites Occupied by:P1))) (= 0 (count Sites in:(sites Occupied by:P2)))) (result Mover Win))))) 