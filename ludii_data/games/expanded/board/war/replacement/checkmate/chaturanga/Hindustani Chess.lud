(game "Hindustani Chess" (players {(player N) (player S)}) (equipment {(board (square 8)) (piece "Pawn" Each (move Step Forward (to if:(and (or (not (is In (to) (sites Mover "Promotion"))) (and (is In (to) (sites Mover "Promotion")) (if (and (is In (to) (sites Corners)) (< (count Sites in:(sites Occupied by:Mover component:"Boat")) 2)) True (if (and (or (= (column of:(to)) 1) (= (column of:(to)) 6)) (< (count Sites in:(sites Occupied by:Mover component:"Horse")) 2)) True (if (and (or (= (column of:(to)) 2) (= (column of:(to)) 5)) (< (count Sites in:(sites Occupied by:Mover component:"Elephant")) 2)) True (if (and (or (= (column of:(to)) 3) (= (column of:(to)) 4)) (< (count Sites in:(sites Occupied by:Mover component:"Ferz_noCross")) 1)) True False)))))) (not (is Friend (who at:(to))))) (apply (remove (to)))) (then (if (is In (last To) (sites Mover "Promotion")) (if (is In (last To) (sites Corners)) (promote (last To) (piece (id "Boat" Mover))) (if (or (= (column of:(last To)) 1) (= (column of:(last To)) 6)) (promote (last To) (piece (id "Horse" Mover))) (if (or (= (column of:(last To)) 2) (= (column of:(last To)) 5)) (promote (last To) (piece (id "Elephant" Mover))) (if (or (= (column of:(last To)) 3) (= (column of:(last To)) 4)) (promote (last To) (piece (id "Queen" Mover))))))))))) (piece "Boat" Each (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply (remove (to)))))) (piece "King_noCross" Each (or (move Step (to if:(not (is Friend (who at:(to)))) (apply (remove (to))))) (if (and (not (is Threatened (id "King_noCross" Mover))) (= (state at:(from)) 1)) (move Leap {{F F R F} {F F L F}} (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) (then (if (= (state at:(last To)) 1) (set State at:(last To) 0))))) (piece "Elephant" Each (move Slide Diagonal (to if:(is Enemy (who at:(to))) (apply (remove (to)))))) (piece "Horse" Each (move Leap {{F F R F} {F F L F}} (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) (piece "Ferz_noCross" Each (move Slide (to if:(is Enemy (who at:(to))) (apply (remove (to)))))) (regions "Promotion" P1 (sites Top)) (regions "Promotion" P2 (sites Bottom))}) (rules (start {(place "Pawn1" (sites Row 1)) (place "Pawn2" (sites Row 6)) (place "Boat1" {"A1" "H1"}) (place "Horse1" {"B1" "G1"}) (place "Elephant1" {"C1" "F1"}) (place "Ferz_noCross1" coord:"D1") (place "King_noCross1" coord:"E1" state:1) (place "Boat2" {"A8" "H8"}) (place "Horse2" {"B8" "G8"}) (place "Elephant2" {"C8" "F8"}) (place "Ferz_noCross2" coord:"E8") (place "King_noCross2" coord:"D8" state:1)}) (play (do (forEach Piece) ifAfterwards:(and (not (no Moves Next)) (not (is Threatened (id "King_noCross" Mover)))))) (end {(if (and (is Threatened (id "King_noCross" Next)) (not (can Move (do (forEach Piece Next) ifAfterwards:(not (is Threatened (id "King_noCross" Next))))))) (result Mover Win)) (if (= (count Pieces Next) 1) (result Mover Draw)) (if (= (count Pieces Next) (+ 1 (count Sites in:(sites Occupied by:Next component:"Pawn")))) (result Mover Draw))}))) 