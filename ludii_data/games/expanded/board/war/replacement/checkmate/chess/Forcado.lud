(game "Forcado" (players {(player N) (player S)}) (equipment {(board (square 8)) (piece "Pawn" Each (or {(move Step Forward (to if:(is Empty (to)))) (move Step (directions {FR FL}) (to if:(is Enemy (who at:(to))) (apply (remove (to)))))} (then (if (is In (last To) (sites Mover "Promotion")) (promote (last To) (piece "Ferz_noCross") Mover))))) (piece "Rook" Each (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply (remove (to)))))) (piece "King_noCross" Each (move Step (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) (piece "Bishop_noCross" Each (move Hop Diagonal (between if:True) (to if:(or (is Empty (to)) (is Enemy (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) (piece "Knight" Each (move Leap {{F F R F} {F F L F}} (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) (piece "Ferz_noCross" Each (move Step Diagonal (to if:(not (is Friend (who at:(to)))) (apply (remove (to)))))) (regions "Promotion" P1 (sites Top)) (regions "Promotion" P2 (sites Bottom))}) (rules (start {(place "Pawn1" (sites Row 1)) (place "Pawn2" (sites Row 6)) (place "Rook1" {"A1" "H1"}) (place "Knight1" {"B1" "G1"}) (place "Bishop_noCross1" {"C1" "F1"}) (place "Ferz_noCross1" coord:"D1") (place "King_noCross1" coord:"E1") (place "Rook2" {"A8" "H8"}) (place "Knight2" {"B8" "G8"}) (place "Bishop_noCross2" {"C8" "F8"}) (place "Ferz_noCross2" coord:"D8") (place "King_noCross2" coord:"E8")}) (play (priority {(do (forEach Piece {"Pawn"} (move Step (directions {FR FL}) (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Rook" Next))) (apply (remove (to))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Bishop_noCross"} (move Hop Diagonal (between if:True) (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Rook" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Ferz_noCross"} (move Step Diagonal (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Rook" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Knight"} (move Leap {{F F R F} {F F L F}} (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Rook" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Rook"} (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Rook" Next))) (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"King_noCross"} (move Step (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Rook" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Pawn"} (move Step (directions {FR FL}) (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Knight" Next))) (apply (remove (to))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Bishop_noCross"} (move Hop Diagonal (between if:True) (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Knight" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Ferz_noCross"} (move Step Diagonal (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Knight" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Knight"} (move Leap {{F F R F} {F F L F}} (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Knight" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Rook"} (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Knight" Next))) (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"King_noCross"} (move Step (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Knight" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Pawn"} (move Step (directions {FR FL}) (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Ferz_noCross" Next))) (apply (remove (to))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Bishop_noCross"} (move Hop Diagonal (between if:True) (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Ferz_noCross" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Ferz_noCross"} (move Step Diagonal (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Ferz_noCross" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Knight"} (move Leap {{F F R F} {F F L F}} (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Ferz_noCross" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Rook"} (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Ferz_noCross" Next))) (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"King_noCross"} (move Step (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Ferz_noCross" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Pawn"} (move Step (directions {FR FL}) (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Bishop_noCross" Next))) (apply (remove (to))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Bishop_noCross"} (move Hop Diagonal (between if:True) (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Bishop_noCross" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Ferz_noCross"} (move Step Diagonal (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Bishop_noCross" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Knight"} (move Leap {{F F R F} {F F L F}} (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Bishop_noCross" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Rook"} (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Bishop_noCross" Next))) (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"King_noCross"} (move Step (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Bishop_noCross" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Pawn"} (move Step (directions {FR FL}) (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Pawn" Next))) (apply (remove (to))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Bishop_noCross"} (move Hop Diagonal (between if:True) (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Pawn" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Ferz_noCross"} (move Step Diagonal (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Pawn" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Knight"} (move Leap {{F F R F} {F F L F}} (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Pawn" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"Rook"} (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Pawn" Next))) (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece {"King_noCross"} (move Step (to if:(and (is Enemy (who at:(to))) (= (what at:(to)) (id "Pawn" Next))) (apply (if (is Enemy (who at:(to))) (remove (to)))))) Mover) ifAfterwards:(not (is Threatened (id "King_noCross" Mover)))) (do (forEach Piece) ifAfterwards:(not (is Threatened (id "King_noCross" Mover))))})) (end (if (or (and (is Threatened (id "King_noCross" Next)) (not (can Move (do (forEach Piece Next) ifAfterwards:(not (is Threatened (id "King_noCross" Next))))))) (no Moves Next)) (result Mover Win))))) 