(game "Quick Chess" (players {(player N) (player S)}) (equipment {(board (rectangle 6 5)) (piece "Pawn" Each (or {(move Step Forward (to if:(is Empty (to)))) (move Step (directions {FR FL}) (to if:(is Enemy (who at:(to))) (apply (and (remove (to)) (remember Value "CapturedPieces" (what at:(to)))))))} (then (and (if (and (is In (last To) (sites Mover "Promotion")) (can Move (or {(if (is In (id "Queen" Mover) (values Remembered "CapturedPieces")) (move Promote (last To) (piece {"Queen"}) Mover)) (if (is In (id "Knight" Mover) (values Remembered "CapturedPieces")) (move Promote (last To) (piece {"Knight"}) Mover)) (if (is In (id "Rook" Mover) (values Remembered "CapturedPieces")) (move Promote (last To) (piece {"Rook"}) Mover)) (if (is In (id "Bishop" Mover) (values Remembered "CapturedPieces")) (move Promote (last To) (piece {"Bishop"}) Mover))}))) (moveAgain)) (set Counter))))) (piece "Rook" Each (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply (if (is Enemy (who at:(to))) (and (remove (to) (then (set Counter))) (remember Value "CapturedPieces" (what at:(to))))))))) (piece "King" Each (move Step (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (and (remove (to) (then (set Counter))) (remember Value "CapturedPieces" (what at:(to))))))))) (piece "Bishop" Each (move Slide Diagonal (to if:(is Enemy (who at:(to))) (apply (if (is Enemy (who at:(to))) (and (remove (to) (then (set Counter))) (remember Value "CapturedPieces" (what at:(to))))))))) (piece "Knight" Each (move Leap {{F F R F} {F F L F}} (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (and (remove (to) (then (set Counter))) (remember Value "CapturedPieces" (what at:(to))))))))) (piece "Queen" Each (move Slide (to if:(is Enemy (who at:(to))) (apply (if (is Enemy (who at:(to))) (and (remove (to) (then (set Counter))) (remember Value "CapturedPieces" (what at:(to))))))))) (regions "Promotion" P1 (sites Top)) (regions "Promotion" P2 (sites Bottom))}) (rules (start {(place "Pawn1" (sites Row 1)) (place "Pawn2" (sites Row 4)) (place "Rook1" {"E1"}) (place "Knight1" {"A1"}) (place "Bishop1" {"D1"}) (place "Queen1" coord:"C1") (place "King1" coord:"B1") (place "Rook2" {"E6"}) (place "Knight2" {"A6"}) (place "Bishop2" {"D6"}) (place "Queen2" coord:"C6") (place "King2" coord:"B6")}) (play (if (is Prev Mover) (or {(if (is In (id "Queen" Mover) (values Remembered "CapturedPieces")) (move Promote (last To) (piece {"Queen"}) Mover)) (if (is In (id "Knight" Mover) (values Remembered "CapturedPieces")) (move Promote (last To) (piece {"Knight"}) Mover)) (if (is In (id "Rook" Mover) (values Remembered "CapturedPieces")) (move Promote (last To) (piece {"Rook"}) Mover)) (if (is In (id "Bishop" Mover) (values Remembered "CapturedPieces")) (move Promote (last To) (piece {"Bishop"}) Mover))}) (do (forEach Piece) ifAfterwards:(not (is Threatened (id "King" Mover)))) (then (if (= 19 (counter)) (and (forEach Player (forEach Site (sites Occupied by:Player) (if (= (what at:(site)) (id "Pawn" Player)) (addScore Player 1) (if (= (what at:(site)) (id "Rook" Player)) (addScore Player 5) (if (= (what at:(site)) (id "Queen" Player)) (addScore Player 9) (if (!= (what at:(site)) (id "King" Player)) (addScore Player 3))))))) (set Var "NoEnoughCapture" 1)))))) (end {(if (and (is Threatened (id "King" Next)) (not (can Move (do (forEach Piece Next) ifAfterwards:(not (is Threatened (id "King" Next))))))) (result Mover Win)) (if (no Moves Mover) (result Mover Draw)) (if (= (var "NoEnoughCapture") 1) (byScore))}))) 