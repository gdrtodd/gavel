(game "Welschschach" (players {(player N) (player S)}) (equipment {(board (square 8)) (piece "King_noCross" (move Step (to if:(and (not (is Friend (who at:(to)))) (if (not (is In (to) (sites Next "Promotion"))) True (not (= (what at:(to)) (id "Pawn" Next))))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) (piece "Queen" (move Step Diagonal (to if:(and (not (is Friend (who at:(to)))) (if (not (is In (to) (sites Next "Promotion"))) True (!= (what at:(to)) (id "Pawn" Next)))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) (piece "Bishop_noCross" (move Hop Diagonal (between if:True) (to if:(and (not (is Friend (who at:(to)))) (if (not (is In (to) (sites Next "Promotion"))) True (!= (what at:(to)) (id "Pawn" Next)))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) (piece "Knight" (move Leap {{F F R F} {F F L F}} (to if:(and (not (is Friend (who at:(to)))) (if (not (is In (to) (sites Next "Promotion"))) True (!= (what at:(to)) (id "Pawn" Next)))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) (piece "Rook" (move Slide Orthogonal (to if:(and (not (is Friend (who at:(to)))) (if (not (is In (to) (sites Next "Promotion"))) True (!= (what at:(to)) (id "Pawn" Next)))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) (piece "Pawn" (if (= 0 (state at:(from))) (or (move Step Forward (to if:(is Empty (to)))) (move Step (directions {FR FL}) (to if:(and (is Enemy (who at:(to))) (if (not (is In (to) (sites Next "Promotion"))) True (!= (what at:(to)) (id "Pawn" Next)))) (apply (remove (to))))) (then (if (is In (last To) (sites Mover "Promotion")) (set State at:(last To) 1)))) (move Slide Backward (between (exact 2) if:(is Empty (between))) (to if:(is Empty (to))) (then (if (is In (last To) (sites Start (piece (what at:(last To))))) (promote (last To) (piece "Queen") Mover)))))) (regions "Promotion" P1 (sites Top)) (regions "Promotion" P2 (sites Bottom))}) (rules (start {(place "Pawn1" (sites Row 1)) (place "Pawn2" (sites Row 6)) (place "Rook1" {"A1" "H1"}) (place "Knight1" {"B1" "G1"}) (place "Bishop_noCross1" {"C1" "F1"}) (place "Queen1" coord:"D1") (place "King_noCross1" coord:"E1") (place "Rook2" {"A8" "H8"}) (place "Knight2" {"B8" "G8"}) (place "Bishop_noCross2" {"C8" "F8"}) (place "Queen2" coord:"E8") (place "King_noCross2" coord:"D8")}) phases:{(phase "Opening" (play (or {(forEach Piece "Queen" (if (is In (from) (sites Start (piece (what at:(from))))) (move Hop Diagonal (between (exact 1) if:True) (to if:(and (not (is Friend (who at:(to)))) (if (not (is In (to) (sites Next "Promotion"))) True (!= (what at:(to)) (id "Pawn" Next)))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) Mover) (forEach Piece "Pawn" (if (is In (from) (intersection (sites {"A2" "D2" "H2" "A7" "H7" "E7"}) (sites Start (piece (what at:(from)))))) (move Slide Forward (between (exact 2) if:(is Empty (between))) (to if:(is Empty (to))))) Mover)})) (nextPhase (= 8 (count Moves)) "Playing")) (phase "Playing" (play (do (forEach Piece) ifAfterwards:(not (is Threatened (id "King_noCross" Mover))))))} (end (if (and (is Threatened (id "King_noCross" Next)) (not (can Move (do (forEach Piece Next) ifAfterwards:(not (is Threatened (id "King_noCross" Next))))))) (result Mover Win))))) 