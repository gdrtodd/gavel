(game "Unashogi" (players {(player N) (player S)}) (equipment {(board (square 9)) (piece "Osho" Each (move Step (to if:(and (not (is Friend (who at:(to)))) (or (not (is Enemy (who at:(to)))) (= (count Pieces Mover "Osho" in:(sites Board)) 1))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))))) (piece "Fuhyo" Each (move Step Forward (to if:(and (not (is Friend (who at:(to)))) (or (not (is Enemy (who at:(to)))) (= (count Pieces Mover "Osho" in:(sites Board)) 1))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))) (then (if (is In (last To) (sites Mover "Promotion")) (if (is In (last To) (sites Mover "LastRank")) (move Promote (last To) (piece (mapEntry "Promoted" (what at:(last To))))) (moveAgain)))))) (piece "Ginsho" Each (move Step (directions {Forward BL BR FL FR}) (to if:(and (not (is Friend (who at:(to)))) (or (not (is Enemy (who at:(to)))) (= (count Pieces Mover "Osho" in:(sites Board)) 1))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))) (then (if (or (is In (last To) (sites Mover "Promotion")) (is In (last From) (sites Mover "Promotion"))) (moveAgain))))) (piece "Hisha" Each (move Slide Orthogonal (to if:(and (is Enemy (who at:(to))) (= (count Pieces Mover "Osho" in:(sites Board)) 1)) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))) (then (if (or (is In (last To) (sites Mover "Promotion")) (is In (last From) (sites Mover "Promotion"))) (moveAgain))))) (piece "Kakugyo" Each (move Slide Diagonal (to if:(and (is Enemy (who at:(to))) (= (count Pieces Mover "Osho" in:(sites Board)) 1)) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))) (then (if (or (is In (last To) (sites Mover "Promotion")) (is In (last From) (sites Mover "Promotion"))) (moveAgain))))) (piece "Keima" Each (forEach Direction Forward (to if:True (apply (forEach Direction (from (to)) (directions {FR FL}) (if (not (is Friend (who at:(to)))) (move (from) (to (apply if:(is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))))))) (then (if (is In (last To) (sites Mover "Promotion")) (if (is In (last To) (sites Mover "TwoFurthestRank")) (move Promote (last To) (piece (mapEntry "Promoted" (what at:(last To))))) (moveAgain)))))) (piece "Kyosha" Each (move Slide Forward (to if:(and (is Enemy (who at:(to))) (= (count Pieces Mover "Osho" in:(sites Board)) 1)) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))) (then (if (is In (last To) (sites Mover "Promotion")) (if (is In (last To) (sites Mover "LastRank")) (move Promote (last To) (piece (mapEntry "Promoted" (what at:(last To))))) (moveAgain)))))) (piece "Kinsho" Each (move Step (directions {Forward Backward Rightward Leftward FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))))) (piece "Tokin" Each (move Step (directions {Forward Backward Rightward Leftward FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))))) (piece "Narigin" Each (move Step (directions {Forward Backward Rightward Leftward FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))))) (piece "Ryuo" Each (or (move Slide Orthogonal (to if:(and (is Enemy (who at:(to))) (= (count Pieces Mover "Osho" in:(sites Board)) 1)) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to))))))))) (move Step Diagonal (to if:(and (not (is Friend (who at:(to)))) (or (not (is Enemy (who at:(to)))) (= (count Pieces Mover "Osho" in:(sites Board)) 1))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to))))))))))) (piece "Ryuma" Each (or (move Slide Diagonal (to if:(and (is Enemy (who at:(to))) (= (count Pieces Mover "Osho" in:(sites Board)) 1)) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to))))))))) (move Step Orthogonal (to if:(and (not (is Friend (who at:(to)))) (or (not (is Enemy (who at:(to)))) (= (count Pieces Mover "Osho" in:(sites Board)) 1))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to))))))))))) (piece "Narikei" Each (move Step (directions {Forward Backward Rightward Leftward FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))))) (piece "Narikyo" Each (move Step (directions {Forward Backward Rightward Leftward FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))))) (regions "LastRankP1" P1 (sites Top)) (regions "LastRankP2" P2 (sites Bottom)) (regions "TwoFurthestRankP1" P1 (expand (sites Top))) (regions "TwoFurthestRankP2" P2 (expand (sites Bottom))) (regions "Promotion" P1 (expand (sites Top) steps:2)) (regions "Promotion" P2 (expand (sites Bottom) steps:2)) (map "Where" {(pair (id "Fuhyo" P1) (handSite P2)) (pair (id "Fuhyo" P2) (handSite P1)) (pair (id "Ginsho" P1) (handSite P2 1)) (pair (id "Ginsho" P2) (handSite P1 1)) (pair (id "Hisha" P1) (handSite P2 2)) (pair (id "Hisha" P2) (handSite P1 2)) (pair (id "Kakugyo" P1) (handSite P2 3)) (pair (id "Kakugyo" P2) (handSite P1 3)) (pair (id "Keima" P1) (handSite P2 4)) (pair (id "Keima" P2) (handSite P1 4)) (pair (id "Kyosha" P1) (handSite P2 5)) (pair (id "Kyosha" P2) (handSite P1 5)) (pair (id "Kinsho" P1) (handSite P2 6)) (pair (id "Kinsho" P2) (handSite P1 6)) (pair (id "Tokin" P1) (handSite P2)) (pair (id "Tokin" P2) (handSite P1)) (pair (id "Narigin" P1) (handSite P2 1)) (pair (id "Narigin" P2) (handSite P1 1)) (pair (id "Ryuo" P1) (handSite P2 2)) (pair (id "Ryuo" P2) (handSite P1 2)) (pair (id "Ryuma" P1) (handSite P2 3)) (pair (id "Ryuma" P2) (handSite P1 3)) (pair (id "Narikei" P1) (handSite P2 4)) (pair (id "Narikei" P2) (handSite P1 4)) (pair (id "Narikyo" P1) (handSite P2 5)) (pair (id "Narikyo" P2) (handSite P1 5))}) (map "Captured" {(pair (id "Fuhyo" P1) (id "Fuhyo" P2)) (pair (id "Fuhyo" P2) (id "Fuhyo" P1)) (pair (id "Ginsho" P1) (id "Ginsho" P2)) (pair (id "Ginsho" P2) (id "Ginsho" P1)) (pair (id "Hisha" P1) (id "Hisha" P2)) (pair (id "Hisha" P2) (id "Hisha" P1)) (pair (id "Kakugyo" P1) (id "Kakugyo" P2)) (pair (id "Kakugyo" P2) (id "Kakugyo" P1)) (pair (id "Keima" P1) (id "Keima" P2)) (pair (id "Keima" P2) (id "Keima" P1)) (pair (id "Kyosha" P1) (id "Kyosha" P2)) (pair (id "Kyosha" P2) (id "Kyosha" P1)) (pair (id "Kinsho" P1) (id "Kinsho" P2)) (pair (id "Kinsho" P2) (id "Kinsho" P1)) (pair (id "Tokin" P1) (id "Fuhyo" P2)) (pair (id "Tokin" P2) (id "Fuhyo" P1)) (pair (id "Narigin" P1) (id "Ginsho" P2)) (pair (id "Narigin" P2) (id "Ginsho" P1)) (pair (id "Ryuo" P1) (id "Hisha" P2)) (pair (id "Ryuo" P2) (id "Hisha" P1)) (pair (id "Ryuma" P1) (id "Kakugyo" P2)) (pair (id "Ryuma" P2) (id "Kakugyo" P1)) (pair (id "Narikei" P1) (id "Keima" P2)) (pair (id "Narikei" P2) (id "Keima" P1)) (pair (id "Narikyo" P1) (id "Kyosha" P2)) (pair (id "Narikyo" P2) (id "Kyosha" P1))}) (map "Promoted" {(pair (id "Fuhyo" P1) (id "Tokin" P1)) (pair (id "Fuhyo" P2) (id "Tokin" P2)) (pair (id "Ginsho" P1) (id "Narigin" P1)) (pair (id "Ginsho" P2) (id "Narigin" P2)) (pair (id "Hisha" P1) (id "Ryuo" P1)) (pair (id "Hisha" P2) (id "Ryuo" P2)) (pair (id "Kakugyo" P1) (id "Ryuma" P1)) (pair (id "Kakugyo" P2) (id "Ryuma" P2)) (pair (id "Keima" P1) (id "Narikei" P1)) (pair (id "Keima" P2) (id "Narikei" P2)) (pair (id "Kyosha" P1) (id "Narikyo" P1)) (pair (id "Kyosha" P2) (id "Narikyo" P2))}) (hand Each size:8)}) (rules (start {(place "Osho1" (handSite P1 7)) (place "Kinsho1" (handSite P1 6) count:2) (place "Ginsho1" (handSite P1 1) count:2) (place "Keima1" (handSite P1 4) count:2) (place "Kyosha1" (handSite P1 5) count:2) (place "Kakugyo1" (handSite P1 3)) (place "Hisha1" (handSite P1 2)) (place "Fuhyo1" (handSite P1) count:9) (place "Osho2" (handSite P2 7)) (place "Kinsho2" (handSite P2 6) count:2) (place "Ginsho2" (handSite P2 1) count:2) (place "Keima2" (handSite P2 4) count:2) (place "Kyosha2" (handSite P2 5) count:2) (place "Kakugyo2" (handSite P2 3)) (place "Hisha2" (handSite P2 2)) (place "Fuhyo2" (handSite P2) count:9)}) (play (if (is Prev Mover) (or (move Promote (last To) (piece (mapEntry "Promoted" (what at:(last To))))) (move Pass)) (do (or {(move (from (sites Occupied by:Mover container:"Hand" components:{"Kakugyo" "Ginsho" "Hisha" "Kinsho" "Osho"})) (to (sites Empty))) (do (move (from (sites Occupied by:Mover container:"Hand" component:"Fuhyo")) (to (difference (sites Empty) (sites Mover "LastRank")) if:(= (count Sites in:(sites Occupied by:Mover container:"Board" component:"Fuhyo")) (count Sites in:(difference (sites Occupied by:Mover container:"Board" component:"Fuhyo") (sites Column (column of:(to)))))))) ifAfterwards:(or (not (and (is Threatened (id "Osho" Next)) (not (can Move (do (or {(move (from (sites Occupied by:Next container:"Hand" components:{"Kakugyo" "Ginsho" "Hisha" "Kinsho"})) (to (sites Empty))) (do (move (from (sites Occupied by:Next container:"Hand" component:"Fuhyo")) (to (difference (sites Empty) (sites Next "LastRank")) if:(= (count Sites in:(sites Occupied by:Next container:"Board" component:"Fuhyo")) (count Sites in:(difference (sites Occupied by:Next container:"Board" component:"Fuhyo") (sites Column (column of:(to)))))))) ifAfterwards:(or (not (is Threatened (id "Osho" Mover))) (no Pieces Next "Osho" in:(sites Board)))) (move (from (sites Occupied by:Next container:"Hand" component:"Kyosha")) (to (difference (sites Empty) (sites Next "LastRank")))) (move (from (sites Occupied by:Next container:"Hand" component:"Keima")) (to (difference (sites Empty) (sites Next "TwoFurthestRank")))) (forEach Piece Next)}) ifAfterwards:(or (not (is Threatened (id "Osho" Mover))) (no Pieces Next "Osho" in:(sites Board)))))))) (no Pieces Mover "Osho" in:(sites Board)))) (move (from (sites Occupied by:Mover container:"Hand" component:"Kyosha")) (to (difference (sites Empty) (sites Mover "LastRank")))) (move (from (sites Occupied by:Mover container:"Hand" component:"Keima")) (to (difference (sites Empty) (sites Mover "TwoFurthestRank")))) (forEach Piece)}) ifAfterwards:(or (not (is Threatened (id "Osho" Mover))) (no Pieces Next "Osho" in:(sites Board)))))) (end {(if (and {(is Threatened (id "Osho" Next)) (not (can Move (do (or {(move (from (sites Occupied by:Next container:"Hand" components:{"Kakugyo" "Ginsho" "Hisha" "Kinsho"})) (to (sites Empty))) (do (move (from (sites Occupied by:Next container:"Hand" component:"Fuhyo")) (to (difference (sites Empty) (sites Next "LastRank")) if:(= (count Sites in:(sites Occupied by:Next container:"Board" component:"Fuhyo")) (count Sites in:(difference (sites Occupied by:Next container:"Board" component:"Fuhyo") (sites Column (column of:(to)))))))) ifAfterwards:(or (not (is Threatened (id "Osho" Mover))) (no Pieces Next "Osho" in:(sites Board)))) (move (from (sites Occupied by:Next container:"Hand" component:"Kyosha")) (to (difference (sites Empty) (sites Next "LastRank")))) (move (from (sites Occupied by:Next container:"Hand" component:"Keima")) (to (difference (sites Empty) (sites Next "TwoFurthestRank")))) (forEach Piece Next)}) ifAfterwards:(or (not (is Threatened (id "Osho" Mover))) (no Pieces Next "Osho" in:(sites Board)))))) (= (count Pieces Mover "Osho" in:(sites Board)) 1)}) (result Mover Win)) (if (no Moves Next) (result Mover Win))}))) 