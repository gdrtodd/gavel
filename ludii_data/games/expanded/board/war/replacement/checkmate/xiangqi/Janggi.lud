(game "Janggi" (players 2) (equipment {(board (rectangle 10 9) use:Vertex) (piece "Han" P1 (move Step (if (is In (from) (sites Mover "PalaceOrtho")) Orthogonal All) (to if:(and (is In (to) (sites Mover "Palace")) (not (is Friend (who at:(to))))) (apply (remove (to)))))) (piece "Cho" P2 (move Step (if (is In (from) (sites Mover "PalaceOrtho")) Orthogonal All) (to if:(and (is In (to) (sites Mover "Palace")) (not (is Friend (who at:(to))))) (apply (remove (to)))))) (piece "Sa" Each (move Step (if (is In (from) (sites Mover "PalaceOrtho")) Orthogonal All) (to if:(and (is In (to) (sites Mover "Palace")) (not (is Friend (who at:(to))))) (apply (remove (to)))))) (piece "Sang" Each (forEach Direction Orthogonal (to if:(is Empty (to)) (apply (forEach Direction (from (to)) (directions {FR FL} of:All) (between (exact 2) if:(is Empty (between))) (if (not (is Friend (who at:(to)))) (move (from) (to (apply if:(is Enemy (who at:(to))) (remove (to))))))))))) (piece "Ma" Each (forEach Direction Orthogonal (to if:(is Empty (to)) (apply (forEach Direction (from (to)) (directions {FR FL} of:All) (if (not (is Friend (who at:(to)))) (move (from) (to (apply if:(is Enemy (who at:(to))) (remove (to))))))))))) (piece "Cha" Each (or {(move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply (remove (to))))) (if (is In (from) (union (sites P1 "Palace") (sites P2 "Palace"))) (move Slide Diagonal (between (max 2) if:(and (is Empty (between)) (is In (between) (union (sites P1 "Palace") (sites P2 "Palace"))))) (to if:(is Enemy (who at:(to))) (apply (remove (to))))))})) (piece "Po" Each (or {(move Hop Orthogonal (between before:(count Rows) after:(count Rows) if:(and {(not (= (what at:(between)) (id "Po" P1))) (not (= (what at:(between)) (id "Po" P2))) (is Occupied (between))})) (to if:(is Empty (to)) (apply if:(and (not (= (what at:(to)) (id "Po" Next))) (not (is Friend (who at:(to))))) (remove (to))))) (move Hop Orthogonal (between before:(count Rows) after:(count Rows) if:(and {(not (= (what at:(between)) (id "Po" P1))) (not (= (what at:(between)) (id "Po" P2))) (is Occupied (between))})) (to if:(is Empty (to)))) (if (is In (from) (union (sites P1 "Palace") (sites P2 "Palace"))) (move Hop Diagonal (between if:(and {(not (= (what at:(between)) (id "Po" P1))) (not (= (what at:(between)) (id "Po" P2))) (is Occupied (between))})) (to if:(and (and (not (= (what at:(to)) (id "Po" Next))) (not (is Friend (who at:(to))))) (is In (to) (union (sites P1 "Palace") (sites P2 "Palace")))) (apply (remove (to))))))})) (piece "Byeong" P1 N (move Step (directions {Forward Rightward Leftward}) (to if:(not (is Friend (who at:(to)))) (apply (remove (to)))))) (piece "Jol" P2 S (move Step (directions {Forward Rightward Leftward}) (to if:(not (is Friend (who at:(to)))) (apply (remove (to)))))) (regions "PalaceP1" P1 {3 4 5 12 13 14 21 22 23}) (regions "PalaceOrthoP1" P1 {4 12 14 22}) (regions "PalaceP2" P2 {66 67 68 75 76 77 84 85 86}) (regions "PalaceOrthoP2" P2 {67 75 77 85})}) (rules (start {(place "Han1" coord:"E2") (place "Sa1" {"D1" "F1"}) (place "Sang1" {"C1" "G1"}) (place "Ma1" {"B1" "H1"}) (place "Cha1" {"A1" "I1"}) (place "Po1" {"B3" "H3"}) (place "Byeong1" {"A4" "C4" "E4" "G4" "I4"}) (place "Cho2" coord:"E9") (place "Sa2" {"D10" "F10"}) (place "Sang2" {"C10" "G10"}) (place "Ma2" {"B10" "H10"}) (place "Cha2" {"A10" "I10"}) (place "Po2" {"B8" "H8"}) (place "Jol2" {"A7" "C7" "E7" "G7" "I7"})}) (play (do (forEach Piece) ifAfterwards:(not (is Threatened (if (is Mover P2) (id "Cho2") (id "Han1")))) (then (if (if (= (column of:(where "Han" P1)) (column of:(where "Cho" P2))) (= (count Sites in:(forEach (sites Direction from:(where "Han" P1) N stop:(= (to) (where "Cho" P2))) if:(is Occupied (site)))) 0) False) (if (!= (var) 1) (set Var 1) (set Var 0)) (set Var 0))))) (end {(if (and (is Threatened (if (is Next P2) (id "Cho2") (id "Han1"))) (not (can Move (do (forEach Piece Next) ifAfterwards:(not (is Threatened (if (is Next P2) (id "Cho2") (id "Han1")))))))) (result Mover Win)) (if (and (if (= (column of:(where "Han" P1)) (column of:(where "Cho" P2))) (= (count Sites in:(forEach (sites Direction from:(where "Han" P1) N stop:(= (to) (where "Cho" P2))) if:(is Occupied (site)))) 0) False) (= (var) 0)) (result Mover Draw))}))) 