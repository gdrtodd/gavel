(game "Loop Xiangqi" (players {(player N) (player S)}) (equipment {(board (rectangle 10 9) use:Vertex) (piece "Shi" Each (move Step Diagonal (to if:(and (is In (to) (sites Mover "Palace")) (not (is Friend (who at:(to))))) (apply if:(is Enemy (who at:(to))) (add (piece (mapEntry "captured" (what at:(to)))) (to Cell (mapEntry "where" (what at:(to))))))))) (piece "Xiang" Each (move Slide Diagonal (between (exact 2) if:(and {(is In (between) (sites Mover "Home")) (is Empty (between))})) (to if:(is Enemy (who at:(to))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "captured" (what at:(to)))) (to Cell (mapEntry "where" (what at:(to)))))))))) (piece "Ma" Each (forEach Direction Orthogonal (to if:(is Empty (to)) (apply (forEach Direction (from (to)) (directions {FR FL} of:All) (if (not (is Friend (who at:(to)))) (move (from) (to (apply if:(is Enemy (who at:(to))) (add (piece (mapEntry "captured" (what at:(to)))) (to Cell (mapEntry "where" (what at:(to)))))))))))))) (piece "Ju" Each (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply (if (is Enemy (who at:(to))) (add (piece (mapEntry "captured" (what at:(to)))) (to Cell (mapEntry "where" (what at:(to)))))))))) (piece "Pao" Each (or (move Slide Orthogonal) (move Hop Orthogonal (between before:(count Rows) after:(count Rows) if:(is Occupied (between))) (to if:(is Empty (to)) (apply if:(is Enemy (who at:(to))) (add (piece (mapEntry "captured" (what at:(to)))) (to Cell (mapEntry "where" (what at:(to)))))))))) (piece "Zu" Each (move Step (if (is In (from) (sites Mover "Home")) Forward (directions {Forward Rightward Leftward})) (to (apply if:(is Enemy (who at:(to))) (add (piece (mapEntry "captured" (what at:(to)))) (to Cell (mapEntry "where" (what at:(to))))))))) (piece "Jiang" Each (move Step Orthogonal (to if:(and (is In (to) (sites Mover "Palace")) (not (is Friend (who at:(to))))) (apply if:(is Enemy (who at:(to))) (add (piece (mapEntry "captured" (what at:(to)))) (to Cell (mapEntry "where" (what at:(to))))))))) (regions "PalaceP1" P1 {3 4 5 12 13 14 21 22 23}) (regions "PalaceP2" P2 {66 67 68 75 76 77 84 85 86}) (regions "Home" P1 (expand (sites Bottom) steps:4)) (regions "Home" P2 (expand (sites Top) steps:4)) (map "where" {(pair 2 90) (pair 1 96) (pair 4 91) (pair 3 97) (pair 6 92) (pair 5 98) (pair 8 93) (pair 7 99) (pair 10 94) (pair 9 100) (pair 12 95) (pair 11 101)}) (map "captured" {(pair 1 2) (pair 2 1) (pair 3 4) (pair 4 3) (pair 5 6) (pair 6 5) (pair 7 8) (pair 8 7) (pair 9 10) (pair 10 9) (pair 11 12) (pair 12 11)}) (regions "PalaceShiP1" P1 {3 5 13 21 23}) (regions "PalaceShiP2" P2 {66 68 76 84 86}) (hand Each size:6)}) (rules (start {(place "Jiang1" coord:"E1") (place "Shi1" {"D1" "F1"}) (place "Xiang1" {"C1" "G1"}) (place "Ma1" {"B1" "H1"}) (place "Ju1" {"A1" "I1"}) (place "Pao1" {"B3" "H3"}) (place "Zu1" {"A4" "C4" "E4" "G4" "I4"}) (place "Jiang2" coord:"E10") (place "Shi2" {"D10" "F10"}) (place "Xiang2" {"C10" "G10"}) (place "Ma2" {"B10" "H10"}) (place "Ju2" {"A10" "I10"}) (place "Pao2" {"B8" "H8"}) (place "Zu2" {"A7" "C7" "E7" "G7" "I7"})}) (play (do (or {(forEach Piece) (move (from (sites Occupied by:Mover container:"Hand" components:{"Ma" "Ju" "Pao" "Zu"})) (to (sites Empty))) (move (from (sites Occupied by:Mover container:"Hand" component:"Shi")) (to (intersection (sites Empty) (sites Mover "PalaceShi")))) (move (from (sites Occupied by:Mover container:"Hand" component:"Xiang")) (to (intersection (sites Empty) (sites Mover "Home"))))}) ifAfterwards:(and (if (= (column of:(where "Jiang" P1)) (column of:(where "Jiang" P2))) (not (= (count Sites in:(forEach (sites Direction from:(where "Jiang" P1) N stop:(= (to) (where "Jiang" P2))) if:(is Occupied (site)))) 0)) True) (not (is Threatened (id "Jiang" Mover)))))) (end {(if (and (is Threatened (id "Jiang" Next)) (not (can Move (do (or {(forEach Piece Next) (move (from (sites Occupied by:Next container:"Hand" components:{"Ma" "Ju" "Pao" "Zu"})) (to (sites Empty))) (move (from (sites Occupied by:Next container:"Hand" component:"Shi")) (to (intersection (sites Empty) (sites Next "PalaceShi")))) (move (from (sites Occupied by:Next container:"Hand" component:"Xiang")) (to (intersection (sites Empty) (sites Next "Home"))))}) ifAfterwards:(not (is Threatened (id "Jiang" Next))))))) (result Mover Win)) (if (no Moves Next) (result Mover Win))}))) 