(game "Annuvin" (players 2) (equipment {(board (rotate 30 (hex 4))) (piece "Ball" Each (move Slide (between (max (if (= -1 (value Player Mover)) 1 (value Player Mover))) if:(not (is Enemy (who at:(between))))) (to if:(is Enemy (who at:(to))) (apply if:(not (is Friend (who at:(to)))) (if (is Enemy (who at:(to))) (remove (to) (then (set Value Next (+ (value Player Next) 1))))))) (then (if (<= (- (if (= -1 (value Player Mover)) 1 (value Player Mover)) (count Steps (last From) (last To))) 0) (set Value Mover (- 7 (count Pieces Mover))) (and (set Value Mover (- (if (= -1 (value Player Mover)) 1 (value Player Mover)) (count Steps (last From) (last To)))) (moveAgain)))))) (hand Each)}) (rules (start {(place "Ball1" (difference (union {(sites Side NW) (sites Side NE) (expand (sites Side N))}) (union (sites Left) (sites Right)))) (place "Ball2" (difference (union {(sites Side SW) (sites Side SE) (expand (sites Side S))}) (union (sites Left) (sites Right))))}) (play (if (is Prev Mover) (move Slide (from (last To)) (between (max (if (= -1 (value Player Mover)) 1 (value Player Mover))) if:(not (is Enemy (who at:(between))))) (to if:(is Enemy (who at:(to))) (apply if:(not (is Friend (who at:(to)))) (if (is Enemy (who at:(to))) (remove (to) (then (set Value Next (+ (value Player Next) 1))))))) (then (if (<= (- (if (= -1 (value Player Mover)) 1 (value Player Mover)) (count Steps (last From) (last To))) 0) (set Value Mover (- 7 (count Pieces Mover))) (and (set Value Mover (- (if (= -1 (value Player Mover)) 1 (value Player Mover)) (count Steps (last From) (last To)))) (moveAgain))))) (forEach Piece))) (end (if (or (and (= 1 (count Pieces Next)) (= 6 (count Pieces Mover))) (no Pieces Next)) (result Mover Win))))) 