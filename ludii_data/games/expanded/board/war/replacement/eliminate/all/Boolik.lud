(game "Boolik" (players 6) (equipment {(board (rectangle 1 15) {(track "Track1" {0 1 2 3 4 5 6 7 8 9 10 11 12 13} loop:True P1) (track "Track2" {13 12 11 10 9 8 7 6 5 4 3 2 1 0} loop:True P2) (track "CaptureTrack1" {13 12 11 10 9 8 7 6 5 4 3 2 1 0} P1 directed:True) (track "CaptureTrack2" {0 1 2 3 4 5 6 7 8 9 10 11 12 13} P2 directed:True) (track "Track3" {0 1 2 3 4 5 6 7 8 9 10 11 12 13} loop:True P3) (track "Track4" {13 12 11 10 9 8 7 6 5 4 3 2 1 0} loop:True P4) (track "CaptureTrack3" {13 12 11 10 9 8 7 6 5 4 3 2 1 0} P3 directed:True) (track "CaptureTrack4" {0 1 2 3 4 5 6 7 8 9 10 11 12 13} P4 directed:True) (track "Track5" {0 1 2 3 4 5 6 7 8 9 10 11 12 13} loop:True P5) (track "Track6" {13 12 11 10 9 8 7 6 5 4 3 2 1 0} loop:True P6) (track "CaptureTrack5" {13 12 11 10 9 8 7 6 5 4 3 2 1 0} P5 directed:True) (track "CaptureTrack6" {0 1 2 3 4 5 6 7 8 9 10 11 12 13} P6 directed:True)} use:Edge) (piece "Stick" Each (or (if (= 0 (state at:(from) level:(level))) (move (from (from) level:(level)) (to (trackSite Move from:(from) "Track" steps:(mapEntry "Throw" (count Pips)))) (then (if (is In (last To) (sites Occupied by:Enemy top:False)) (forEach Level (last To) FromTop (and (if (is Enemy (who at:(last To) level:(level))) (set State at:(last To) level:(level) 2)) (if (is Friend (who at:(last To) level:(level))) (set State at:(last To) level:(level) 1)))))))) (if (= 1 (state at:(from) level:(level))) (if (!= (trackSite Move from:(from) "CaptureTrack" steps:(mapEntry "Throw" (count Pips))) -1) (move (from (from) level:(level)) (to (trackSite Move from:(from) "CaptureTrack" steps:(mapEntry "Throw" (count Pips)))) (then (and (forEach Level (last From) FromTop (if (= 2 (state at:(last From) level:(level))) (fromTo (from (last From) level:(level)) (to (last To))))) (forEach Level (last From) FromTop (if (is Friend (who at:(last From) level:(level))) (set State at:(last From) level:(level) 0)))))) (move Remove (from) level:(level) (then (and {(forEach Level (last From) FromTop (if (is Friend (who at:(last From) level:(level))) (set State at:(last From) level:(level) 0))) (forEach Level (last From) FromTop (if (= 2 (state at:(last From) level:(level))) (remove (last From) level:(level)))) (add (piece (id "Stick" Mover)) (to (handSite Mover)))}))))))) (regions "AllSites" (sites Board Vertex)) (map "Throw" {(pair 0 5) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4)}) (map "Entry" {(pair 1 0) (pair 2 13) (pair 3 0) (pair 4 13) (pair 5 0) (pair 6 13) (pair 7 0) (pair 8 13) (pair 9 0) (pair 10 13) (pair 11 0) (pair 12 13) (pair 13 0) (pair 14 13) (pair 15 0) (pair 16 13)}) (dice d:2 from:0 num:4) (hand Each)}) (rules (start {(set Team 1 {P1 P3 P5}) (set Team 2 {P2 P4 P6}) (place Stack "Stick1" (handSite P1) count:5) (place Stack "Stick2" (handSite P2) count:5) (place Stack "Stick3" (handSite P3) count:5) (place Stack "Stick4" (handSite P4) count:5) (place Stack "Stick5" (handSite P5) count:5) (place Stack "Stick6" (handSite P6) count:5)}) (play (do (roll) next:(or {(if (and (< (count Pieces Mover in:(sites Board)) 1) (is Occupied (handSite Mover))) (move (from (handSite Mover)) (to (trackSite Move from:(mapEntry "Entry" (mover)) "Track" steps:(- (mapEntry "Throw" (count Pips)) 1))))) (forEach Piece)}) (then (if (and (not (no Pieces Mover)) (not (is Prev Mover))) (moveAgain))))) (end (if (no Pieces Enemy) (result TeamMover Win))))) 