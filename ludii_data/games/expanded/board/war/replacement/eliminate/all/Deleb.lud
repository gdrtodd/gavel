(game "Deleb" (players 4) (equipment {(board (rectangle 4 20) {(track "Track1" "0,E,N1,W,N1,E,N1,W,S1,E,S1,W" loop:True P1) (track "Track2" "79,W,S1,E,S1,W,S1,E,N1,W,N1,E" loop:True P2) (track "Track3" "0,E,N1,W,N1,E,N1,W,S1,E,S1,W" loop:True P3) (track "Track4" "79,W,S1,E,S1,W,S1,E,N1,W,N1,E" loop:True P3)} use:Vertex) (dice d:2 from:0 num:4) (piece "Marker" P1 (move (from (from) if:(or (= (mapEntry "Throw" (count Pips)) 1) (= 1 (state at:(from))))) (to (trackSite Move from:(from) steps:(mapEntry "Throw" (count Pips))) if:(and (not (is Friend (who at:(to)))) (or (= 1 (mapEntry "Throw" (count Pips))) (= 0 (count Sites in:(intersection (sites Occupied by:Enemy) (sites Track Mover from:(trackSite Move from:(from) steps:1) to:(trackSite Move from:(from) steps:(- (mapEntry "Throw" (count Pips)) 1)))))))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (if (not (= 1 (state at:(last To)))) (set State at:(last To) 1))))) (piece "Marker" P2 (move (from (from) if:(or (= (mapEntry "Throw" (count Pips)) 1) (= 1 (state at:(from))))) (to (trackSite Move from:(from) steps:(mapEntry "Throw" (count Pips))) if:(and (not (is Friend (who at:(to)))) (or (= 1 (mapEntry "Throw" (count Pips))) (= 0 (count Sites in:(intersection (sites Occupied by:Enemy) (sites Track Mover from:(trackSite Move from:(from) steps:1) to:(trackSite Move from:(from) steps:(- (mapEntry "Throw" (count Pips)) 1)))))))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (if (not (= 1 (state at:(last To)))) (set State at:(last To) 1))))) (map "Throw" {(pair 0 6) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4)})}) (rules (start {(set Team 1 {P1 P3}) (set Team 2 {P2 P4}) (place "Marker1" (sites Bottom)) (place "Marker2" (sites Top))}) phases:{(phase "StageOne" (play (do (roll) next:(move Pass) (then (if (or (= (mapEntry "Throw" (count Pips)) 6) (= (mapEntry "Throw" (count Pips)) 4)) (moveAgain) (if (= (mapEntry "Throw" (count Pips)) 1) (if (is Mover P1) (remember Value "ScoreP1" 1) (if (is Mover P2) (remember Value "ScoreP2" 1) (if (is Mover P3) (remember Value "ScoreP3" 1) (remember Value "ScoreP4" 1))))))))) (nextPhase Mover (= (mapEntry "Throw" (count Pips)) 1) "StageTwo")) (phase "StageTwo" (play (do (roll) next:(move Pass) (then (if (or (= 0 (+ (+ (face 80) (face 81)) (face 82))) (= 1 (+ (+ (face 80) (face 81)) (face 82)))) (and (moveAgain) (if (is Mover P1) (remember Value "ScoreP1" 1) (if (is Mover P2) (remember Value "ScoreP2" 1) (if (is Mover P3) (remember Value "ScoreP3" 1) (remember Value "ScoreP4" 1))))) (if (= 3 (+ (+ (face 80) (face 81)) (face 82))) (and (moveAgain) (if (is Mover P1) (remember Value "ScoreP1" 4) (if (is Mover P2) (remember Value "ScoreP2" 4) (if (is Mover P3) (remember Value "ScoreP3" 4) (remember Value "ScoreP4" 4)))))))))) (nextPhase Mover (= (+ (+ (face 80) (face 81)) (face 82)) 2) "StageThree")) (phase "StageThree" (play (do (roll) next:(move Pass) (then (if (= 0 (+ (face 80) (face 81))) (if (is Mover P1) (forget Value "ScoreP1" All) (if (is Mover P2) (forget Value "ScoreP2" All) (if (is Mover P3) (forget Value "ScoreP3" All) (forget Value "ScoreP4" All)))) (if (= 1 (+ (face 80) (face 81))) (moveAgain) (and (moveAgain) (if (is Mover P1) (remember Value "ScoreP1" 4) (if (is Mover P2) (remember Value "ScoreP2" 4) (if (is Mover P3) (remember Value "ScoreP3" 4) (remember Value "ScoreP4" 4)))))))))) {(nextPhase Mover (= 0 (+ (face 80) (face 81))) "StageOne") (nextPhase Mover (= 2 (+ (face 80) (face 81))) "StageTwo") (nextPhase Mover (= 1 (+ (face 80) (face 81))) "PlayingScore")}) (phase "PlayingScore" (play (if (can Move (if (or (is Mover P1) (is Mover P3)) (forEach Piece (forEach Value (if (is Mover P1) (values Remembered "ScoreP1") (if (is Mover P2) (values Remembered "ScoreP2") (if (is Mover P3) (values Remembered "ScoreP3") (values Remembered "ScoreP4")))) (move (from (from) if:(or (= (value) 1) (= 1 (state at:(from))))) (to (trackSite Move from:(from) steps:(value)) if:(and (not (is Friend (who at:(to)))) (or (= 1 (value)) (= 0 (count Sites in:(intersection (sites Occupied by:Enemy) (sites Track Mover from:(trackSite Move from:(from) steps:1) to:(trackSite Move from:(from) steps:(- (value) 1)))))))) (apply (and (if (is Mover P1) (forget Value "ScoreP1" (value)) (if (is Mover P2) (forget Value "ScoreP2" (value)) (if (is Mover P3) (forget Value "ScoreP3" (value)) (forget Value "ScoreP4" (value))))) (if (is Enemy (who at:(to))) (remove (to)))))) (then (if (not (= 1 (state at:(last To)))) (set State at:(last To) 1))))) P1) (forEach Piece (forEach Value (if (is Mover P1) (values Remembered "ScoreP1") (if (is Mover P2) (values Remembered "ScoreP2") (if (is Mover P3) (values Remembered "ScoreP3") (values Remembered "ScoreP4")))) (move (from (from) if:(or (= (value) 1) (= 1 (state at:(from))))) (to (trackSite Move from:(from) steps:(value)) if:(and (not (is Friend (who at:(to)))) (or (= 1 (value)) (= 0 (count Sites in:(intersection (sites Occupied by:Enemy) (sites Track Mover from:(trackSite Move from:(from) steps:1) to:(trackSite Move from:(from) steps:(- (value) 1)))))))) (apply (and (if (is Mover P1) (forget Value "ScoreP1" (value)) (if (is Mover P2) (forget Value "ScoreP2" (value)) (if (is Mover P3) (forget Value "ScoreP3" (value)) (forget Value "ScoreP4" (value))))) (if (is Enemy (who at:(to))) (remove (to)))))) (then (if (not (= 1 (state at:(last To)))) (set State at:(last To) 1))))) P2))) (if (or (is Mover P1) (is Mover P3)) (forEach Piece (forEach Value (if (is Mover P1) (values Remembered "ScoreP1") (if (is Mover P2) (values Remembered "ScoreP2") (if (is Mover P3) (values Remembered "ScoreP3") (values Remembered "ScoreP4")))) (move (from (from) if:(or (= (value) 1) (= 1 (state at:(from))))) (to (trackSite Move from:(from) steps:(value)) if:(and (not (is Friend (who at:(to)))) (or (= 1 (value)) (= 0 (count Sites in:(intersection (sites Occupied by:Enemy) (sites Track Mover from:(trackSite Move from:(from) steps:1) to:(trackSite Move from:(from) steps:(- (value) 1)))))))) (apply (and (if (is Mover P1) (forget Value "ScoreP1" (value)) (if (is Mover P2) (forget Value "ScoreP2" (value)) (if (is Mover P3) (forget Value "ScoreP3" (value)) (forget Value "ScoreP4" (value))))) (if (is Enemy (who at:(to))) (remove (to)))))) (then (if (not (= 1 (state at:(last To)))) (set State at:(last To) 1))))) P1) (forEach Piece (forEach Value (if (is Mover P1) (values Remembered "ScoreP1") (if (is Mover P2) (values Remembered "ScoreP2") (if (is Mover P3) (values Remembered "ScoreP3") (values Remembered "ScoreP4")))) (move (from (from) if:(or (= (value) 1) (= 1 (state at:(from))))) (to (trackSite Move from:(from) steps:(value)) if:(and (not (is Friend (who at:(to)))) (or (= 1 (value)) (= 0 (count Sites in:(intersection (sites Occupied by:Enemy) (sites Track Mover from:(trackSite Move from:(from) steps:1) to:(trackSite Move from:(from) steps:(- (value) 1)))))))) (apply (and (if (is Mover P1) (forget Value "ScoreP1" (value)) (if (is Mover P2) (forget Value "ScoreP2" (value)) (if (is Mover P3) (forget Value "ScoreP3" (value)) (forget Value "ScoreP4" (value))))) (if (is Enemy (who at:(to))) (remove (to)))))) (then (if (not (= 1 (state at:(last To)))) (set State at:(last To) 1))))) P2)) (move Pass (then (if (is Mover P1) (forget Value "ScoreP1" All) (if (is Mover P2) (forget Value "ScoreP2" All) (if (is Mover P3) (forget Value "ScoreP3" All) (forget Value "ScoreP4" All)))))) (then (if (!= 0 (size Array (if (is Mover P1) (values Remembered "ScoreP1") (if (is Mover P2) (values Remembered "ScoreP2") (if (is Mover P3) (values Remembered "ScoreP3") (values Remembered "ScoreP4")))))) (moveAgain))))) (nextPhase Mover (= 0 (size Array (if (is Mover P1) (values Remembered "ScoreP1") (if (is Mover P2) (values Remembered "ScoreP2") (if (is Mover P3) (values Remembered "ScoreP3") (values Remembered "ScoreP4")))))) "Playing")) (phase "Playing" (play (do (roll) next:(or (if (or (is Mover P1) (is Mover P3)) (forEach Piece P1) (forEach Piece P2)) (move Pass)) (then (if (and (!= 2 (mapEntry "Throw" (count Pips))) (!= 3 (mapEntry "Throw" (count Pips)))) (moveAgain))))))} (end (if (no Pieces Enemy) (result TeamMover Win))))) 