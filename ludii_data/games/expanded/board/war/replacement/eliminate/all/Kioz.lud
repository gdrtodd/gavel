(game "Kioz" (players 2) (equipment {(board (rectangle 4 22) {(track "Track1" "0,E,N1,W," P1 directed:True) (track "Track2" "87,W,S1,E" P2 directed:True) (track "MiddleTrack" "44,E,S1,W" loop:True)}) (dice d:2 from:0 num:4) (piece "Marker" Each) (piece "King" Each) (map "Throw" {(pair 0 4) (pair 1 1) (pair 2 2) (pair 3 2) (pair 4 6)}) (regions "Home" P1 (sites Bottom)) (regions "Home" P2 (sites Top))}) (rules (start {(place "Marker1" (intersection (sites Bottom) (expand (sites Left) steps:17))) (place "King1" (intersection (sites Bottom) (expand (sites Right) steps:3))) (place "Marker2" (intersection (sites Top) (expand (sites Right) steps:17))) (place "King2" (intersection (sites Top) (expand (sites Left) steps:3)))}) (play (do (roll) next:(if (= 1 (mapEntry "Throw" (count Pips))) (priority {(forEach Piece (if (and {(if (!= 0 (state at:(from))) True (= 1 (mapEntry "Throw" (count Pips)))) (not (!= 0 (state at:(from))))}) (if (is In (from) (sites Mover "Home")) (if (not (is Friend (who at:(trackSite Move "Track" steps:(mapEntry "Throw" (count Pips)))))) (move (from) (to (trackSite Move "Track" steps:(mapEntry "Throw" (count Pips))) (apply if:(is Enemy (who at:(to))) (remove (to)))) (then (if (and (not (!= 0 (state at:(last To)))) (= 1 (mapEntry "Throw" (count Pips)))) (set State at:(last To) 1))))) (if (not (is Friend (who at:(trackSite Move "MiddleTrack" steps:(mapEntry "Throw" (count Pips)))))) (move (from) (to (trackSite Move "MiddleTrack" steps:(mapEntry "Throw" (count Pips))) (apply if:(is Enemy (who at:(to))) (remove (to))))))))) (forEach Piece (if (and {(if (!= 0 (state at:(from))) True (= 1 (mapEntry "Throw" (count Pips))))}) (if (is In (from) (sites Mover "Home")) (if (not (is Friend (who at:(trackSite Move "Track" steps:(mapEntry "Throw" (count Pips)))))) (move (from) (to (trackSite Move "Track" steps:(mapEntry "Throw" (count Pips))) (apply if:(is Enemy (who at:(to))) (remove (to)))) (then (if (and (not (!= 0 (state at:(last To)))) (= 1 (mapEntry "Throw" (count Pips)))) (set State at:(last To) 1))))) (if (not (is Friend (who at:(trackSite Move "MiddleTrack" steps:(mapEntry "Throw" (count Pips)))))) (move (from) (to (trackSite Move "MiddleTrack" steps:(mapEntry "Throw" (count Pips))) (apply if:(is Enemy (who at:(to))) (remove (to)))))))))}) (forEach Piece (if (and {(if (!= 0 (state at:(from))) True (= 1 (mapEntry "Throw" (count Pips))))}) (if (is In (from) (sites Mover "Home")) (if (not (is Friend (who at:(trackSite Move "Track" steps:(mapEntry "Throw" (count Pips)))))) (move (from) (to (trackSite Move "Track" steps:(mapEntry "Throw" (count Pips))) (apply if:(is Enemy (who at:(to))) (remove (to)))) (then (if (and (not (!= 0 (state at:(last To)))) (= 1 (mapEntry "Throw" (count Pips)))) (set State at:(last To) 1))))) (if (not (is Friend (who at:(trackSite Move "MiddleTrack" steps:(mapEntry "Throw" (count Pips)))))) (move (from) (to (trackSite Move "MiddleTrack" steps:(mapEntry "Throw" (count Pips))) (apply if:(is Enemy (who at:(to))) (remove (to)))))))))) (then (if (is In (mapEntry "Throw" (count Pips)) (sites {1 4 6})) (moveAgain))))) (end (if (no Pieces Next) (result Next Loss))))) 