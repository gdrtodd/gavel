(game "Sahkku" (players 2) (equipment {(board (rectangle 3 15) {(track "Track1" "0,E,N1,W,N1,E,S1,W" loop:True P1) (track "Track2" "44,W,S1,E,S1,W,N1,E" loop:True P2)}) (dice d:4 from:0 num:3) (piece "Marker" Each (forEach Die if:(!= (pips) 0) (move (from (from) level:(level) if:(or (= 1 (state at:(from) level:(level))) (= 1 (pips)))) (to (trackSite Move from:(from) steps:(pips)) if:(or {(= (id "Gonagas" Shared) (what at:(to))) (is Empty (to)) (and (is Enemy (who at:(to))) (= 1 (state at:(to) level:(topLevel at:(to)))))}) (apply (and {(if (not (= 1 (state at:(from) level:(level)))) (set State at:(from) level:(level) 1)) (forget Value "Pips" (pips)) (if (= (what at:(to)) (id "Gonagas" Shared)) (set State at:(to) (mover)) (if (is Enemy (who at:(to))) (remove (to))))}))) (then (if (not (all DiceUsed)) (moveAgain)))))) (piece "Gonagas" Shared (forEach Die if:(!= (pips) 0) (move Slide (from (from) level:(level) if:(= (state at:(from) level:(level)) (mover))) Orthogonal (between (exact (pips)) if:True) (to (apply if:(or (is Empty (to)) (and (is Enemy (who at:(to))) (= 1 (state at:(to) level:(topLevel at:(to)))))))) (then (and (forEach Level (last To) (if (!= (topLevel at:(last To)) (level)) (remove (last To) level:(level)))) (if (not (all DiceUsed)) (moveAgain)))))))}) (rules (start {(place Stack "Marker1" (sites Bottom)) (place Stack "Marker2" (sites Top)) (place Stack "Gonagas" (centrePoint))}) phases:{(phase "Opening" (play (do (and (roll) (if (and (!= 0 (value Player Mover)) (= 0 (count MovesThisTurn))) (set Value Mover 0))) next:(move Pass (then (and (if (is AnyDie 1) (set Value Mover (+ (if (and (= 1 (face 45)) (all DiceEqual)) 3 (if (or {(and {(not (= 1 (face 45))) (= 1 (face 46)) (= 1 (face 47))}) (and {(= 1 (face 45)) (not (= 1 (face 46))) (= 1 (face 47))}) (and {(= 1 (face 45)) (= 1 (face 46)) (not (= 1 (face 47)))})}) 2 (if (or {(and {(not (= 1 (face 45))) (not (= 1 (face 46))) (= 1 (face 47))}) (and {(= 1 (face 45)) (not (= 1 (face 46))) (not (= 1 (face 47)))}) (and {(not (= 1 (face 45))) (= 1 (face 46)) (not (= 1 (face 47)))})}) 1 0))) (value Player Mover)))) (forEach Die (if (!= 0 (pips)) (remember Value "Pips" (pips))))))) (then (if (or (<= 3 (value Player Mover)) (!= 2 (count MovesThisTurn))) (moveAgain) (and (forget Value "Pips" All) (set Value Mover 0)))))) (nextPhase Mover (<= 3 (value Player Mover)) "PlayingPips")) (phase "PlayingPips" (play (do (if (not (is Prev Mover)) (roll)) next:(or (forEach Piece (forEach Value (values Remembered "Pips") (move (from (from) level:(level) if:(or (= 1 (state at:(from) level:(level))) (= 1 (value)))) (to (trackSite Move from:(from) steps:(value)) if:(or {(= (id "Gonagas" Shared) (what at:(to))) (is Empty (to)) (and (is Enemy (who at:(to))) (= 1 (state at:(to) level:(topLevel at:(to)))))}) (apply (and {(if (not (= 1 (state at:(from) level:(level)))) (set State at:(from) level:(level) 1)) (forget Value "Pips" (value)) (if (= (what at:(to)) (id "Gonagas" Shared)) (set State at:(to) (mover)) (if (is Enemy (who at:(to))) (remove (to))))}))) (then (if (!= 0 (size Array (values Remembered "Pips"))) (moveAgain)))))) (forEach Piece (forEach Value (values Remembered "Pips") (move Slide (from (from) level:(level) if:(= (state at:(from) level:(level)) (mover))) Orthogonal (between (exact (value)) if:True) (to (apply if:(or (is Empty (to)) (and (is Enemy (who at:(to))) (= 1 (state at:(to) level:(topLevel at:(to)))))))) (then (and {(forEach Level (last To) (if (!= (topLevel at:(last To)) (level)) (remove (last To) level:(level)))) (forget Value "Pips" (count Steps (last From) (last To))) (if (!= 1 (size Array (values Remembered "Pips"))) (moveAgain))})))) Shared)))) (nextPhase Mover (= 0 (size Array (values Remembered "Pips"))) "Playing")) (phase "Playing" (play (do (if (not (is Prev Mover)) (roll)) next:(or (forEach Piece) (forEach Piece Shared)))))} (end (if (no Pieces Next) (result Next Loss))))) 