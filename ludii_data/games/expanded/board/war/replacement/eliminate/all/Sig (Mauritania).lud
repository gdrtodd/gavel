(game "Sig (Mauritania)" (players 4) (equipment {(board (rectangle 4 20) {(track "Track1" "19,W,N1,E,N1,W,N1,E" P1 directed:True) (track "Track2" "79,W,S1,E,S1,W,S1,E" P2 directed:True) (track "LoopTrack1" "40,E,S1,W" loop:True P1) (track "LoopTrack2" "20,E,N1,W" loop:True P2) (track "GoBackTrack1" "79,W,S1,E,S1,W" P1 directed:True) (track "GoBackTrack2" "19,W,N1,E,N1,W" P2 directed:True)} use:Vertex) (dice d:2 from:0 num:8) (piece "Marker" P1 (if (< (state at:(from)) 2) (or (if (<= (var) 0) (move (from (from) if:(if (< 0 (state at:(from))) True (is In (count Pips) (sites {1 8})))) (to (trackSite Move "Track" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (or (is Empty (to)) (and (is Enemy (who at:(to))) (< (state at:(to)) 2))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (if (not (< 0 (state at:(last To)))) (set State at:(last To) 1))))) (if (or (= (count Pips) 8) (> (var) 0)) (move (from (from)) (to (trackSite Move "Track" steps:1) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (or (is Empty (to)) (and (is Enemy (who at:(to))) (< (state at:(to)) 2))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (and (if (not (< 0 (state at:(last To)))) (set State at:(last To) 1)) (if (> (var) 0) (and (if (> (var) 1) (moveAgain)) (set Var (- (var) 1))) (and (set Var (- (count Pips) 1)) (moveAgain))))))) (then (if (is In (last To) (if (is In (mover) (players Team1)) (sites Top) (sites Bottom))) (set State at:(last To) 2)))) (if (= (state at:(from)) 2) (move (from (from)) (to (trackSite Move "GoBackTrack" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (not (is Friend (who at:(to)))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (if (is In (last To) (difference (sites Board) (union (sites Top) (sites Bottom)))) (set State at:(last To) 3)))) (if (= (state at:(from)) 3) (move (from (from)) (to (trackSite Move "LoopTrack" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (not (is Friend (who at:(to)))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to)))))))))) (piece "Stick" P2 (if (< (state at:(from)) 2) (or (if (<= (var) 0) (move (from (from) if:(if (< 0 (state at:(from))) True (is In (count Pips) (sites {1 8})))) (to (trackSite Move "Track" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (or (is Empty (to)) (and (is Enemy (who at:(to))) (< (state at:(to)) 2))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (if (not (< 0 (state at:(last To)))) (set State at:(last To) 1))))) (if (or (= (count Pips) 8) (> (var) 0)) (move (from (from)) (to (trackSite Move "Track" steps:1) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (or (is Empty (to)) (and (is Enemy (who at:(to))) (< (state at:(to)) 2))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (and (if (not (< 0 (state at:(last To)))) (set State at:(last To) 1)) (if (> (var) 0) (and (if (> (var) 1) (moveAgain)) (set Var (- (var) 1))) (and (set Var (- (count Pips) 1)) (moveAgain))))))) (then (if (is In (last To) (if (is In (mover) (players Team1)) (sites Top) (sites Bottom))) (set State at:(last To) 2)))) (if (= (state at:(from)) 2) (move (from (from)) (to (trackSite Move "GoBackTrack" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (not (is Friend (who at:(to)))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (if (is In (last To) (difference (sites Board) (union (sites Top) (sites Bottom)))) (set State at:(last To) 3)))) (if (= (state at:(from)) 3) (move (from (from)) (to (trackSite Move "LoopTrack" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (not (is Friend (who at:(to)))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))))))))}) (rules (start {(place "Marker1" (sites Bottom)) (place "Stick2" (sites Top)) (set Team 1 {P1 P3}) (set Team 2 {P2 P4})}) phases:{(phase "MovingPhase" (play (do (if (<= (var) 0) (roll)) next:(if (is In (mover) (players Team1)) (forEach Piece P1) (forEach Piece P2)) (then (if (= (count Pips) 4) (moveAgain))))) (nextPhase (and (= 0 (count Sites in:(difference (sites Occupied by:All) (difference (sites Board) (union (sites Top) (sites Bottom)))))) (= 0 (count Sites in:(forEach (sites Occupied by:All) if:(< (state at:(site)) 2))))) "RemovingPhase")) (phase "RemovingPhase" (play (do (roll) next:(if (= (count Pips) 4) (move Remove (sites Occupied by:Enemy))))))} (end (if (no Pieces Enemy) (result TeamMover Win))))) 