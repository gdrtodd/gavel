(game "Sig (Western Sahara)" (players 4) (equipment {(board (rectangle 4 20) {(track "Track1" "0,E,N1,W,N1,E,N1,W" P1 directed:True) (track "Track2" "79,W,S1,E,S1,W,S1,E" P2 directed:True) (track "Track3" "0,E,N1,W,N1,E,N1,W" P3 directed:True) (track "Track4" "79,W,S1,E,S1,W,S1,E" P4 directed:True)} use:Vertex) (piece "Stick" Each) (regions "AllSites" (sites Board)) (dice d:2 from:0 num:8) (map "Throw" {(pair 0 8) (pair 1 1) (pair 2 6) (pair 3 5) (pair 4 4) (pair 5 5) (pair 6 6) (pair 7 1) (pair 8 8)}) (regions "Home" P1 (sites Bottom)) (regions "Home" P2 (sites Top)) (regions "Home" P3 (sites Bottom)) (regions "Home" P4 (sites Top))}) (rules (start {(set Team 1 {P1 P3}) (set Team 2 {P2 P4}) (place "Stick1" (sites Bottom)) (place "Stick2" (sites Top))}) (play (do (roll) next:(if (or (is Mover P1) (is Mover P3)) (forEach Site (sites Occupied by:Team1) (move (from (site)) (to (trackSite Move steps:(mapEntry (count Pips))) if:(and (or (is Empty (to)) (and (not (is In (to) (sites Next "Home"))) (is Enemy (who at:(to))))) (= 1 (count Sites in:(intersection (sites Occupied by:Team1) (sites Track Mover "Track" from:(from) to:(trackSite Move steps:(mapEntry (count Pips)))))))) (apply if:(is Enemy (who at:(to))) (remove (to)))))) (forEach Site (sites Occupied by:Team2) (move (from (site)) (to (trackSite Move steps:(mapEntry (count Pips))) if:(and (or (is Empty (to)) (and (not (is In (to) (sites Next "Home"))) (is Enemy (who at:(to))))) (= 1 (count Sites in:(intersection (sites Occupied by:Team2) (sites Track Mover "Track" from:(from) to:(trackSite Move steps:(mapEntry (count Pips)))))))) (apply if:(is Enemy (who at:(to))) (remove (to))))))) (then (if (is In (mapEntry (count Pips)) (sites {1 4})) (moveAgain))))) (end (if (and (= 0 (count Sites in:(difference (sites Occupied by:Team1) (sites P2 "Home")))) (= 0 (count Sites in:(difference (sites Occupied by:Team2) (sites P1 "Home"))))) {(if (= (count Sites in:(sites Occupied by:Team1)) (count Sites in:(sites Occupied by:Team2))) (result Mover Draw)) (if (< (count Sites in:(sites Occupied by:Team1)) (count Sites in:(sites Occupied by:Team2))) (result Team2 Win)) (if (> (count Sites in:(sites Occupied by:Team1)) (count Sites in:(sites Occupied by:Team2))) (result Team1 Win))})))) 