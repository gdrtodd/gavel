(game "Chains of Thought" (players 2) (equipment {(board (tri Hexagon 4) use:Vertex) (piece "Disc" Each)}) (rules (play (or (move Add (to (sites Empty) if:(or (no Pieces in:(sites Around (to) Orthogonal)) (= (+ 1 (count Pieces in:(sites Group from:(sites Around (to) Orthogonal) Orthogonal if:(is Mover (who at:(to)))))) (count Pieces in:(sites Group from:(sites Around (to) Orthogonal) Orthogonal if:(is Next (who at:(to)))))))) (then (remove (forEach (sites Around (sites Group at:(last To) Orthogonal if:(is In (to) (sites Occupied by:Mover))) Orthogonal if:(is Next (who at:(to)))) if:(> (size Group at:(last To) Orthogonal if:(is Mover (who at:(to)))) (size Group at:(site) Orthogonal if:(is Next (who at:(to)))))) (then (forEach Value (array (sites Around (sites Occupied by:Mover) Orthogonal if:(is Next (who at:(to))))) (if (> (count Pieces in:(sites Group from:(sites Around (value) Orthogonal) Orthogonal if:(is Mover (who at:(to))))) (size Group at:(value) Orthogonal if:(is Next (who at:(to))))) (remove (value)))))))) (do (and {(set Var "GroupCount" (count Groups Orthogonal if:(is Mover (who at:(to))))) (set Var "LargestMover" (max (sizes Group Orthogonal Mover)) (then (set Var "LargestNext" (max (sizes Group Orthogonal Next)) (then (set Var "SecondLargestMover" (max (difference (sizes Group Orthogonal Mover) (var "LargestMover"))) (then (set Var "LargestUnique" (if (and (> (var "LargestMover") (var "LargestNext")) (> (var "LargestMover") (var "SecondLargestMover"))) (var "LargestMover") 0))))))))}) next:(forEach Piece (move Step Orthogonal (to if:(is In (to) (difference (intersection (sites Empty) (sites Around (difference (sites Occupied by:Mover) (from)) Orthogonal)) (sites Around (forEach (sites Occupied by:Mover) if:(= (size Group at:(site) Orthogonal) (var "LargestUnique"))) Orthogonal)))))) ifAfterwards:(and {(< (count Groups Orthogonal if:(is Mover (who at:(to)))) (var "GroupCount")) (>= (size Group at:(last To) Orthogonal if:(is Mover (who at:(to)))) (max (results from:(sites Around (last To) Orthogonal if:(is Next (who at:(to)))) to:(from) (size Group at:(to) Orthogonal if:(is Next (who at:(to)))))))}) (then (remove (forEach (sites Around (sites Group at:(last To) Orthogonal if:(is In (to) (sites Occupied by:Mover))) Orthogonal if:(is Next (who at:(to)))) if:(> (size Group at:(last To) Orthogonal if:(is Mover (who at:(to)))) (size Group at:(site) Orthogonal if:(is Next (who at:(to)))))) (then (forEach Value (array (sites Around (sites Occupied by:Mover) Orthogonal if:(is Next (who at:(to))))) (if (> (count Pieces in:(sites Group from:(sites Around (value) Orthogonal) Orthogonal if:(is Mover (who at:(to))))) (size Group at:(value) Orthogonal if:(is Next (who at:(to))))) (remove (value)))))))) (then (and (set Score P1 (max (difference (sizes Group Orthogonal P1) (sizes Group Orthogonal P2)))) (set Score P2 (max (difference (sizes Group Orthogonal P2) (sizes Group Orthogonal P1)))))))) (end (if (no Moves Next) (byScore))))) 