(game "Equi Game System" (players 2) (equipment {(board (tri {3 4 3 4 3}) use:Vertex) (piece "Disc" Each) (piece "Hex" Each)}) (rules (start (set Score Each 0)) (play (priority (if (is Prev Mover) (if (is Pending) (or (forEach Piece "Disc" (move Hop (from (last To)) Orthogonal (between if:(is In (between) (difference (intersection (difference (sites Occupied by:All) (sites Occupied by:Mover)) (sites Occupied by:All component:"Hex")) (sites (values Remembered)))) (apply (and (addScore (player (who at:(between))) (- 1)) (set Pending (between))))) (to if:(is Empty (to)))) (then (and {(remember Value (value Pending)) (remove (value Pending)) (add (piece (id "Hex" Mover)) (to (value Pending))) (addScore Mover 1)} (then (and (set Pending) (moveAgain)))))) (forEach Piece "Disc" (move Hop (from (last To)) Orthogonal (between if:(is In (between) (difference (intersection (difference (sites Occupied by:All) (sites Occupied by:Mover)) (sites Occupied by:All component:"Disc")) (sites (values Remembered)))) (apply (and (addScore (player (who at:(between))) (- -3)) (set Pending (between))))) (to if:(is Empty (to)))) (then (and {(remember Value (value Pending)) (remove (value Pending)) (add (piece (id "Hex" Mover)) (to (value Pending))) (addScore Mover 1)} (then (and (set Pending) (moveAgain)))))))) (do (forget Value All) next:(or (forEach Piece "Disc" (move Hop (from) Orthogonal (between if:(is In (between) (difference (intersection (difference (sites Occupied by:All) (sites Occupied by:Mover)) (sites Occupied by:All component:"Hex")) (sites (values Remembered)))) (apply (and (addScore (player (who at:(between))) (- 1)) (set Pending (between))))) (to if:(is Empty (to)))) (then (and {(remember Value (value Pending)) (remove (value Pending)) (add (piece (id "Hex" Mover)) (to (value Pending))) (addScore Mover 1)} (then (and (set Pending) (moveAgain)))))) (forEach Piece "Disc" (move Hop (from) Orthogonal (between if:(is In (between) (difference (intersection (difference (sites Occupied by:All) (sites Occupied by:Mover)) (sites Occupied by:All component:"Disc")) (sites (values Remembered)))) (apply (and (addScore (player (who at:(between))) (- -3)) (set Pending (between))))) (to if:(is Empty (to)))) (then (and {(remember Value (value Pending)) (remove (value Pending)) (add (piece (id "Hex" Mover)) (to (value Pending))) (addScore Mover 1)} (then (and (set Pending) (moveAgain))))))))) (or {(if (is Prev Mover) (or (move Add (piece (id "Disc" Mover)) (to (forEach (sites Empty) if:(!= (count Sites in:(intersection {(sites Occupied by:Mover) (sites Direction from:(site) Orthogonal distance:1) (sites LineOfSight Piece at:(site) Orthogonal)})) (count Sites in:(intersection {(difference (sites Occupied by:All) (sites Occupied by:Mover)) (sites Direction from:(site) Orthogonal distance:1) (sites LineOfSight Piece at:(site) Orthogonal)}))))) (then (and (addScore Mover -3) (set Var "FirstNoPlace" 0)))) (move Add (piece (id "Hex" Mover)) (to (forEach (sites Empty) if:(= (count Sites in:(intersection {(sites Occupied by:Mover) (sites Direction from:(site) Orthogonal distance:1) (sites LineOfSight Piece at:(site) Orthogonal)})) (count Sites in:(intersection {(difference (sites Occupied by:All) (sites Occupied by:Mover)) (sites Direction from:(site) Orthogonal distance:1) (sites LineOfSight Piece at:(site) Orthogonal)}))))) (then (and (addScore Mover 1) (set Var "FirstNoPlace" 0))))) (or {(move Add (piece (id "Hex" Mover)) (to (forEach (sites Empty) if:(= (count Sites in:(intersection {(sites Occupied by:Mover) (sites Direction from:(site) Orthogonal distance:1) (sites LineOfSight Piece at:(site) Orthogonal)})) (count Sites in:(intersection {(difference (sites Occupied by:All) (sites Occupied by:Mover)) (sites Direction from:(site) Orthogonal distance:1) (sites LineOfSight Piece at:(site) Orthogonal)}))))) (then (and (addScore Mover 1) (set Var "FirstNoPlace" 0)))) (move Add (piece (id "Disc" Mover)) (to (forEach (sites Empty) if:(!= (count Sites in:(intersection {(sites Occupied by:Mover) (sites Direction from:(site) Orthogonal distance:1) (sites LineOfSight Piece at:(site) Orthogonal)})) (count Sites in:(intersection {(difference (sites Occupied by:All) (sites Occupied by:Mover)) (sites Direction from:(site) Orthogonal distance:1) (sites LineOfSight Piece at:(site) Orthogonal)}))))) (then (and (addScore Mover -3) (set Var "FirstNoPlace" 0)))) (forEach Piece "Disc" (move (from (from)) (to (sites Around (from) Orthogonal) if:(is Empty (to))) (then (moveAgain))))})) (if (is Prev Mover) (if (is Pending) (or (forEach Piece "Disc" (move Hop (from (last To)) Orthogonal (between if:(is In (between) (difference (intersection (sites Occupied by:Mover) (sites Occupied by:All component:"Hex")) (sites (values Remembered)))) (apply (and (addScore (player (who at:(between))) (- 1)) (set Pending (between))))) (to if:(is Empty (to)))) (then (and {(remember Value (value Pending)) (remove (value Pending)) (add (piece (id "Hex" Mover)) (to (value Pending))) (addScore Mover 1)} (then (and (set Pending) (moveAgain)))))) (forEach Piece "Disc" (move Hop (from (last To)) Orthogonal (between if:(is In (between) (difference (intersection (sites Occupied by:Mover) (sites Occupied by:All component:"Disc")) (sites (values Remembered)))) (apply (and (addScore (player (who at:(between))) (- -3)) (set Pending (between))))) (to if:(is Empty (to)))) (then (and {(remember Value (value Pending)) (remove (value Pending)) (add (piece (id "Hex" Mover)) (to (value Pending))) (addScore Mover 1)} (then (and (set Pending) (moveAgain)))))))) (do (forget Value All) next:(or (forEach Piece "Disc" (move Hop (from) Orthogonal (between if:(is In (between) (difference (intersection (sites Occupied by:Mover) (sites Occupied by:All component:"Hex")) (sites (values Remembered)))) (apply (and (addScore (player (who at:(between))) (- 1)) (set Pending (between))))) (to if:(is Empty (to)))) (then (and {(remember Value (value Pending)) (remove (value Pending)) (add (piece (id "Hex" Mover)) (to (value Pending))) (addScore Mover 1)} (then (and (set Pending) (moveAgain)))))) (forEach Piece "Disc" (move Hop (from) Orthogonal (between if:(is In (between) (difference (intersection (sites Occupied by:Mover) (sites Occupied by:All component:"Disc")) (sites (values Remembered)))) (apply (and (addScore (player (who at:(between))) (- -3)) (set Pending (between))))) (to if:(is Empty (to)))) (then (and {(remember Value (value Pending)) (remove (value Pending)) (add (piece (id "Hex" Mover)) (to (value Pending))) (addScore Mover 1)} (then (and (set Pending) (moveAgain)))))))))}))) (end {(if (and {(no Moves Mover) (= 1 (var "FirstNoPlace")) (= (score Mover) (score Next))}) (result P1 Win)) (if (and {(no Moves Mover) (= 2 (var "FirstNoPlace")) (= (score Mover) (score Next))}) (result P2 Win)) (if (and (no Moves Mover) (!= (score Mover) (score Next))) (byScore))}))) 