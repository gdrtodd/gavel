(game "Parry" (players 3) (equipment {(board (tri {3 5 3 5 3}) use:Vertex) (piece "Ball" Each)}) (rules (meta (no Repeat PositionalInTurn)) (start {(set Score Each 1)}) (play (if (is Prev Mover) (or (move Pass (then (forEach Player (set Score (player (player)) (max 0 (size Array (array (forEach (sites Board) if:(or (< 0 (- (* 2 (count Pieces of:(player) in:(sites Around (site) Orthogonal includeSelf:True))) (count Pieces All in:(sites Around (site) Orthogonal includeSelf:True)))) (and {(= (player) (who at:(site))) (is In (site) (difference (sites Occupied by:(player (player))) (sites (results from:(difference (sites Occupied by:All) (sites Occupied by:(player (player)))) to:(sites Around (from) if:(and (= (player) (who at:(to))) (< 0 (- (* 2 (count Pieces of:(who at:(from)) in:(sites Around (to) Orthogonal includeSelf:True))) (count Pieces All in:(sites Around (to) Orthogonal includeSelf:True)))))) (to)))))})))))))))) (do (set Value Mover (- (value Player Mover) 1)) next:(forEach Piece (move Step (from if:(!= (from) (var "PlacedPiece"))) Orthogonal (to if:(is Empty (to))) (then (if (>= 0 (value Player Mover)) (forEach Player (set Score (player (player)) (max 0 (size Array (array (forEach (sites Board) if:(or (< 0 (- (* 2 (count Pieces of:(player) in:(sites Around (site) Orthogonal includeSelf:True))) (count Pieces All in:(sites Around (site) Orthogonal includeSelf:True)))) (and {(= (player) (who at:(site))) (is In (site) (difference (sites Occupied by:(player (player))) (sites (results from:(difference (sites Occupied by:All) (sites Occupied by:(player (player)))) to:(sites Around (from) if:(and (= (player) (who at:(to))) (< 0 (- (* 2 (count Pieces of:(who at:(from)) in:(sites Around (to) Orthogonal includeSelf:True))) (count Pieces All in:(sites Around (to) Orthogonal includeSelf:True)))))) (to)))))})))))))) (moveAgain))))))) (priority (move Add (to (forEach (sites Empty) if:(< 0 (- (* 2 (count Pieces of:(mover) in:(sites Around (site) Orthogonal includeSelf:True))) (count Pieces All in:(sites Around (site) Orthogonal includeSelf:True))))) (apply (set Var "PlacedPiece" (to))))) (move Add (to (difference (sites Empty) (sites (results from:(difference (sites Board) (sites Empty)) to:(sites Around (from) if:(and (is Empty (to)) (< 0 (- (* 2 (count Pieces of:(who at:(from)) in:(sites Around (to) Orthogonal includeSelf:True))) (count Pieces All in:(sites Around (to) Orthogonal includeSelf:True)))))) (to)))) (apply (set Var "PlacedPiece" (to))))) (then (set Value Mover (max 0 (- (- (* 2 (count Pieces of:(mover) in:(sites Around (last To) Orthogonal includeSelf:True))) (count Pieces All in:(sites Around (last To) Orthogonal includeSelf:True))) 1)) (then (if (>= 0 (value Player Mover)) (forEach Player (set Score (player (player)) (max 0 (size Array (array (forEach (sites Board) if:(or (< 0 (- (* 2 (count Pieces of:(player) in:(sites Around (site) Orthogonal includeSelf:True))) (count Pieces All in:(sites Around (site) Orthogonal includeSelf:True)))) (and {(= (player) (who at:(site))) (is In (site) (difference (sites Occupied by:(player (player))) (sites (results from:(difference (sites Occupied by:All) (sites Occupied by:(player (player)))) to:(sites Around (from) if:(and (= (player) (who at:(to))) (< 0 (- (* 2 (count Pieces of:(who at:(from)) in:(sites Around (to) Orthogonal includeSelf:True))) (count Pieces All in:(sites Around (to) Orthogonal includeSelf:True)))))) (to)))))})))))))) (and (forEach Player (set Score (player (player)) (max 0 (size Array (array (forEach (sites Board) if:(or (< 0 (- (* 2 (count Pieces of:(player) in:(sites Around (site) Orthogonal includeSelf:True))) (count Pieces All in:(sites Around (site) Orthogonal includeSelf:True)))) (and {(= (player) (who at:(site))) (is In (site) (difference (sites Occupied by:(player (player))) (sites (results from:(difference (sites Occupied by:All) (sites Occupied by:(player (player)))) to:(sites Around (from) if:(and (= (player) (who at:(to))) (< 0 (- (* 2 (count Pieces of:(who at:(from)) in:(sites Around (to) Orthogonal includeSelf:True))) (count Pieces All in:(sites Around (to) Orthogonal includeSelf:True)))))) (to)))))})))))))) (moveAgain))))))))) (end {(if (and {(or (no Moves Next) (all Passed)) (= 2 3) (= (score P1) (score P2)) (= (id P1) (what at:(var "PlacedPiece")))}) (result P1 Win)) (if (and {(or (no Moves Next) (all Passed)) (= 2 3) (= (score P1) (score P2)) (!= (id P1) (what at:(var "PlacedPiece")))}) (result P2 Win)) (if (or (no Moves Next) (all Passed)) (byScore))}))) 