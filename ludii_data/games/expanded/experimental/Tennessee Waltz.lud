(game "Tennessee Waltz" (players 2) (equipment {(board (square (+ 1 4)) use:Vertex) (hand Each size:1) (piece "Disc" Each)}) (rules (play (or {(if (= 1 (% (+ (score P1) (score P2)) 2)) (move Pass)) (move Add (to (sites Empty) if:(not (and (= 1 (count Pieces Mover in:(sites Around (to) Orthogonal))) (no Pieces Mover in:(sites Around (intersection (sites Around (to) Orthogonal) (sites Occupied by:Mover)) Orthogonal)))))) (do (set Var "StartTurnEnemy" (count Sites in:(sites Occupied by:Next))) next:(do (move Select (from (sites Empty) if:(and (= 1 (count Pieces Mover in:(sites Around (from) Orthogonal))) (no Pieces Mover in:(sites Around (intersection (sites Around (from) Orthogonal) (sites Occupied by:Mover)) Orthogonal)))) (to (sites Around (from) All)) (then (and (set Var "LF" (last From) (then (set Var "LT" (last To) (then (set Var "PairedSite" (regionSite (intersection (sites Around (var "LF") Orthogonal) (sites Occupied by:Mover)) index:0)))))) (add (piece (id "Disc" Mover)) (to (last From)) (then (if (= (var "PairedSite") (var "LT")) (push (from (var "LF")) (directions Vertex from:(var "LF") to:(var "LT"))) (if (= (var "LF") (ahead (var "PairedSite") (directions Vertex from:(var "LF") to:(var "LT")))) (push (from (var "PairedSite")) (directions Vertex from:(var "LF") to:(var "LT"))) (if (= (var "PairedSite") (ahead (var "PairedSite") (directions Vertex from:(var "LF") to:(var "LT")))) (remove (var "LF")) (and (push (from (var "LF")) (directions Vertex from:(var "LF") to:(var "LT"))) (push (from (var "PairedSite")) (directions Vertex from:(var "LF") to:(var "LT")))))))))))) ifAfterwards:(and (not (is Repeat PositionalInTurn)) (= (count Sites in:(sites Occupied by:Next)) (var "StartTurnEnemy")))))} (then (and (and (set Score Mover (size Array (results from:(intersection (sites Board) (sites Occupied by:Mover)) to:(forEach (sites Around (from) Orthogonal) if:(and (is Mover (who at:(site))) (= 2 (count Pieces Mover in:(union (sites Around (from) Orthogonal) (sites Around (site) Orthogonal)))))) (from)))) (if (> (size Array (results from:(intersection (sites Board) (sites Occupied by:Mover)) to:(forEach (sites Around (from) Orthogonal) if:(and (is Mover (who at:(site))) (= 2 (count Pieces Mover in:(union (sites Around (from) Orthogonal) (sites Around (site) Orthogonal)))))) (from))) (size Array (results from:(intersection (sites Board) (sites Occupied by:Next)) to:(forEach (sites Around (from) Orthogonal) if:(and (is Next (who at:(site))) (= 2 (count Pieces Next in:(union (sites Around (from) Orthogonal) (sites Around (site) Orthogonal)))))) (from)))) (addScore Mover 1 (then (if (no Pieces Mover in:(sites Hand Mover)) (add (piece (id "Disc" Mover)) (to (handSite Mover)) stack:False (then (remove (sites Hand Next))))))) (if (and (not (no Pieces Mover in:(sites Hand Mover))) (= (size Array (results from:(intersection (sites Board) (sites Occupied by:Mover)) to:(forEach (sites Around (from) Orthogonal) if:(and (is Mover (who at:(site))) (= 2 (count Pieces Mover in:(union (sites Around (from) Orthogonal) (sites Around (site) Orthogonal)))))) (from))) (size Array (results from:(intersection (sites Board) (sites Occupied by:Next)) to:(forEach (sites Around (from) Orthogonal) if:(and (is Next (who at:(site))) (= 2 (count Pieces Next in:(union (sites Around (from) Orthogonal) (sites Around (site) Orthogonal)))))) (from))))) (addScore Mover 1)))) (and (set Score Next (size Array (results from:(intersection (sites Board) (sites Occupied by:Next)) to:(forEach (sites Around (from) Orthogonal) if:(and (is Next (who at:(site))) (= 2 (count Pieces Next in:(union (sites Around (from) Orthogonal) (sites Around (site) Orthogonal)))))) (from)))) (if (> (size Array (results from:(intersection (sites Board) (sites Occupied by:Next)) to:(forEach (sites Around (from) Orthogonal) if:(and (is Next (who at:(site))) (= 2 (count Pieces Next in:(union (sites Around (from) Orthogonal) (sites Around (site) Orthogonal)))))) (from))) (size Array (results from:(intersection (sites Board) (sites Occupied by:Mover)) to:(forEach (sites Around (from) Orthogonal) if:(and (is Mover (who at:(site))) (= 2 (count Pieces Mover in:(union (sites Around (from) Orthogonal) (sites Around (site) Orthogonal)))))) (from)))) (addScore Next 1 (then (if (no Pieces Next in:(sites Hand Next)) (add (piece (id "Disc" Next)) (to (handSite Next)) stack:False (then (remove (sites Hand Mover))))))) (if (and (not (no Pieces Next in:(sites Hand Next))) (= (size Array (results from:(intersection (sites Board) (sites Occupied by:Next)) to:(forEach (sites Around (from) Orthogonal) if:(and (is Next (who at:(site))) (= 2 (count Pieces Next in:(union (sites Around (from) Orthogonal) (sites Around (site) Orthogonal)))))) (from))) (size Array (results from:(intersection (sites Board) (sites Occupied by:Mover)) to:(forEach (sites Around (from) Orthogonal) if:(and (is Mover (who at:(site))) (= 2 (count Pieces Mover in:(union (sites Around (from) Orthogonal) (sites Around (site) Orthogonal)))))) (from))))) (addScore Next 1)))))))) (end (if (or (or {(and (> (score Mover) (score Next)) (= 0 (size Array (array (sites To (select (from (sites Empty) if:(or {(and (= 1 (count Pieces Next in:(sites Around (from) Orthogonal))) (no Pieces Next in:(sites Around (intersection (sites Around (from) Orthogonal) (sites Occupied by:Next)) Orthogonal))) (and (no Pieces Next in:(sites Around (from) Orthogonal)) (< 0 (size Array (array (forEach (intersection (sites Around (from) Orthogonal) (sites Empty)) if:(no Pieces Next in:(sites Around (site) Orthogonal)))))))})))))))) (and (< (score Mover) (score Next)) (= 0 (size Array (array (sites To (select (from (sites Empty) if:(or {(and (= 1 (count Pieces Mover in:(sites Around (from) Orthogonal))) (no Pieces Mover in:(sites Around (intersection (sites Around (from) Orthogonal) (sites Occupied by:Mover)) Orthogonal))) (and (no Pieces Mover in:(sites Around (from) Orthogonal)) (< 0 (size Array (array (forEach (intersection (sites Around (from) Orthogonal) (sites Empty)) if:(no Pieces Mover in:(sites Around (site) Orthogonal)))))))}))))))))}) (all Passed)) (byScore))))) 