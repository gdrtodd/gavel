(game "Chase" (players 1) (equipment {(board (rectangle 10 20)) (piece "Human" P1 (move Step (to if:(is Empty (to))) (then (forEach Site (sites Occupied by:Shared) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) NE) (where (id "Human")))) (if (= (what at:(ahead (site) NE)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) NE) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) NW) (where (id "Human")))) (if (= (what at:(ahead (site) NW)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) NW) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) SW) (where (id "Human")))) (if (= (what at:(ahead (site) SW)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) SW) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) SE) (where (id "Human")))) (if (= (what at:(ahead (site) SE)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) SE) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) E) (where (id "Human")))) (if (= (what at:(ahead (site) E)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) E) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) W) (where (id "Human")))) (if (= (what at:(ahead (site) W)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) W) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) N) (where (id "Human")))) (if (= (what at:(ahead (site) N)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) N) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) S) (where (id "Human")))) (if (= (what at:(ahead (site) S)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) S) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))))))))))))))) (piece "Robot" Shared) (piece "Rubble" Neutral)}) (rules (start {(place Random {"Human"}) (place Random {"Robot"} count:20) (set Score P1 5)}) (play (or {(forEach Piece) (move Pass (then (fromTo (from (where (id "Human"))) (to (sites Random)) (then (forEach Site (sites Occupied by:Shared) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) NE) (where (id "Human")))) (if (= (what at:(ahead (site) NE)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) NE) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) NW) (where (id "Human")))) (if (= (what at:(ahead (site) NW)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) NW) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) SW) (where (id "Human")))) (if (= (what at:(ahead (site) SW)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) SW) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) SE) (where (id "Human")))) (if (= (what at:(ahead (site) SE)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) SE) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) E) (where (id "Human")))) (if (= (what at:(ahead (site) E)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) E) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) W) (where (id "Human")))) (if (= (what at:(ahead (site) W)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) W) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) N) (where (id "Human")))) (if (= (what at:(ahead (site) N)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) N) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) S) (where (id "Human")))) (if (= (what at:(ahead (site) S)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) S) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to)))))))))))))))))))) (if (< 0 (score P1)) (move Select (from (where (id "Human"))) (then (and (set Score Mover (- (score P1) 1)) (fromTo (from (where (id "Human"))) (to (sites Random (difference (sites Empty) (sites Around (sites Occupied by:Shared))))) (then (forEach Site (sites Occupied by:Shared) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) NE) (where (id "Human")))) (if (= (what at:(ahead (site) NE)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) NE) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) NW) (where (id "Human")))) (if (= (what at:(ahead (site) NW)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) NW) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) SW) (where (id "Human")))) (if (= (what at:(ahead (site) SW)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) SW) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) SE) (where (id "Human")))) (if (= (what at:(ahead (site) SE)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) SE) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) E) (where (id "Human")))) (if (= (what at:(ahead (site) E)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) E) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) W) (where (id "Human")))) (if (= (what at:(ahead (site) W)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) W) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) N) (where (id "Human")))) (if (= (what at:(ahead (site) N)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) N) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))) (if (> (count Steps Orthogonal (site) (where (id "Human"))) (count Steps Orthogonal (ahead (site) S) (where (id "Human")))) (if (= (what at:(ahead (site) S)) (id "Rubble" Neutral)) (remove (site)) (fromTo (from (site)) (to (ahead (site) S) (apply (if (= (what at:(to)) (id "Human" P1)) (remove (to))))))))))))))))))))))} (then (forEach Site (sites Occupied by:Shared) (if (>= (count at:(site)) 2) (and (remove (site)) (add (piece "Rubble0") (to (site))))))))) (end {(if (no Pieces Mover) (result Mover Loss)) (if (no Pieces "Robot") (result Mover Win))}))) 