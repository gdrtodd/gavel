(game "Shogi Puzzle" (players {(player N) (player S)}) (equipment {(board (square 9)) (piece "Osho" Each (move Step (to if:(not (is Friend (who at:(to)))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to))))))))) (piece "Fuhyo" Each (move Step Forward (to if:(not (is Friend (who at:(to)))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to))))))) (then (if (is In (last To) (sites Mover "Promotion")) (if (is In (last To) (sites Mover "LastRank")) (move Promote (last To) (piece (mapEntry "promoted" (what at:(last To))))) (moveAgain)))))) (piece "Ginsho" Each (move Step (directions {Forward BL BR FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to))))))) (then (if (or (is In (last To) (sites Mover "Promotion")) (is In (last From) (sites Mover "Promotion"))) (moveAgain))))) (piece "Hisha" Each (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to))))))) (then (if (or (is In (last To) (sites Mover "Promotion")) (is In (last From) (sites Mover "Promotion"))) (moveAgain))))) (piece "Kakugyo" Each (move Slide Diagonal (to if:(is Enemy (who at:(to))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to))))))) (then (if (or (is In (last To) (sites Mover "Promotion")) (is In (last From) (sites Mover "Promotion"))) (moveAgain))))) (piece "Keima" Each (forEach Direction Forward (to if:True (apply (forEach Direction (from (to)) (directions {FR FL}) (if (not (is Friend (who at:(to)))) (move (from) (to (apply if:(is Enemy (who at:(to))) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to)))))))))))) (then (if (is In (last To) (sites Mover "Promotion")) (if (is In (last To) (sites Mover "TwoFurthestRank")) (move Promote (last To) (piece (mapEntry "promoted" (what at:(last To))))) (moveAgain)))))) (piece "Kyosha" Each (move Slide Forward (to if:(is Enemy (who at:(to))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to))))))) (then (if (is In (last To) (sites Mover "Promotion")) (if (is In (last To) (sites Mover "LastRank")) (move Promote (last To) (piece (mapEntry "promoted" (what at:(last To))))) (moveAgain)))))) (piece "Kinsho" Each (move Step (directions {Forward Backward Rightward Leftward FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to))))))))) (piece "Tokin" Each (move Step (directions {Forward Backward Rightward Leftward FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to))))))))) (piece "Narigin" Each (move Step (directions {Forward Backward Rightward Leftward FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to))))))))) (piece "Ryuo" Each (or (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to)))))))) (move Step Diagonal (to if:(not (is Friend (who at:(to)))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to)))))))))) (piece "Ryuma" Each (or (move Slide Diagonal (to if:(is Enemy (who at:(to))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to)))))))) (move Step Orthogonal (to if:(not (is Friend (who at:(to)))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to)))))))))) (piece "Narikei" Each (move Step (directions {Forward Backward Rightward Leftward FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to))))))))) (piece "Narikyo" Each (move Step (directions {Forward Backward Rightward Leftward FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (add (piece (mapEntry "captured" (what at:(to)))) (to (mapEntry "where" (what at:(to))))))))) (regions "LastRankP1" P1 (sites Top)) (regions "LastRankP2" P2 (sites Bottom)) (regions "TwoFurthestRankP1" P1 (expand (sites Top))) (regions "TwoFurthestRankP2" P2 (expand (sites Bottom))) (regions "Promotion" P1 (expand (sites Top) steps:2)) (regions "Promotion" P2 (expand (sites Bottom) steps:2)) (map "where" {(pair 3 88) (pair 4 81) (pair 5 89) (pair 6 82) (pair 7 90) (pair 8 83) (pair 9 91) (pair 10 84) (pair 11 92) (pair 12 85) (pair 13 93) (pair 14 86) (pair 15 94) (pair 16 87) (pair 17 88) (pair 18 81) (pair 19 89) (pair 20 82) (pair 21 90) (pair 22 83) (pair 23 91) (pair 24 84) (pair 25 92) (pair 26 85) (pair 27 93) (pair 28 86)}) (map "captured" {(pair 3 4) (pair 4 3) (pair 5 6) (pair 6 5) (pair 7 8) (pair 8 7) (pair 9 10) (pair 10 9) (pair 11 12) (pair 12 11) (pair 13 14) (pair 14 13) (pair 15 16) (pair 16 15) (pair 17 4) (pair 18 3) (pair 19 6) (pair 20 5) (pair 21 8) (pair 22 7) (pair 23 10) (pair 24 9) (pair 25 12) (pair 26 11) (pair 27 14) (pair 28 13)}) (map "promoted" {(pair 3 17) (pair 4 18) (pair 5 19) (pair 6 20) (pair 7 21) (pair 8 22) (pair 9 23) (pair 10 24) (pair 11 25) (pair 12 26) (pair 13 27) (pair 14 28)}) (hand Each size:7)}) (rules (start {(place "Kinsho1" {"G7"}) (place "Kinsho1" 86) (place "Osho2" coord:"G9")}) (play (if (is Prev Mover) (or (move Promote (last To) (piece (mapEntry "promoted" (what at:(last To))))) (move Pass)) (do (or {(move (from (sites Occupied by:Mover container:"Hand" components:{"Kakugyo" "Ginsho" "Hisha" "Kinsho"})) (to (sites Empty))) (do (move (from (sites Occupied by:Mover container:"Hand" component:"Fuhyo")) (to (difference (sites Empty) (sites Mover "LastRank")) if:(= (count Sites in:(sites Occupied by:Mover container:"Board" component:"Fuhyo")) (count Sites in:(difference (sites Occupied by:Mover container:"Board" component:"Fuhyo") (sites Column (column of:(to)))))))) ifAfterwards:(not (is Threatened (id "Osho" Next) at:(where "Osho" Next)))) (move (from (sites Occupied by:Mover container:"Hand" component:"Kyosha")) (to (difference (sites Empty) (sites Mover "LastRank")))) (move (from (sites Occupied by:Mover container:"Hand" component:"Keima")) (to (difference (sites Empty) (sites Mover "TwoFurthestRank")))) (forEach Piece)}) ifAfterwards:(not (is Threatened (id "Osho" Mover) at:(where "Osho" Mover)))))) (end {(if (and {(is Threatened (id "Osho" Next) at:(where "Osho" Next)) (not (can Move (do (forEach Piece Next) ifAfterwards:(not (is Threatened (id "Osho" Next) at:(where "Osho" Next)))))) (<= (count Turns) 1)}) (result P1 Win)) (if (or (no Moves Next) (and (= 1 (count Turns)) (not (is Mover Next)))) (result P1 Loss))}))) 