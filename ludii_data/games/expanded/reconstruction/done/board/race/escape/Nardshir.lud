(game "Nardshir" (players 2) (equipment {(board (merge {(rectangle 1 6) (shift 7 0 (rectangle 1 6)) (shift 0 6 (rectangle 1 6)) (shift 7 6 (rectangle 1 6))}) {(track "Track1" {24 11 10 9 8 7 6 5 4 3 2 1 0 12 13 14 15 16 17 18 19 20 21 22 23} P1 directed:True) (track "Track2" {25 23 22 21 20 19 18 17 16 15 14 13 12 0 1 2 3 4 5 6 7 8 9 10 11} P2 directed:True)} use:Vertex) (dice d:6 num:2) (piece "Disc" Each (or (forEach Die if:(!= (pips) 0) (if (= (trackSite Move steps:(pips)) -1) (move Remove (from)) (if (or (not (is Enemy (who at:(trackSite Move steps:(pips))))) (= 1 (size Stack at:(trackSite Move steps:(pips))))) (move (from) (to (trackSite Move steps:(pips)) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite (who at:(to))))))))))) (if (= (value Player Mover) -1) (or {(if (= (trackSite Move steps:1) -1) (move Remove (from)) (if (or (not (is Enemy (who at:(trackSite Move steps:1)))) (= 1 (size Stack at:(trackSite Move steps:1)))) (move (from) (to (trackSite Move steps:1) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite (who at:(to)))))))))) (if (= (trackSite Move steps:2) -1) (move Remove (from)) (if (or (not (is Enemy (who at:(trackSite Move steps:2)))) (= 1 (size Stack at:(trackSite Move steps:2)))) (move (from) (to (trackSite Move steps:2) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite (who at:(to)))))))))) (if (= (trackSite Move steps:3) -1) (move Remove (from)) (if (or (not (is Enemy (who at:(trackSite Move steps:3)))) (= 1 (size Stack at:(trackSite Move steps:3)))) (move (from) (to (trackSite Move steps:3) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite (who at:(to)))))))))) (if (= (trackSite Move steps:4) -1) (move Remove (from)) (if (or (not (is Enemy (who at:(trackSite Move steps:4)))) (= 1 (size Stack at:(trackSite Move steps:4)))) (move (from) (to (trackSite Move steps:4) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite (who at:(to)))))))))) (if (= (trackSite Move steps:5) -1) (move Remove (from)) (if (or (not (is Enemy (who at:(trackSite Move steps:5)))) (= 1 (size Stack at:(trackSite Move steps:5)))) (move (from) (to (trackSite Move steps:5) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite (who at:(to)))))))))) (if (= (trackSite Move steps:6) -1) (move Remove (from)) (if (or (not (is Enemy (who at:(trackSite Move steps:6)))) (= 1 (size Stack at:(trackSite Move steps:6)))) (move (from) (to (trackSite Move steps:6) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite (who at:(to))))))))))} (then (if (not (all DiceUsed)) (and (moveAgain) (set Value Mover 1)))))))) (hand Each) (map {(pair 1 24) (pair 2 25)}) (regions P1 {2}) (regions P2 {23 22 21 20 19 18})}) (rules (start {(place Stack "Disc1" (handSite P1) count:15) (place Stack "Disc2" (handSite P2) count:15)}) (play (do (if (not (is Prev Mover)) (roll)) next:(or (forEach Piece top:True) (forEach Piece container:(mover) top:True) (then (if (or (= (value Player Mover) -1) (not (all DiceUsed))) (moveAgain) (if (and (all DiceUsed) (= (value Player Mover) 1)) (set Value Mover -1))))))) (end (if (no Pieces Mover) (result Mover Win))))) 