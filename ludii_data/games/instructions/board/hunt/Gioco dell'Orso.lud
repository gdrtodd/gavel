Two concentric circles, with four radii from the outer circle to in the center, dividing the circles into four equal parts. There are four arcs, each of which bisects a radius between where each radius intersects the circumference of each circle, the arc also intersecting with the outer circle's circumference. One player plays as a bear, which begins on the central point, the other as three hunters, which begin on any three points on the inner circle. The bear plays first. Players alternate turns moving a piece to an empty adjacent spot along the lines. When the bear is unable to move, the game ends and the players play again, switching sides. The player who lasts longest while playing as the bear wins. The game has two rounds.
(game "Gioco dell'Orso" (players 2) (equipment {(board (add (concentric {1 4 12}) edges:{{6 8} {9 11} {12 14} {5 15}}) use:Vertex) (piece "Human" Each (move Step (to if:(is Empty (to))))) (piece "Bear" Each (move Step (to if:(is Empty (to))))) (hand Each)}) (rules (start {(place "Human1" (handSite P1) count:3) (place "Bear2" (sites Centre))}) phases:{(phase "PlacementP1" (play (move (from (handSite P1)) (to (intersection (sites Empty) (sites {1 2 3 4}))) (then (if (not (all Sites (sites Hand P1) if:(equals 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase (all Sites (sites Hand P1) if:(equals 0 (count Cell at:(site)))) "HuntingP2")) (phase "HuntingP2" (play (forEach Piece (then (if (not (can Move (move Step (from (where "Bear" P2)) (to if:(is Empty (to)))))) (and {(addScore P2 (sub (count Moves) 3)) (remove (sites Occupied by:All container:"Board")) (add (piece "Bear1") (to (sites Centre))) (add (piece "Human2") (to (handSite P2)) count:3)}))))) (nextPhase (equals 1 (count Sites in:(sites Occupied by:All container:"Board"))) "PlacementP2")) (phase "PlacementP2" (play (move (from (handSite P2)) (to (intersection (sites Empty) (sites {1 2 3 4}))) (then (if (not (all Sites (sites Hand P2) if:(equals 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase (all Sites (sites Hand P2) if:(equals 0 (count Cell at:(site)))) "HuntingP1")) (phase "HuntingP1" (play (forEach Piece (then (if (not (can Move (move Step (from (where "Bear" P1)) (to if:(is Empty (to)))))) (addScore P1 (sub (count Moves) (add (score P2) 6))))))) (end (if (notEqual 0 (score P1)) (byScore))))})) 
