Four 3x4 rectangles, arranged in a cross shape, with a large central square which has diagonals, and spaces in the four corners between each arm of the cross. Four players, played on two teams, with team members sitting on opposite sides of the board. Four pieces per player, with the colors red, black, yellow, and green. Six cowrie shells used as dice: five are white and one is yellow. The number of the mouths which are face-up determine the value of the throw, except for a throw of 3 when one of the cowries with the mouth down is the yellow one, in which case the throw is known as So-hatara, and counts as 4, but allows special moves because it is actually considered four individual throws of 1. When the player throws 1, 5, or So-hatara, the player receives an extra throw. A 1, 5, or So-hatara must be thrown to enter a piece on the board. The entirety of a throw must be used to move one piece, but separate throws in a turn can each be used individually to move a different piece. This does not apply when So-hatara is one of the throws; in this case, the total of the throw can be subdivided however the player sees fit. Pieces enter the board from the center, moving down the central track of their arm, then in an anti-clockwise direction around the board, and then back up the central row of their arm of the board to the central square. If a player lands on a space occupied by a piece of the opposing team, the opponent's piece is sent back to start. Pieces resting on the corner spaces between the arms of the cross cannot be sent to start in any circumstance. The first team who places all of their pieces in the central square wins.
(game "Asi Keliya" (players 4) (equipment {(board (merge {(add (add (merge {(rectangle 3 4) (shift 7 0 (rectangle 3 4)) (shift 3.5 3.5 (rotate 90 (rectangle 3 4))) (shift 3.5 -3.5 (rotate 90 (rectangle 3 4)))}) vertices:{{5.5 1.5}}) edges:{{4 76} {35 76} {19 76} {20 76}}) (shift 3 3 (square 1)) (shift 7 3 (square 1)) (shift 3 -1 (square 1)) (shift 7 -1 (square 1))}) {(track "Track1" "6,52,S,E,N3,E,N1,E,N,W3,N1,W1,N,W,S3,W1,S1,W,S,E3,S1,E1,S,E1,N3,End" P1 directed:True) (track "Track2" "7,11,W,S1,E3,S1,E1,S,E,N3,E1,N1,E,N,W3,N,W1,N,W2,S3,W1,S1,W,S1,E3,End" P2 directed:True) (track "Track3" "17,39,N,W1,S3,W1,S1,W,S,E3,S1,E1,S,E,N3,E,N1,E,N,W3,N,W1,N,W1,S3,End" P3 directed:True) (track "Track4" "21,26,E,N1,W3,N1,W1,N,W,S3,W1,S1,W,S,E3,S1,E1,S,E,N3,E1,N1,E,N1,W3,End" P4 directed:True)}) (piece "Marker" Each (if (equals (trackSite Move steps:(count Pips)) -2) (move Remove (from)) (if (notEqual (trackSite Move steps:(count Pips)) -1) (if (or (is Empty (trackSite Move steps:(count Pips))) (and (is Enemy (who at:(trackSite Move steps:(count Pips)))) (not (is In (trackSite Move steps:(count Pips)) (sites "SafeSites"))))) (move (from) (to (trackSite Move steps:(count Pips)) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite (who at:(to)))))))))))) (hand Each) (dice d:2 from:0 num:6) (map {(pair P1 6) (pair P2 7) (pair P3 17) (pair P4 21)}) (regions "SafeSites" (sites {3 19 16 34}))}) (rules (start {(set Team 1 {P1 P3}) (set Team 2 {P2 P4}) (place "Marker" "Hand" count:4)}) (play (do (if (not (is Pending)) (roll)) next:(or (if (or (and (equals (count Pips) 3) (equals 0 (face 65))) (is In (count Pips) (sites {1 5}))) (move (from (handSite Mover)) (to (mapEntry (mover)) if:(is Empty (mapEntry (mover)))))) (if (or (is Pending) (and (equals (count Pips) 3) (equals 0 (face 65)))) (forEach Die if:(notEqual (pips) 0) (forEach Piece (if (equals (trackSite Move steps:(pips)) -2) (move Remove (from)) (if (notEqual (trackSite Move steps:(pips)) -1) (if (or (is Empty (trackSite Move steps:(pips))) (and (is Enemy (who at:(trackSite Move steps:(pips)))) (not (is In (trackSite Move steps:(pips)) (sites "SafeSites"))))) (move (from) (to (trackSite Move steps:(pips)) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (handSite (who at:(to)))))))))))) (then (if (not (all DiceUsed)) (and (set Pending) (moveAgain))))) (forEach Piece))) (then (if (or (and (equals (count Pips) 3) (equals 0 (face 65))) (is In (count Pips) (sites {1 5}))) (moveAgain))))) (end (if (no Pieces TeamMover) (result TeamMover Win))))) 
