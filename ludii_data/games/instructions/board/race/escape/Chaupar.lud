Four 3x8 rectangles arranged in a cross with a large empty square in the center. Two teams of two players, or by two players playing with two sets of pieces. The pieces move along the outer track of the board according to the throw of three four-sided dice with values of 1, 2, 5 and 6. The values of each die must be played individually, except in certain cases. Each player has four pieces, which begin on the sixth and seventh space of the central row and the seventh and eight space in the right hand row of the arm of the board belonging to the player. If a piece lands on a space occupied by an opponent, the opponent's piece is sent back to the starting position. If two of a player's pieces are on the same space, they cannot be sent to the beginning. In addition, when three pieces are on the same spaces, if triple sixes are thrown the pieces may move twelve spaces together. The same rule applies for threes and twos, moving six and four, respectively. After completing a circuit of the board, the pieces then move into the central row of squares in the arm where the player began. The player must then move off all of their pieces by an exact roll. If a player has removed all of their pieces from the board and their partner is still playing, the player rolls on what would be their turn and the partner moves according to these rolls in addition to their own turn. The player or team to remove all of their pieces from the board first wins.
(game "Chaupar" (players 4) (equipment {(board (add (hole (merge (shift 0 (div (sub 19 3) 2) (rectangle 3 19)) (shift (div (sub 19 3) 2) 0 (rectangle 19 3))) (poly {{8 8} {8 11} {11 11} {11 8}})) cells:{{8 28 48 68 69 70 71 51 31 11 10 9}}) {(track "Track1" "61,S,E,N,11,E,N,W,53,N,W,S,42,W,S,E,8,54,E1,N7,End" P1 directed:True) (track "Track2" "21,W,S,E,8,S,E,N,11,E,N,W,53,N,W,S,42,W,S1,E7,End" P2 directed:True) (track "Track3" "88,N,W,S,42,W,S,E,8,S,E,N,11,E,N,W,53,N,W1,S7,End" P3 directed:True) (track "Track4" "32,E,N,W,53,N,W,S,42,W,S,E,8,S,E,N,11,E,N1,W7,End" P4 directed:True)}) (dice d:4 faces:{1 2 5 6} num:3) (map "Start" {(pair P1 61) (pair P2 21) (pair P3 88) (pair P4 32)}) (piece "Pawn" Each (or (if (and {(equals 0 (count MovesThisTurn)) (all DiceEqual) (or {(is AnyDie 6) (is AnyDie 3) (is AnyDie 2)}) (equals 3 (count Pieces of:(mover) in:(sites {(from)})))}) (move (from (from) level:(level)) (to (trackSite Move from:(from) "Track" steps:(mul 2 (face 97)))) (then (forEach Level (last From) FromTop (if (is Mover (who at:(last From) level:(level))) (fromTo (from (last From) level:(level)) (to (last To)))))))) (forEach Die if:(notEqual (pips) 0) (if (equals (trackSite Move from:(from) "Track" steps:(pips)) -2) (move Remove (from) level:(level)) (move (from (from) level:(level)) (to (trackSite Move from:(from) "Track" steps:(pips))))) (then (if (not (all DiceUsed)) (moveAgain)))) (then (forEach Level (last To) FromTop (if (and (is Enemy (who at:(last To) level:(level))) (equals 1 (count Pieces of:(who at:(last To) level:(level)) in:(sites {(last To)})))) (fromTo (from (last To) level:(level)) (to (mapEntry "Start" (who at:(last To) level:(level))))))))))}) (rules (start {(set Team 1 {P1 P3}) (set Team 2 {P2 P4}) (place Stack "Pawn1" (sites {61 58 59 56})) (place Stack "Pawn2" (sites {21 20 0 1})) (place Stack "Pawn3" (sites {91 88 93 90})) (place Stack "Pawn4" (sites {33 32 49 50}))}) (play (do (if (not (is Prev Mover)) (roll)) next:(if (no Pieces Mover) (if (is Mover P1) (forEach Piece (or (if (and {(equals 0 (count MovesThisTurn)) (all DiceEqual) (or {(is AnyDie 6) (is AnyDie 3) (is AnyDie 2)}) (equals 3 (count Pieces of:(mover) in:(sites {(from)})))}) (move (from (from) level:(level)) (to (trackSite Move from:(from) "Track3" steps:(mul 2 (face 97)))) (then (forEach Level (last From) FromTop (if (is Mover (who at:(last From) level:(level))) (fromTo (from (last From) level:(level)) (to (last To)))))))) (forEach Die if:(notEqual (pips) 0) (if (equals (trackSite Move from:(from) "Track3" steps:(pips)) -2) (move Remove (from) level:(level)) (move (from (from) level:(level)) (to (trackSite Move from:(from) "Track3" steps:(pips))))) (then (if (not (all DiceUsed)) (moveAgain)))) (then (forEach Level (last To) FromTop (if (and (is Enemy (who at:(last To) level:(level))) (equals 1 (count Pieces of:(who at:(last To) level:(level)) in:(sites {(last To)})))) (fromTo (from (last To) level:(level)) (to (mapEntry "Start" (who at:(last To) level:(level))))))))) P3) (if (is Mover P3) (forEach Piece (or (if (and {(equals 0 (count MovesThisTurn)) (all DiceEqual) (or {(is AnyDie 6) (is AnyDie 3) (is AnyDie 2)}) (equals 3 (count Pieces of:(mover) in:(sites {(from)})))}) (move (from (from) level:(level)) (to (trackSite Move from:(from) "Track1" steps:(mul 2 (face 97)))) (then (forEach Level (last From) FromTop (if (is Mover (who at:(last From) level:(level))) (fromTo (from (last From) level:(level)) (to (last To)))))))) (forEach Die if:(notEqual (pips) 0) (if (equals (trackSite Move from:(from) "Track1" steps:(pips)) -2) (move Remove (from) level:(level)) (move (from (from) level:(level)) (to (trackSite Move from:(from) "Track1" steps:(pips))))) (then (if (not (all DiceUsed)) (moveAgain)))) (then (forEach Level (last To) FromTop (if (and (is Enemy (who at:(last To) level:(level))) (equals 1 (count Pieces of:(who at:(last To) level:(level)) in:(sites {(last To)})))) (fromTo (from (last To) level:(level)) (to (mapEntry "Start" (who at:(last To) level:(level))))))))) P1) (if (is Mover P4) (forEach Piece (or (if (and {(equals 0 (count MovesThisTurn)) (all DiceEqual) (or {(is AnyDie 6) (is AnyDie 3) (is AnyDie 2)}) (equals 3 (count Pieces of:(mover) in:(sites {(from)})))}) (move (from (from) level:(level)) (to (trackSite Move from:(from) "Track2" steps:(mul 2 (face 97)))) (then (forEach Level (last From) FromTop (if (is Mover (who at:(last From) level:(level))) (fromTo (from (last From) level:(level)) (to (last To)))))))) (forEach Die if:(notEqual (pips) 0) (if (equals (trackSite Move from:(from) "Track2" steps:(pips)) -2) (move Remove (from) level:(level)) (move (from (from) level:(level)) (to (trackSite Move from:(from) "Track2" steps:(pips))))) (then (if (not (all DiceUsed)) (moveAgain)))) (then (forEach Level (last To) FromTop (if (and (is Enemy (who at:(last To) level:(level))) (equals 1 (count Pieces of:(who at:(last To) level:(level)) in:(sites {(last To)})))) (fromTo (from (last To) level:(level)) (to (mapEntry "Start" (who at:(last To) level:(level))))))))) P2) (forEach Piece (or (if (and {(equals 0 (count MovesThisTurn)) (all DiceEqual) (or {(is AnyDie 6) (is AnyDie 3) (is AnyDie 2)}) (equals 3 (count Pieces of:(mover) in:(sites {(from)})))}) (move (from (from) level:(level)) (to (trackSite Move from:(from) "Track4" steps:(mul 2 (face 97)))) (then (forEach Level (last From) FromTop (if (is Mover (who at:(last From) level:(level))) (fromTo (from (last From) level:(level)) (to (last To)))))))) (forEach Die if:(notEqual (pips) 0) (if (equals (trackSite Move from:(from) "Track4" steps:(pips)) -2) (move Remove (from) level:(level)) (move (from (from) level:(level)) (to (trackSite Move from:(from) "Track4" steps:(pips))))) (then (if (not (all DiceUsed)) (moveAgain)))) (then (forEach Level (last To) FromTop (if (and (is Enemy (who at:(last To) level:(level))) (equals 1 (count Pieces of:(who at:(last To) level:(level)) in:(sites {(last To)})))) (fromTo (from (last To) level:(level)) (to (mapEntry "Start" (who at:(last To) level:(level))))))))) P4)))) (forEach Piece)))) (end (if (no Pieces TeamMover) (result TeamMover Win))))) 
