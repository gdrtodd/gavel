2x12 board, divided in half. Spaces on each side take the form of semi-circular sockets, into which the pieces fit. Fifteen pieces per player. One player places fourteen of their pieces on the first point of the table to their right closest to them, with the other piece on the point opposite it on the other side of the board. The other player places three pieces on each of the four spots following the spot with the other player's fourteen, two on the spot following this, and one on the opposite end of the row of spots where the opponent's single piece is located. Two six-sided dice. Players move according to the number on each die by moving one piece the value on one die then another piece the value on the other die, or by moving one piece the value of one die and then the value of the other. Players move along the spaces of the board toward the spot where the first player's single piece is located, and from there they bear off. Pieces cannot be hit as in similar games. If a player cannot play the value on a die (or on both dice), the opponent may play it. The first player to bear off all of their pieces wins.
(game "Laquet" (players 2) (equipment {(board (merge {(rectangle 1 6) (shift 7 0 (rectangle 1 6)) (shift 0 6 (rectangle 1 6)) (shift 7 6 (rectangle 1 6))}) (track "Track1" {11 10 9 8 7 6 5 4 3 2 1 0 12 13 14 15 16 17 18 19 20 21 22 23} directed:True) use:Vertex) (dice d:6 num:2) (piece "Disc" Each (forEach Die if:(notEqual (pips) 0) (if (equals (trackSite Move steps:(pips)) -1) (move Remove (from)) (if (not (is Enemy (who at:(trackSite Move steps:(pips))))) (move (from) (to (trackSite Move steps:(pips))))))))}) (rules (start {(place Stack "Disc1" 11 count:14) (place Stack "Disc1" 23) (place Stack "Disc2" (sites {7 8 9 10}) count:3) (place Stack "Disc2" 6 count:2) (place Stack "Disc2" 12)}) (play (do (if (and (not (is Pending)) (not (is Prev Mover))) (roll)) next:(if (can Move (forEach Piece)) (forEach Piece top:True (then (if (not (all DiceUsed)) (moveAgain)))) (move Pass (then (set Pending)))))) (end (if (no Pieces Mover) (result Mover Win))))) 
