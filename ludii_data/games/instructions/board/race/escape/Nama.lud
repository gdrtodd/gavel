The board is a track of any number of spaces, made in the sand. Any number of players, playing with one piece. One piece is the hyena. Four nut shells are used as dice, with the following throws: four of all the same side = 20; two of the same side = 2; any other throw = 0. The first player to reach the end of the track then plays as the hyena. The hyena moves twice the value of the throw. When the hyena overtakes a player's piece, it is removed from the board and the player loses. The game involves 8 players. The track is composed of 100 spaces
(game "Nama" (players 8) (equipment {(board (rectangle 100 1) (track "Track" {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99} directed:True)) (hand Each) (hand Shared) (piece "Marker" Each (if (equals (if (equals (from) (handSite Mover)) (trackSite Move from:0 steps:(sub (mapEntry "Throw" (count Pips)) 1)) (trackSite Move from:(from) steps:(mapEntry "Throw" (count Pips)))) -1) (move Remove (from) level:(level) (then (if (equals (where "Hyena" Shared) -1) (and (add (piece "Hyena") (to 0) stack:True) (set Var (id Mover)))))) (move (from (from) level:(level)) (to (if (equals (from) (handSite Mover)) (trackSite Move from:0 steps:(sub (mapEntry "Throw" (count Pips)) 1)) (trackSite Move from:(from) steps:(mapEntry "Throw" (count Pips))))) stack:True))) (piece "Hyena" Shared) (dice d:2 from:0 num:4) (map "Throw" {(pair 0 0) (pair 1 0) (pair 2 2) (pair 3 0) (pair 4 20)})}) (rules (start (place "Marker" "Hand")) (play (do (roll) next:(if (lt 0 (mapEntry "Throw" (count Pips))) (if (equals (var) (id Mover)) (if (equals (trackSite Move from:(where "Hyena" Shared) steps:(mul 2 (mapEntry "Throw" (count Pips)))) -1) (move Remove (where "Hyena" Shared) (then (forEach Site (sites Board) (if (is Occupied (site)) (remove (site) count:(size Stack at:(site))))))) (move (from (where "Hyena" Shared)) (to (trackSite Move from:(where "Hyena" Shared) steps:(mul 2 (mapEntry "Throw" (count Pips))))) (then (forEach Value min:1 max:(sub (mul 2 (mapEntry "Throw" (count Pips))) 1) (if (is Occupied (trackSite Move from:(last From) steps:(value))) (remove (trackSite Move from:(last From) steps:(value)) count:(size Stack at:(trackSite Move from:(last From) steps:(value))))))))) (or (forEach Piece) (forEach Piece container:(mover))))))) (end {(forEach Player if:(and {(gt (var) 0) (notEqual (player) (var)) (equals (where "Hyena" Shared) -1)}) (result Player Loss)) (if (and (equals (id Mover) (var)) (equals (where "Hyena" Shared) -1)) (result Mover Win)) (forEach Player if:(and (notEqual (player) (var)) (no Pieces of:(player))) (result Player Loss))}))) 
