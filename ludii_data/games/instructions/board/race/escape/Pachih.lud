Four 3x8 rectangles, arranged in a cross shape around a large central square. The third space, counting from the outer corner, in the two outer rows of each arm of the board are marked with an "X." Four pieces per player. Seven cowrie shells used as dice, the throws as follows: Zero mouths up = 7; one = 10; two = 2; three = 3; four = 4; five = 25; six =30; seven = 14. Throws of 7, 25, 30, and 14 receive an extra throw. Three total throws is the maximum allowed. Pieces begin the game on the top square of the central row of the player's arm of the board. Pieces progress down the central row, then anti-clockwise around the circumference of the board, then up the central row again, to the central space. When a player's piece lands on a spot occupied by an opponent's piece, the opponent's piece is sent back to the starting space. Pieces resting on a marked space cannot be sent back to start; in this case the player's piece as well as the opponent's piece may occupy this space. The first player to bring all four of their pieces to the central space wins.
(game "Pachih" (players 4) (equipment {(board (add (hole (merge (shift 0 (div (sub 19 3) 2) (rectangle 3 19)) (shift (div (sub 19 3) 2) 0 (rectangle 19 3))) (poly {{8 8} {8 11} {11 11} {11 8}})) cells:{{8 28 48 68 69 70 71 51 31 11 10 9}}) {(track "Track1" "96,9,S,E,N,11,E,N,W,53,N,W,S,42,W,S,E,8,S,E1,N7,End" P1 directed:True) (track "Track2" "96,26,W,S,E,8,S,E,N,11,E,N,W,53,N,W,S,42,W,S1,E7,End" P2 directed:True) (track "Track3" "96,52,N,W,S,42,W,S,E,8,S,E,N,11,E,N,W,53,N,W1,S7,End" P3 directed:True) (track "Track4" "96,27,E,N,W,53,N,W,S,42,W,S,E,8,S,E,N,11,E,N1,W7,End" P4 directed:True)}) (dice d:2 from:0 num:7) (piece "Pawn" Each (if (equals (trackSite Move from:(from) steps:(mapEntry "Throw" (count Pips))) -2) (move Remove (from) level:(level)) (move (from (from) level:(level)) (to (trackSite Move from:(from) steps:(mapEntry "Throw" (count Pips))) if:True (apply (if (and (not (is In (to) (sites "SafeSites"))) (is Enemy (who at:(to)))) (forEach Level (to) FromTop (fromTo (from (to) level:(level)) (to (centrePoint)))))))))) (regions "SafeSites" (sites {60 62 2 37 87 89 16 48})) (map "Throw" {(pair 0 7) (pair 1 10) (pair 2 2) (pair 3 3) (pair 4 4) (pair 5 25) (pair 6 30) (pair 7 14)})}) (rules (start {(place Stack "Pawn1" 9 count:4) (place Stack "Pawn2" 26 count:4) (place Stack "Pawn3" 52 count:4) (place Stack "Pawn4" 27 count:4)}) (play (do (roll) next:(forEach Piece) (then (if (and (lt (value Player Mover) 2) (is In (mapEntry "Throw" (count Pips)) (sites {7 25 30 14}))) (and (moveAgain) (set Value Mover (add 1 (value Player Mover)))) (set Value Mover -1))))) (end (if (no Pieces Mover) (result Mover Win))))) 
