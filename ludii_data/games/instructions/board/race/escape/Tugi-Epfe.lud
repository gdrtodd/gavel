Stones are placed on the ground to make a square with ten spaces per side, the spaces between the stones being the place where the pieces are played. One piece per player. Three sticks used as dice, one side flat, the other round. One of the sticks is notched on the round side. Throws are as follows: All flat sides up = 5; all round sides up = 10; one flat and two round, with no notches up = 1, two flat and one round, with no notches up = 3, two flat or two round, with notches up = 15. Pieces begin in one corner of the board. Players may move in opposite directions around the board, or in the same direction. When players move in the same direction, they may send the opponent's piece back to the beginning if they land on their spot. When the opponent is sent back to the beginning, they may then choose their direction of play. When players are moving in opposite directions, the opponent's piece may not be sent to start. The first player to travel around the board and land in the starting space wins. The game has 2 players.
(game "Tugi-Epfe" (players 2) (equipment {(board (merge {(rectangle 1 11) (rectangle 11 1) (shift 0 10 (rectangle 1 11)) (shift 10 0 (rectangle 11 1))}) {(track "TrackCW" {0 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 39 38 37 36 35 34 33 32 31 30 9 8 7 6 5 4 3 2 1 0} directed:True) (track "TrackCCW" {0 1 2 3 4 5 6 7 8 9 30 31 32 33 34 35 36 37 38 39 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 0} directed:True)} use:Edge) (dice d:2 facesByDie:{{0 10} {0 1} {0 1}} num:3) (map "ThrowDiceValue" {(pair 0 5) (pair 12 5) (pair 2 1) (pair 1 3) (pair 10 15) (pair 11 15)}) (piece "Horse" Each (if (equals (value Player Mover) -1) (or (if (notEqual (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) -1) (if (or (is Empty (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips)))) (and (is Enemy (who at:(trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips))))) (or (equals (value Player Mover) (value Player (who at:(trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips)))))) (equals (value Player Mover) -1)))) (move (from (from) level:(level)) (to (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) (apply if:(is Enemy (who at:(to))) (and (fromTo (from (to)) (to 0)) (set Value (player (who at:(to))) -1)))))) (then (if (equals (value Player Mover) -1) (set Value Mover 1)))) (if (notEqual (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) -1) (if (or (is Empty (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips)))) (and (is Enemy (who at:(trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips))))) (or (equals (value Player Mover) (value Player (who at:(trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips)))))) (equals (value Player Mover) -1)))) (move (from (from) level:(level)) (to (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) (apply if:(is Enemy (who at:(to))) (and (fromTo (from (to)) (to 0)) (set Value (player (who at:(to))) -1)))))) (then (if (equals (value Player Mover) -1) (set Value Mover 2))))) (if (notEqual (if (equals (value Player Mover) 2) (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips)))) -1) (if (or (is Empty (if (equals (value Player Mover) 2) (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips))))) (and (is Enemy (who at:(if (equals (value Player Mover) 2) (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips)))))) (or (equals (value Player Mover) (value Player (who at:(if (equals (value Player Mover) 2) (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips))))))) (equals (value Player Mover) -1)))) (move (from (from) level:(level)) (to (if (equals (value Player Mover) 2) (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips)))) (apply if:(is Enemy (who at:(to))) (and (fromTo (from (to)) (to 0)) (set Value (player (who at:(to))) -1))))))))) (regions "AllSites" (sites Board))}) (rules (start (place Stack items:{"Horse2" "Horse1"} 0)) (play (do (roll) next:(forEach Piece) (then (if (equals (last To) 0) (remove (last To)))))) (end (if (no Pieces Mover) (result Mover Win))))) 
