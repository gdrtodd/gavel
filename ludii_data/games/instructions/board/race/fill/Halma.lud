Played on a 16x16 checkered board. Can be played with two or four players. It is played with nineteen pieces for a two-player game, thirteen for a four-player game. The pieces begin play in opposing corners of the board, called the "camp." Pieces can move in any direction to an adjacent square. Players can also jump any adjacent piece, including the player's own. Jumping does not capture. Multiple jumps in one turn by the same piece are allowed. The goal is to move all of one's pieces into the opposing player's camp. Once a piece has moved into the camp, it cannot leave. The version of the game played with 2 players. The game is played on a 16x16 board.
(game "Halma" (players 2) (equipment {(board (square 16)) (piece "Counter" Each) (regions "Home" P1 (difference (expand (intersection (sites Bottom) (sites Right)) steps:(add 1 (div 16 4)) Orthogonal) (sites {(ahead (coord row:0 column:(sub 16 1)) steps:(add 1 (div 16 4)) N) (ahead (coord row:0 column:(sub 16 1)) steps:(add 1 (div 16 4)) W)}))) (regions "Home" P2 (difference (expand (intersection (sites Top) (sites Left)) steps:(add 1 (div 16 4)) Orthogonal) (sites {(ahead (coord row:(sub 16 1) column:0) steps:(add 1 (div 16 4)) E) (ahead (coord row:(sub 16 1) column:0) steps:(add 1 (div 16 4)) S)}))) (map {(pair P1 P2) (pair P2 P1)})}) (rules (start {(place "Counter1" (sites P1)) (place "Counter2" (sites P2))}) phases:{(phase "Movement" (play (forEach Piece (or (move Hop (from (from)) (between if:(is Occupied (between))) (to if:(and (and (is Empty (to)) (not (is Visited (to)))) (or (not (is In (from) (sites (player (mapEntry (mover)))))) (is In (to) (sites (player (mapEntry (mover)))))))) (then (if (can Move (move Hop (from (last To)) (between if:(is Occupied (between))) (to if:(and (and (is Empty (to)) (not (is Visited (to)))) (or (not (is In (last To) (sites (player (mapEntry (mover)))))) (is In (to) (sites (player (mapEntry (mover)))))))))) (moveAgain)))) (move Step (to if:(and (is Empty (to)) (or (not (is In (from) (sites (player (mapEntry (mover)))))) (is In (to) (sites (player (mapEntry (mover)))))))))))) (nextPhase (is Mover (next)) "MultiJump")) (phase "MultiJump" (play (or (move Hop (from (last To)) (between if:(is Occupied (between))) (to if:(and (and (is Empty (to)) (not (is Visited (to)))) (or (not (is In (last To) (sites (player (mapEntry (mover)))))) (is In (to) (sites (player (mapEntry (mover)))))))) (then (if (can Move (move Hop (from (last To)) (between if:(is Occupied (between))) (to if:(and (and (is Empty (to)) (not (is Visited (to)))) (or (not (is In (last To) (sites (player (mapEntry (mover)))))) (is In (to) (sites (player (mapEntry (mover)))))))))) (moveAgain)))) (move Pass))) (nextPhase (not (is Mover (next))) "Movement"))} (end (if (equals (sites Occupied by:Mover) (sites (player (mapEntry (mover))))) (result Mover Win))))) 
