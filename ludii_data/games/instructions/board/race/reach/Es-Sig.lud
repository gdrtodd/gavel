7x7 board, with an extra square above the top left square of the grid. One piece per player. Four sticks, with one green side and one white side, used as dice. The throws are as follows: one white and three green = sîg, valued at 1; two white and two green = 0; three white and one green = 3; four white = 4; four green=6. Pieces begin off the board, moving onto the bottom right square, and proceed in a boustrophedon direction, moving upward in the rightmost column, then down the next to the left, until reaching the extra space in the top left of the board. A player must first throw sîg to begin moving. Players move according to the values of the throws. If a player lands on the top right square, they must throw sîg five times to escape it. If a player lands on the central square, they must throw sîg ten times to escape it. A player must also throw one sîg to escape each of the final three spaces. Once a player has escaped the final space, they control the Ghula. The Ghula has different values for the throws: one white = 2; two white = 5; three white = 0; four white = 4; four green =6. The ghula moves in the opposite direction of the pieces, and when it overcomes one of the opponent's pieces it drags them in the direction it moves, with the goal of dragging them to the start. The Ghula may move forward or backward on its turn along the track. The Ghula does not have to throw a sîg to escape any spaces. Play continues until all of the players escape the final space. The game has 4 players.
(game "Es-Sig" (players 4) (equipment {(board (merge {(rectangle 8 1) (square 7) (shift 8 0 (square 1))}) {(track "Track" "50,19,W,N1,E,N1,W,N1,E,N1,W,N1,E,N1,W4" directed:True) (track "ExtensionTrack" "45,W,N" directed:True) (track "GhoulaTrack" "19,W,N1,E,N1,W,N1,E,N1,W,N1,E,N1,W" directed:True) (track "ReverseGhoulaTrack" "50,12,E,S1,W,S1,E,S1,W,S1,E,S1,W,S1,E" directed:True)}) (piece "Ghoula" Neutral) (piece "Stick" Each (if (equals (from) 49) (if (equals (state at:(from) level:(level)) 6) (move (from (from) level:(level)) (to 48) (then (forEach Level (last To) (set State at:(last To) level:(level) 0)))) (if (equals (mapEntry "Throw" (count Pips)) 1) (move Select (from (from) level:(level)) (then (set State at:(last To) level:(last LevelTo) (add 1 (state at:(last To) level:(last LevelTo)))))))) (if (equals (from) 31) (if (equals (state at:(from) level:(level)) 11) (move (from (from) level:(level)) (to 32) (then (forEach Level (last To) (set State at:(last To) level:(level) 0)))) (if (equals (mapEntry "Throw" (count Pips)) 1) (move Select (from (from) level:(level)) (then (set State at:(last To) level:(last LevelTo) (add 1 (state at:(last To) level:(last LevelTo)))))))) (if (and (notEqual (from) 45) (is In (from) (sites Track "Track"))) (move (from (from) level:(level) if:(if (le 1 (state at:(from) level:(level))) True (equals (mapEntry "Throw" (count Pips)) 1))) (to (trackSite Move "Track" steps:(mapEntry "Throw" (count Pips))) if:True) (then (if (not (le 1 (state at:(last To) level:(topLevel at:(last To))))) (set State at:(last To) level:(topLevel at:(last To)) 1)))) (if (is In (from) (sites Track "ExtensionTrack")) (or {(if (and (notEqual (from) 14) (equals (mapEntry "Throw" (count Pips)) 1)) (move (from (from) level:(level)) (to (trackSite Move "ExtensionTrack" steps:1)))) (if (equals (from) 14) (move Pass (then (if (notEqual 1 (count Pips)) (and (moveAgain) (set Var 1))))))})))) (then (if (and (equals (last To) 14) (notEqual (last From) 14)) (if (notEqual -1 (var "ScoreToGet")) (and (set Score Mover (sub (var "ScoreToGet") 1)) (set Var "ScoreToGet" (sub (var "ScoreToGet") 1))) (and (set Score Mover (count Players)) (set Var "ScoreToGet" (count Players))))))) maxState:12) (dice d:2 from:0 num:4) (map "Throw" {(pair 0 4) (pair 1 3) (pair 2 0) (pair 3 1) (pair 4 6)}) (map "ThrowGhoula" {(pair 0 4) (pair 1 6) (pair 2 4) (pair 3 2) (pair 4 6)})}) (rules (start (place Stack items:{"Ghoula0" "Stick4" "Stick3" "Stick2" "Stick1"} 50)) (play (do (roll) next:(if (gt (var) 0) (if (equals 1 (size Stack at:(where "Ghoula" Neutral))) (or (move (from (where "Ghoula" Neutral) level:(where Level "Ghoula" Neutral at:(where "Ghoula" Neutral))) (to (trackSite Move from:(where "Ghoula" Neutral) "GhoulaTrack" steps:(mapEntry "ThrowGhoula" (count Pips))))) (move (from (where "Ghoula" Neutral) level:(where Level "Ghoula" Neutral at:(where "Ghoula" Neutral))) (to (trackSite Move from:(where "Ghoula" Neutral) "ReverseGhoulaTrack" steps:(mapEntry "ThrowGhoula" (count Pips)))))) (move (from (where "Ghoula" Neutral) level:(where Level "Ghoula" Neutral at:(where "Ghoula" Neutral))) (to (trackSite Move from:(where "Ghoula" Neutral) "ReverseGhoulaTrack" steps:(mapEntry "ThrowGhoula" (count Pips)))) (then (if (equals (last From) 19) (forEach Level (last From) FromTop (remove (last From) level:(level))) (forEach Level (last From) FromTop (fromTo (from (last From) level:(level)) (to (last To))))))) (then (set Var 0))) (if (or (equals (where "Stick" Mover) 14) (notEqual 0 (mapEntry "Throw" (count Pips)))) (forEach Piece))))) (end {(forEach Player if:(no Pieces Player) (result Player Loss)) (if (or (and (equals 1 (size Stack at:(where "Ghoula" Neutral))) (equals 12 (where "Ghoula" Neutral))) (and (all Sites (difference (sites Board) (sites {50 14})) if:(or (is Empty (site)) (and (equals 1 (size Stack at:(site))) (equals (site) (where "Ghoula" Neutral))))) (is Empty 50))) (byScore))}))) 
