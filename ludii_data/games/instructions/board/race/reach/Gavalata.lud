5x5 square. Nine squares are marked: the four central squares of each side, the central square of the board, and the squares which are diagonally between them. Two or four players; each player begins on one of the marked outer squares, beginning on opposite sides if two are playing. Players use one or two cowries as pieces. Four or five cowries are used as dice, with the value of the throw equalling the number of mouths which land face up. Players proceed in a clockwise direction around the board, until they reach the space before the one in which they began, moving to the marked square to the right of the direction of play, and proceeding around the inner square of spaces in an anti-clockwise direction, until arriving at the central space. When a player's piece lands on a space occupied by the opposing player, the opponent's piece is sent back to the starting point. The first player to bring all their pieces to the central square wins. The game involves 4 players. The game involves 2 pieces per player. The game involves 4 dice.
(game "Gavalata" (players 4) (equipment {(board (square 5) {(track "Track1" "2,W,N,E,S,W1,N3,W2,S2,E1,N1" P1 directed:True) (track "Track2" "22,E,S,W,N,E1,S3,E2,N2,W1,S1" P2 directed:True) (track "Track3" "14,S,W,N,E,S1,W3,S2,E2,N1,W1" P3 directed:True) (track "Track4" "10,N,E,S,W,N1,E3,N2,W2,S1,E1" P4 directed:True)}) (dice d:2 from:0 num:4) (piece "Paddle" Each (if (notEqual (trackSite Move steps:(count Pips)) -1) (move (from (from) level:(level)) (to (trackSite Move steps:(count Pips)) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (mapEntry (who at:(to)))))))) (then (if (equals 12 (last To)) (remove (last To)))))) (map {(pair 1 "C1") (pair 2 "C5") (pair 3 "E3") (pair 4 "A3")})}) (rules (start {(place Stack "Paddle1" (mapEntry 1) count:2) (place Stack "Paddle2" (mapEntry 2) count:2) (place Stack "Paddle3" (mapEntry 3) count:2) (place Stack "Paddle4" (mapEntry 4) count:2)}) (play (do (roll) next:(if (notEqual 0 (count Pips)) (forEach Piece) (move Pass)))) (end (if (no Pieces Mover) (result Mover Win))))) 
