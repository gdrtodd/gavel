Forty stones arranged in a circle, with a larger gap after every tenth stone. These gaps are known as doors. Any number of players, each player begins with one piece, which begins at the east door. Three sticks used as dice, black on one side, white on the other, with one stick notched on the white side. The throws are as follows: two black with one notched white side up = 15; three white sides up = 10; two black and one white, not notched = 3, two white and one black = 2, three black = 5. Throws of 10 and 15 grant the player another throw. Players may move in either direction around the circle. To win, the player must complete a circuit of the board and pass the east door. The game has 4 players. The goal is to pass the east door.
(game "Owasokotz" (players 4) (equipment {(board (add (remove (concentric {44}) vertices:{43 21 0 22}) edges:{{20 18} {0 1} {19 21} {38 39}}) {(track "TrackCW" {39 35 33 31 29 27 25 23 21 19 38 17 15 13 11 9 7 5 3 1 37 0 2 4 6 8 10 12 14 16 36 18 20 22 24 26 28 30 32 34} loop:True) (track "TrackCCW" {39 34 32 30 28 26 24 22 20 18 36 16 14 12 10 8 6 4 2 0 37 1 3 5 7 9 11 13 15 17 38 19 21 23 25 27 29 31 33 35} loop:True)} use:Edge) (regions "AllSites" (sites Board)) (piece "Stick" Each (if (equals (state at:(from)) 0) (or (if (notEqual (trackSite Move "TrackCCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3))))) -1) (move (from (from) level:(level)) (to (trackSite Move "TrackCCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3))))) if:(is Empty (trackSite Move "TrackCCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3)))))))) (then (set State at:(last To) 2))) (if (notEqual (trackSite Move "TrackCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3))))) -1) (move (from (from) level:(level)) (to (trackSite Move "TrackCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3))))) if:(is Empty (trackSite Move "TrackCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3)))))))) (then (set State at:(last To) 1)))) (if (notEqual (if (equals (state at:(from)) 1) (trackSite Move "TrackCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3))))) (trackSite Move "TrackCCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3)))))) -1) (move (from (from) level:(level)) (to (if (equals (state at:(from)) 1) (trackSite Move "TrackCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3))))) (trackSite Move "TrackCCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3)))))) if:(is Empty (if (equals (state at:(from)) 1) (trackSite Move "TrackCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3))))) (trackSite Move "TrackCCW" steps:(if (equals (count Pips) 3) 5 (if (equals (count Pips) 0) 10 (if (equals (count Pips) 1) 2 (if (equals (face 44) 1) 15 3)))))))))))) (dice d:2 from:0 num:3) (hand Each)}) (rules (start (place Stack items:{"Stick4" "Stick3" "Stick2" "Stick1"} Edge 38)) (play (do (roll) next:(forEach Piece))) (end (if (and (not (was Pass)) (if (equals 1 (state at:(where "Stick" Mover))) (is In 38 (sites Track "TrackCW" from:(trackSite Move from:(last From) "TrackCW" steps:1) to:(last To))) (is In 38 (sites Track "TrackCCW" from:(trackSite Move from:(last From) "TrackCCW" steps:1) to:(last To))))) (result Mover Win))))) 
