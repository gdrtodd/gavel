9x9 board, with the central square of each side marked, as well as the central space of the board. Two to four players, each player with two pieces. Played with two four-sided dice, marked 1, 3, 4, 6. Throws may be divided as the players see fit between their pieces. Doubles allow another throw. Players start with their pieces on the marked square on their side of the board. Pieces move along a spiraling track, starting in an anti-clockwise direction around the outer edges of the board, then changing to a clockwise direction when reaching the 32nd space in the track, and continuing in this direction in a spiral pattern until reaching the central square. If a player lands on a space occupied by an opponent's piece, the opponent's piece is removed from the board, and the player must throw a double 1 to enter it again on their starting square. Pieces resting on a marked space are safe from being sent to the start. The goal is to reach the central square with both pieces, which must be reached by an exact throw. If a piece is 1, 3, or 4 spaces from the center, the player must throw doubles of that number to reach the goal. The game is played with 4 players.
(game "Saturankam" (players 4) (equipment {(board (square 9) {(track "Track1" "81,4,E,N,W,S,E3,N1,W2,N6,E6,S5,W5,N4,E4,S3,W3,N2,E2,S1,W1" P1 directed:True) (track "Track2" "82,36,S,E,N,W,S3,E1,N2,E6,S6,W5,N5,E4,S4,W3,N3,E2,S2,W1,N1" P2 directed:True) (track "Track3" "83,76,W,S,E,N,W3,S1,E2,S6,W6,N5,E5,S4,W4,N3,E3,S2,W2,N1,E1" P3 directed:True) (track "Track4" "84,44,N,W,S,E,N3,W1,S2,W6,N6,E5,S5,W4,N4,E3,S3,W2,N2,E1,S1" P4 directed:True)}) (dice d:4 faces:{1 3 4 6} num:2) (piece "Marker" Each (if (and (or {(equals (trackSite Move from:(from) steps:1) (centrePoint)) (equals (trackSite Move from:(from) steps:3) (centrePoint)) (equals (trackSite Move from:(from) steps:4) (centrePoint))}) (equals (value Player Mover) (count Pips))) (if (and (all DiceEqual) (equals (trackSite Move from:(from) steps:(div (count Pips) 2)) (centrePoint))) (move (from (from)) (to (centrePoint)) (then (and (moveAgain) (set Var "Double" 1))))) (forEach Value min:1 max:(value Player Mover) (move (from (from) level:(level)) (to (trackSite Move from:(from) steps:(value)) if:True (apply (and (if (and (not (is In (to) (sites "SafeSites"))) (is Enemy (who at:(to)))) (forEach Level (to) FromTop (fromTo (from (to) level:(level)) (to (handSite (who at:(to) level:(level))))))) (if (lt 0 (sub (value Player Mover) (value))) (and (moveAgain) (set Value Mover (sub (value Player Mover) (value)))) (and (set Value Mover 0) (if (all DiceEqual) (and (moveAgain) (set Var "Double" 1)))))))))))) (hand Each) (regions "SafeSites" (sites {4 44 76 36 40})) (map "Entry" {(pair P1 4) (pair P2 36) (pair P3 76) (pair P4 44)})}) (rules (start {(place Stack "Marker1" 4 count:2) (place Stack "Marker2" 36 count:2) (place Stack "Marker3" 76 count:2) (place Stack "Marker4" 44 count:2)}) (play (if (or (equals 1 (var "Double")) (not (is Prev Mover))) (do (roll) next:(move Pass (then (and {(set Value Mover (count Pips)) (if (equals 1 (var "Double")) (set Var "Double" 0)) (moveAgain)})))) (if (can Move (or (if (and {(is Occupied (handSite Mover)) (all DiceEqual) (equals 2 (value Player Mover))}) (move (from (handSite Mover)) (to (mapEntry "Entry" Mover)) (then (and (moveAgain) (set Var "Double" 1))))) (forEach Piece))) (or (if (and {(is Occupied (handSite Mover)) (all DiceEqual) (equals 2 (value Player Mover))}) (move (from (handSite Mover)) (to (mapEntry "Entry" Mover)) (then (and (moveAgain) (set Var "Double" 1))))) (forEach Piece)) (move Pass (then (and (set Var "Double" 0) (set Value Mover 0))))))) (end (if (equals 2 (count Pieces Mover in:(sites Centre))) (result Mover Win))))) 
