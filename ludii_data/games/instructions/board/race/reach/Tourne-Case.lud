Played on a Backgammon board. Three pieces per player. Two dice. Only the lower value of the dice is used. One player plays from their let toward their right, and the other player from their right to their left. Pieces begin on the outer edge of the board. Pieces move according to the throw of the dice toward the point on the opposite side of their side of the board. No more than one piece can be on a point (except the final point) at any time. Pieces cannot pass each other. When a piece lands on an empty point that is opposite an opponent's point with a piece on it, the opponent's piece is sent back to start. The first player to place all three of their pieces on the final point wins.
(game "Tourne-Case" (players 2) (equipment {(board (rectangle 2 13) {(track "Track1" {6 0 1 2 3 4 5 7 8 9 10 11 12 25 24 23 22 21 20 18 17 16 15 14 13} P1 directed:True) (track "Track2" {19 13 14 15 16 17 18 20 21 22 23 24 25 12 11 10 9 8 7 5 4 3 2 1 0} P2 directed:True)} use:Vertex) (dice d:6 num:2) (piece "Disc" Each (move (from (from)) (to (trackSite Move from:(from) steps:(min (face 26) (face 27))) if:(and (or (is Empty (to)) (and (equals (to) (mapEntry "FinalPoint" Mover)) (no Pieces Next in:(sites {(mapEntry "FinalPoint" Mover)})))) (if (lt 1 (min (face 26) (face 27))) (no Pieces Mover in:(sites Track Mover from:(trackSite Move from:(from) steps:1) to:(trackSite Move from:(from) steps:(sub (min (face 26) (face 27)) 1)))) True)) (apply (if (and (is Enemy (who at:(mapEntry "Opposite" (to)))) (equals 1 (size Stack at:(mapEntry "Opposite" (to))))) (fromTo (from (mapEntry "Opposite" (to))) (to (mapEntry "Bar" Next)))))))) (map "FinalPoint" {(pair P1 13) (pair P2 0)}) (map "Bar" {(pair P1 6) (pair P2 19)}) (map "Opposite" {(pair 0 13) (pair 1 14) (pair 2 15) (pair 3 16) (pair 4 17) (pair 5 18) (pair 7 20) (pair 8 21) (pair 9 22) (pair 10 23) (pair 11 24) (pair 12 25) (pair 13 0) (pair 14 1) (pair 15 2) (pair 16 3) (pair 17 4) (pair 18 5) (pair 20 7) (pair 21 8) (pair 22 9) (pair 23 10) (pair 24 11) (pair 25 12)})}) (rules (start {(place Stack "Disc1" 6 count:3) (place Stack "Disc2" 19 count:3)}) (play (do (roll) next:(forEach Piece top:True))) (end (if (equals 3 (count Pieces Mover in:(sites {(mapEntry "FinalPoint" Mover)}))) (result Mover Win))))) 
