4-row board, of any number of holes. Only the outer rows are used. Four counters in each hole in the outer row. Sowing occurs in an anti-clockwise direction. Players do not own rows, instead, over the course of their sowing, their counters are always grouped together, and sowing must occur from the rearmost counter in the player's series. If, after sowing, a player's series has one counter in the foremost hole and two in the next hole behind it, the player sows again from the rearmost hole. If the player overtakes the opponent's series, the player captures any counters in the opponent's series and places all of them in the hole immediately behind the player's series, now becoming the rearmost hole. If the rearmost hole contains a single counter, it is moved into the next hole which then becomes the rearmost hole for the next turn. If a player is reduced to a single counter, it can be moved two holes on the player's turn. The player who successfully captures all of the opponent's counters wins. Each row has 16 holes.
(game "Chiana wa Kunja" (players 2) (equipment {(mancalaBoard 4 16 store:None (track "Track" "0,E,63,W" loop:True)) (piece "Seed" Each) (hand Shared)}) (rules (start {(place "Seed1" (sites Bottom) counts:{4}) (place "Seed2" (sites Top) counts:{4})}) (play (or (move Select (from (trackSite FirstSite from:(trackSite FirstSite if:(not (is Mover (who at:(to))))) if:(is Mover (who at:(to))))) (then (do (and (forEach Site (sites Track "Track" from:(last From) to:(trackSite Move from:(last From) steps:(count at:(last From)))) (if (notEqual (mover) (who at:(site))) (and (remove (site) count:(count at:(site))) (add (piece (id "Seed" Mover)) (to Cell (handSite Shared)) count:(count at:(site)))))) (set Var "NumSowed" (count at:(last From)))) next:(sow) (then (and {(if (lt 1 (var "NumSowed")) (if (and (equals 1 (count at:(trackSite Move from:(last From) "Track" steps:(var "NumSowed")))) (equals 2 (count at:(trackSite Move from:(last From) "Track" steps:(sub (var "NumSowed") 1))))) (moveAgain))) (if (notEqual 0 (what Cell at:(handSite Shared))) (fromTo (from Cell (handSite Shared)) (to (last From)) count:(count Cell at:(handSite Shared)))) (set Var "NumSowed" 0)}))))) (if (and (equals 1 (count Pieces Mover)) (is Empty (trackSite Move from:(from) "Track" steps:1))) (move (from (trackSite FirstSite from:(trackSite FirstSite if:(not (is Mover (who at:(to))))) if:(is Mover (who at:(to))))) (to (trackSite Move from:(from) "Track" steps:2) (apply (and (remove (to) count:(count at:(to))) (add (piece (id "Seed" Mover)) (to (to)) count:(count at:(to)))))))))) (end (if (no Moves Next) (result Mover Win))))) 
