4x12-24 (only even numbers allowed) board. Play begins with two counters in the outer row of each players' holes and two counter in each of the four holes on the right hand side of both players' inner row of holes. Player picks up contents of any hole containing two or more counters and sows them anti-clockwise. If the final counter of the sowing falls into an empty hole, the turn is over. If the last counter falls into an occupied hole, sowing continues by picking up the counters in that hole and continuing in the same direction. If the last counter falls into an occupied hole in the player's inner row, and the opponent's two holes opposite it are occupied, these are captured and sowing continues using these counters beginning at the next hole after the one which caused the capture. Play ends when one player cannot move; i.e. when they have only single counters in holes or all their counters have been captured. Each player has 12 holes. The player can sow from any hole with one or more seeds.
(game "Hus (Damara)" (players 2) (equipment {(mancalaBoard 4 12 store:None {(track "Track1" "0,E,N1,W" loop:True P1) (track "Track2" "24,E,N1,W" loop:True P2)}) (regions "Home" P1 (sites Track "Track1")) (regions "Home" P2 (sites Track "Track2")) (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "Track2") (sites Top))) (regions "Outer" P1 (sites Bottom)) (regions "Outer" P2 (sites Top)) (piece "Seed" Shared) (hand Each)}) (rules (start (set Count 2 to:(union {(expand (intersection (sites Row 1) (sites Right)) steps:3 W) (expand (intersection (sites Row 2) (sites Left)) steps:3 E) (sites P1 "Outer") (sites P2 "Outer")}))) (play (move Select (from (if (is Prev Mover) (if (is Pending) (sites {(value Pending)}) (sites {(last To afterConsequence:True)})) (sites Mover "Home")) if:(gt (count at:(from)) 0)) (then (sow "Track" owner:(mover) apply:(if (gt (count at:(to)) 1) (if (and {(is In (to) (sites Mover "Inner")) (gt (count at:(if (is Mover P1) (add (to) 12) (sub (to) 12))) 0) (gt (count at:(if (is Mover P1) (add (to) (mul 12 2)) (sub (to) (mul 12 2)))) 0)}) (and {(fromTo (from (to)) (to (handSite Mover)) count:(count at:(to))) (fromTo (from (if (is Mover P1) (add (to) 12) (sub (to) 12))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) 12) (sub (to) 12)))) (fromTo (from (if (is Mover P1) (add (to) (mul 12 2)) (sub (to) (mul 12 2)))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) (mul 12 2)) (sub (to) (mul 12 2))))) (if (gt (count at:(trackSite Move from:(to) "Track" steps:1)) 1) (and (set Pending (trackSite Move from:(to) "Track" steps:1)) (moveAgain)))}) (moveAgain))))))) (end (if (no Moves Mover) (byScore {(score P1 (add (count Cell at:(handSite P1)) (count in:(sites P1)))) (score P2 (add (count Cell at:(handSite P2)) (count in:(sites P2))))}))))) 
