4x6, 8, or 10 holes. Eight is most common. Two counters in each hole. Sowing begins from any hole on the player's side, in either direction, but the direction chosen on the first turn must be maintained throughout the game. If the final counter lands in an empty hole, the turn ends. If the final counter lands in the outer row in an occupied hole, these are picked up and sowing continues. If the final counter lands in an occupied hole in the inner row, and the opponent's inner row hole opposite contains more than one counter, these are captured and the sowing continues from the hole from which the capture was made using the captured counters and the final counter from the sowing that caused the capture. If the opponent has no counters in any of their inner row holes, the counters in their outer row holes can be captured, in the same manner. Evidence Map Each player has 8 holes on each row.
(game "Katra" (players 2) (equipment {(mancalaBoard 4 8 store:None {(track "TrackCCW1" "0,E,N1,W" loop:True P1) (track "TrackCCW2" "16,E,N1,W" loop:True P2) (track "TrackCW1" "7,W,N1,E" loop:True P1) (track "TrackCW2" "24,E,S1,W" loop:True P2)}) (regions "Home" P1 (sites Track "TrackCCW1")) (regions "Home" P2 (sites Track "TrackCCW2")) (regions "Outer" P1 (sites Bottom)) (regions "Outer" P2 (sites Top)) (piece "Seed" Shared) (hand Each)}) (rules (start (set Count 2 to:(union (sites P1 "Home") (sites P2 "Home")))) (play (or (if (notEqual (value Player Mover) 2) (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover "Home")) if:(gt (count at:(from)) 0)) (then (and (sow "TrackCCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (if (is In (to) (sites Mover "Outer")) (and (moveAgain) (set Var "Replay" (to))) (if (lt 1 (count at:(if (is Mover P1) (add (to) 8) (sub (to) 8)))) (and {(fromTo (from (if (is Mover P1) (add (to) 8) (sub (to) 8))) (to (to)) count:(count at:(if (is Mover P1) (add (to) 8) (sub (to) 8)))) (moveAgain) (set Var "Replay" (to))}) (if (lt 1 (count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (and {(fromTo (from (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (to (to)) count:(count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (moveAgain) (set Var "Replay" (to))})))))) (if (notEqual (value Player Mover) 1) (set Value Mover 1)))))) (if (notEqual (value Player Mover) 1) (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover "Home")) if:(gt (count at:(from)) 0)) (then (and (sow "TrackCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (if (is In (to) (sites Mover "Outer")) (and (moveAgain) (set Var "Replay" (to))) (if (lt 1 (count at:(if (is Mover P1) (add (to) 8) (sub (to) 8)))) (and {(fromTo (from (if (is Mover P1) (add (to) 8) (sub (to) 8))) (to (to)) count:(count at:(if (is Mover P1) (add (to) 8) (sub (to) 8)))) (moveAgain) (set Var "Replay" (to))}) (if (lt 1 (count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (and {(fromTo (from (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (to (to)) count:(count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (moveAgain) (set Var "Replay" (to))})))))) (if (notEqual (value Player Mover) 2) (set Value Mover 2)))))))) (end (forEach NonMover if:(no Moves Player) (result Player Loss))))) 
