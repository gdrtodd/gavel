4x8 board. Four pieces in each of the holes in the inner two rows. Sowing occurs in an anti-clockwise direction. Single counters cannot be sown. When the final counter of a sowing falls into an occupied hole, these counters are picked up and the sowing continues. If this hole is in the player's inner row, the counters in the opponent's opposite holes in both rows are captured. Both the inner and outer opposite holes must contain counters for a capture to occur. Play continues with the captured counters, and the player sows these beginning with the next hole after the last one on the player's side from which they picked up holes. Captures cannot be made on the first move. Clockwise sowing can begin from the following holes only if it will allow a capture to occur: the rightmost and leftmost holes of the outer row, the second from the right and second from the left holes in the inner row. Direction can be changed in the middle of a turn if the final counter lands in one of these holes and a clockwise move will result in a capture. When no capture is available, the player must resume in an anti-clockwise direction. When the final counter falls into an empty hole, the turn ends.
(game "Kubuguza" (players 2) (equipment {(mancalaBoard 4 8 store:None {(track "TrackCCW1" "0,E,N1,W" loop:True P1) (track "TrackCCW2" "16,E,N1,W" loop:True P2) (track "TrackCW1" "7,W,N1,E" loop:True P1) (track "TrackCW2" "23,W,N1,E" loop:True P2)}) (regions "Home" P1 (sites Track "TrackCCW1")) (regions "Home" P2 (sites Track "TrackCCW2")) (regions "Inner" P1 (difference (sites Track "TrackCCW1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "TrackCCW2") (sites Top))) (regions "HolesCW" P1 (sites {15 8 1 6})) (regions "HolesCW" P2 (sites {16 23 25 30})) (piece "Seed" Shared) (hand Each)}) (rules (start (set Count 3 to:(union (sites P1 "Inner") (sites P2 "Inner")))) (play (or (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover "Home")) if:(gt (count at:(from)) 1)) (then (sow "TrackCCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (and (if (and {(gt (count Turns) 2) (is In (to) (sites Mover "Inner")) (is Occupied (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (is Occupied (if (is Mover P1) (add (to) 8) (sub (to) 8)))}) (and {(fromTo (from (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (fromTo (from (if (is Mover P1) (add (to) 8) (sub (to) 8))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) 8) (sub (to) 8)))) (set Var "Replay" (last From))}) (set Var "Replay" (to))) (moveAgain)))))) (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover "HolesCW")) if:(and {(gt (count at:(from)) 1) (is In (from) (sites Mover "HolesCW")) (if (is In (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) (sites Mover "Inner")) (and (is Occupied (if (is Mover P1) (add (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) (mul 8 2)) (sub (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) (mul 8 2)))) (is Occupied (if (is Mover P1) (add (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) 8) (sub (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) 8)))) False)})) (then (sow "TrackCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (and (if (and {(gt (count Turns) 2) (is In (to) (sites Mover "Inner")) (is Occupied (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (is Occupied (if (is Mover P1) (add (to) 8) (sub (to) 8)))}) (and {(fromTo (from (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (fromTo (from (if (is Mover P1) (add (to) 8) (sub (to) 8))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) 8) (sub (to) 8)))) (set Var "Replay" (last From))}) (set Var "Replay" (to))) (moveAgain)))))))) (end (forEach Player if:(no Moves Player) (result Player Loss))))) 
