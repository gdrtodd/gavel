4x8 board. 32 counters per player. Players may arrange the counters however they like in their holes. Players sow by taking the counters from one of their holes and dropping them one by one in an anti-clockwise direction only in the two rows closest to them. When the last counter lands in an empty hole, the turn is over. When the last counter falls into an occupied hole, the contents of this hole are picked up and sowing continues. If the final counter falls into an occupied hole in the inner row, and the two holes opposite it in the opponent's rows are occupied, the counters in these two rows of the opponent are taken. They are then sown on the player's side of the board beginning from the hole that received the first counter of the sowing that led to the capture. Both of the opponent's holes must be occupied to capture. Clockwise sowing is allowed in certain circumstances. If a clockwise move from the four holes on the left hand side of the players board (i.e., the left two holes in the outer row or the left two hole in the inner row) can lead to a capture, a clockwise move is allowed. Sowing cannot occur with single counters. The player who can no longer move loses.
(game "Mweso" (players 2) (equipment {(mancalaBoard 4 8 store:None {(track "TrackCCW1" "0,E,N1,W" loop:True P1) (track "TrackCCW2" "16,E,N1,W" loop:True P2) (track "TrackCW1" "7,W,N1,E" loop:True P1) (track "TrackCW2" "24,E,S1,W" loop:True P2)}) (piece "Seed" Shared) (regions "Home" P1 (sites Track "TrackCCW1")) (regions "Home" P2 (sites Track "TrackCCW2")) (regions "Inner" P1 (difference (sites Track "TrackCCW1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "TrackCCW2") (sites Top))) (regions "Left" P1 (intersection (sites Track "TrackCCW1") (expand (sites Left)))) (regions "Left" P2 (intersection (sites Track "TrackCCW2") (expand (sites Right)))) (hand Each)}) (rules (start {(set Count 32 at:(handSite P1)) (set Count 32 at:(handSite P2))}) phases:{(phase "Placing" (play (move (from (handSite Mover)) (to (sites Mover "Home")) count:1)) (nextPhase Mover (is Empty (handSite Mover)) "Sowing")) (phase "Sowing" (play (or {(if (notEqual 2 (var "Direction")) (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover "Home")) if:(lt 1 (count at:(from)))) (then (sow "TrackCCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (and {(set Var "Direction" 1) (moveAgain) (set Var "Replay" (to)) (if (is In (to) (sites Mover "Inner")) (if (and (is Occupied (if (is Mover P1) (add (to) 8) (sub (to) 8))) (is Occupied (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (and {(fromTo (from (if (is Mover P1) (add (to) 8) (sub (to) 8))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) 8) (sub (to) 8)))) (fromTo (from (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (sow (last From) count:(add (count at:(if (is Mover P1) (add (to) 8) (sub (to) 8))) (count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) "TrackCCW" owner:(mover))})))}) (set Var "Direction" 0)))))) (if (notEqual 1 (var "Direction")) (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover "Left")) if:(and (lt 1 (count at:(from))) (if (is Prev Mover) True (if (is In (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) (sites Mover "Inner")) (and (is Occupied (if (is Mover P1) (add (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) 8) (sub (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) 8))) (is Occupied (if (is Mover P1) (add (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) (mul 8 2)) (sub (trackSite Move from:(from) "TrackCW" steps:(count at:(from))) (mul 8 2))))) False)))) (then (sow "TrackCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (and {(set Var "Direction" 2) (moveAgain) (set Var "Replay" (to)) (if (is In (to) (sites Mover "Inner")) (if (and (is Occupied (if (is Mover P1) (add (to) 8) (sub (to) 8))) (is Occupied (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (and {(fromTo (from (if (is Mover P1) (add (to) 8) (sub (to) 8))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) 8) (sub (to) 8)))) (fromTo (from (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (sow (last From) count:(add (count at:(if (is Mover P1) (add (to) 8) (sub (to) 8))) (count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) "TrackCCW" owner:(mover))})))}) (set Var "Direction" 0))))))})) (end (if (and (not (is Next Mover)) (no Moves Next)) (result Mover Win))))})) 
