4x7-10 board (seven most common). One counter in each hole, with the player's leftmost hole in the outer row empty. On the first turn, sowing occurs in a clockwise direction. On the second turn, the player may sow in either direction, but must continue in the chosen direction for the rest of the game. Captures are made when the final counter of a sowing lands in an empty hole in the inner row. Captures are only made from the opponent's opposite outer row hole, and only when their inner row hole is empty. If the final counter lands in an occupied hole, the player picks up these counters and continues sowing. The player who captures all of the opponent's counters wins. Each player has 7 holes.
(game "Namudilakunze" (players 2) (equipment {(mancalaBoard 4 7 store:None {(track "TrackCCW1" "0,E,N1,W" loop:True P1) (track "TrackCCW2" "14,E,N1,W" loop:True P2) (track "TrackCW1" "6,W,N1,E" loop:True P1) (track "TrackCW2" "20,W,N1,E" loop:True P2)}) (piece "Seed" Shared) (regions "Home" P1 (sites Track "TrackCCW1")) (regions "Home" P2 (sites Track "TrackCCW2")) (regions "Inner" P1 (difference (sites Track "TrackCCW1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "TrackCCW2") (sites Top))) (hand Each)}) (rules (start (set Count 1 to:(difference (sites Board) (sites {0 (sub (mul 7 4) 1)})))) phases:{(phase "FirstTurn" (play (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(is Occupied (from))) (then (sow "TrackCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (moveAgain) (if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (add (to) 7) (sub (to) 7))) (remove (if (is Mover P1) (add (to) 7) (sub (to) 7))) (if (is Occupied (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (remove (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))))))))))) (nextPhase Mover (not (is Next Mover)) "Main")) (phase "Main" (play (or (if (or (ge 0 (value Player Mover)) (equals (value Player Mover) 1)) (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(is Occupied (from))) (then (sow "TrackCCW" owner:(mover) apply:(and (if (lt 1 (count at:(to))) (moveAgain) (if (is In (to) (sites Mover "Inner")) (if (is Empty (if (is Mover P1) (add (to) 7) (sub (to) 7))) (if (is Occupied (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (remove (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))))))) (if (notEqual 1 (value Player Mover)) (set Value Mover 1))))))) (if (or (ge 0 (value Player Mover)) (equals (value Player Mover) 2)) (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(is Occupied (from))) (then (sow "TrackCW" owner:(mover) apply:(and (if (lt 1 (count at:(to))) (moveAgain) (if (is In (to) (sites Mover "Inner")) (if (is Empty (if (is Mover P1) (add (to) 7) (sub (to) 7))) (if (is Occupied (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (remove (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))))))) (if (notEqual 2 (value Player Mover)) (set Value Mover 2))))))))))} (end (forEach NonMover if:(all Sites (sites Player "Home") if:(equals 0 (count at:(site)))) (result Player Loss))))) 
