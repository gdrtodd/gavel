4x7 board, using only the outer two rows. Three counters in each hole. Sowing occurs in an anticlockwise direction. The first player takes the counters out of their leftmost hole and sows them. Instead of each player owning a row of holes, they own the series of holes which currently contain their counters. Players always sow from the rearmost of their holes. When the frontmost two holes of a player's sequence contain one counter each, the player gets another turn. When a player sows into the rear holes of the opponent, the player takes ownership of those holes. When one player is reduced to one counter, they jump to the nearest corner hole in the direction of play, and continue jumping from corner to corner until they capture counters belonging to the opponent, at which point they revert to the normal playing style. The first player to capture all their opponent's pieces wins.
(game "Ngulungu" (players 2) (equipment {(mancalaBoard 4 7 store:None {(track "Track" "0,E,27,W" loop:True) (track "TrackCorner" "0,6,27,21" loop:True) (track "ReverseTrack" "6,W,21,E" loop:True)}) (piece "Seed" Each)}) (rules (start {(place "Seed1" (sites Bottom) counts:{3}) (place "Seed2" (sites Top) counts:{3})}) (play (if (and (all Sites (sites Occupied by:Mover) if:(is In (sites Corners))) (equals 1 (count Pieces Mover))) (move (from (trackSite FirstSite from:(trackSite FirstSite if:(not (is Mover (who at:(to))))) if:(is Mover (who at:(to))))) (to (trackSite FirstSite "TrackCorner" from:(from) if:(is Enemy (who at:(to)))) (apply (and (remove (to) count:(count at:(to))) (add (piece (id "Seed" Mover)) (to (to)) count:(count at:(to))))))) (move Select (from (trackSite FirstSite from:(trackSite FirstSite if:(not (is Mover (who at:(to))))) if:(is Mover (who at:(to))))) (then (sow sowEffect:(if (and (notEqual (mover) (what at:(to))) (is Occupied (to))) (and (remove (to) count:(count at:(to))) (add (piece (id "Seed" Mover)) (to (to)) count:(count at:(to))))) apply:(if (and (equals 1 (count at:(trackSite Move from:(to) "ReverseTrack" steps:1))) (equals 1 (count at:(to)))) (moveAgain))))))) (end (forEach NonMover if:(no Pieces Player) (result Player Loss))))) 
