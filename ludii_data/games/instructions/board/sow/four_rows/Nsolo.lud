4x10-20 board, with even numbers. Two counters in each hole, except the rightmost hole in the inner row of each player, which has zero. Sowing occurs in an anti-clockwise direction. When the final counter lands in an occupied hole, these are picked up and sowing continues. When the final counter lands in an empty hole in the inner row, the counters in the opposite hole in the opponent's inner row are captured. If counters are captured from the inner row, and there are also counters in the outer row, the counters in the outer row are also captured. If counters in the inner and outer row are captured, the player may also capture counters from one other hole on the opponent's side of the board. Single counters cannot be sown until there are no holes with multiple counters on the player's side of the board, and then single counters may only be sown into empty holes. Play continues until one player captures all of their opponent's counters, thus winning the game. Each row has 10 holes.
(game "Nsolo" (players 2) (equipment {(mancalaBoard 4 10 store:None {(track "Track1" "0,E,N1,W" loop:True P1) (track "Track2" "20,E,N1,W" loop:True P2)}) (regions "Home" P1 (sites Track "Track1")) (regions "Home" P2 (sites Track "Track2")) (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "Track2") (sites Top))) (piece "Seed" Shared)}) (rules (start (set Count 2 to:(union {(sites Bottom) (sites Top) (difference (sites P1 "Inner") (sites Right)) (difference (sites P2 "Inner") (sites Left))}))) (play (if (and (is Prev Mover) (equals (var "Replay") -1)) (move Remove (sites Next "Home")) (if (all Sites (sites Mover "Home") if:(ge 1 (count at:(site)))) (move Select (from (sites Mover "Home") if:(and (is Occupied (from)) (is Empty (trackSite Move from:(from) "Track" steps:1)))) (then (sow "Track" owner:(mover)))) (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover "Home")) if:(gt (count at:(from)) 1)) (then (sow "Track" owner:(mover) apply:(if (lt 1 (count at:(to))) (if (and (is In (to) (sites Mover "Inner")) (is Occupied (if (is Mover P1) (add (to) 10) (sub (to) 10)))) (and (remove (if (is Mover P1) (add (to) 10) (sub (to) 10))) (if (is Occupied (if (is Mover P1) (add (to) (mul 10 2)) (sub (to) (mul 10 2)))) (and {(moveAgain) (set Var "Replay" -1) (remove (if (is Mover P1) (add (to) (mul 10 2)) (sub (to) (mul 10 2))))}))) (and (moveAgain) (set Var "Replay" (to))))))))))) (end (forEach NonMover if:(all Sites (sites Player "Home") if:(equals 0 (count at:(site)))) (result Player Loss))))) 
