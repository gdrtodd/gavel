4x12-20 board. Play begins with a number of counters that is three times the number of holes in a row minus two for a game with an even number of holes in a row; three times the number of holes minus one for odd. Counters are distributed beginning in the leftmost hole in the outer row, placing two counters in each hole in an anti-clockwise direction. Play begins from any of the player's holes, sowing anti-clockwise. When the final counter lands in an occupied hole, these are picked up and sowing continues, unless a capture can be made. Captures are made when the final counter falls into an occupied hole in the inner row, and the opponent's hole opposite contains counters. If it is, they are captured, and if the hole in to outer row opposite also contains counters, these are also captured. These are then sown from the hole following the one from which the capture occurred. If the final counter falls into an empty hole, the turn is over. Single counters cannot be sown. Play ends when one player cannot move. Each player has 12 holes.
(game "Owela (Benguela)" (players 2) (equipment {(mancalaBoard 4 12 store:None {(track "Track1" "0,E,N1,W" loop:True P1) (track "Track2" "24,E,N1,W" loop:True P2)}) (regions "Home" P1 (sites Track "Track1")) (regions "Home" P2 (sites Track "Track2")) (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "Track2") (sites Top))) (regions "Outer" P1 (sites Bottom)) (regions "Outer" P2 (sites Top)) (regions "InnerInit" P1 (sites {19 20 21 22 23})) (regions "InnerInit" P2 (sites {24 25 26 27 28})) (piece "Seed" Shared) (hand Each)}) (rules (start (set Count 2 to:(union {(sites P1 "Outer") (sites P1 "InnerInit") (sites P2 "Outer") (sites P2 "InnerInit")}))) (play (move Select (from (if (is Prev Mover) (if (is Pending) (sites {(value Pending)}) (sites {(last To afterConsequence:True)})) (sites Mover "Home")) if:(gt (count at:(from)) 1)) (then (sow "Track" owner:(mover) apply:(if (gt (count at:(to)) 1) (if (and (is In (to) (sites Mover "Inner")) (gt (count at:(if (is Mover P1) (add (to) 12) (sub (to) 12))) 0)) (and {(fromTo (from (to)) (to (handSite Mover)) count:(count at:(to))) (fromTo (from (if (is Mover P1) (add (to) 12) (sub (to) 12))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) 12) (sub (to) 12)))) (if (gt (count at:(if (is Mover P1) (add (to) (mul 12 2)) (sub (to) (mul 12 2)))) 0) (fromTo (from (if (is Mover P1) (add (to) (mul 12 2)) (sub (to) (mul 12 2)))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) (mul 12 2)) (sub (to) (mul 12 2)))))) (if (gt (count at:(if (is Mover P1) (trackSite Move from:(to) "Track1" steps:1) (trackSite Move from:(to) "Track2" steps:1))) 1) (and (set Pending (if (is Mover P1) (trackSite Move from:(to) "Track1" steps:1) (trackSite Move from:(to) "Track2" steps:1))) (moveAgain)))}) (moveAgain))))))) (end (if (no Moves Mover) (byScore {(score P1 (add (count Cell at:(handSite P1)) (count in:(sites P1)))) (score P2 (add (count Cell at:(handSite P2)) (count in:(sites P2))))}))))) 
