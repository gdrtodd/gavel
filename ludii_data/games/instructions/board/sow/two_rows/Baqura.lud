2x6 board. Each player has 36 counters which they arrange however they like in their holes. Play begins from any hole in a player's row. Sowing occurs in an anti-clockwise direction. When the last counter falls makes an odd number of counters in the final hole of the sowing, these are picked up and sowing continues. If the last hole is made to be even, these are captured, as well as the contents of the opposite hole. If the previous hole is also even, those counters and those in the opposite hole are also taken, continuing until there is an odd or empty hole. If the final counter falls into an empty hole, play ends. The round ends when one player is unable to move. A new round begins. The player with the smaller number of counters distributes them as they like in their holes. The opponent then copies this arrangement, keeping the surplus of counters. Play continues as before. Rounds are played until one player has no remaining counters.
(game "Baqura" (players 2) (equipment {(mancalaBoard 2 6 store:None (track "Track" "0,E,N,W" loop:True)) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (piece "Seed" Shared) (hand Each)}) (rules (start {(set Count 36 at:(handSite P1)) (set Count 36 at:(handSite P2))}) phases:{(phase "Placement" (play (move (from (handSite Mover)) (to (sites Mover)))) (nextPhase Mover (all Sites (sites Hand Mover) if:(equals 0 (count Cell at:(site)))) "Sowing")) (phase "Sowing" (play (if (not (all Sites (sites Mover) if:(equals 0 (count at:(site))))) (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover)) if:(gt (count at:(from)) 0)) (then (sow if:(gt (count at:(to)) 1) apply:(if (and (gt (count at:(to)) 1) (is Odd (count at:(to)))) (moveAgain) (and (if (gt (count at:(if (is In (to) (sites Bottom)) (add (to) 6) (sub (to) 6))) 0) (fromTo (from (if (is In (to) (sites Bottom)) (add (to) 6) (sub (to) 6))) (to (handSite Mover)) count:(count at:(if (is In (to) (sites Bottom)) (add (to) 6) (sub (to) 6))))) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to))))) backtracking:(and {(is In (to) (sites Mover)) (gt (count at:(to)) 1) (is Even (count at:(to)))})))) (move Pass (then (and (forEach Site (sites Next) (if (is Occupied (site)) (fromTo (from (site)) (to (handSite Next)) count:(count at:(site))))) (if (lt (add (count Cell at:(handSite P1)) (count in:(sites P1))) (add (count Cell at:(handSite P2)) (count in:(sites P2)))) (set NextPlayer (player 1)) (set NextPlayer (player 2)))))))) (nextPhase (was Pass) "PlacementLosingPlayer")) (phase "PlacementLosingPlayer" (play (move (from (handSite Mover)) (to (sites Mover)) (then (if (all Sites (sites Hand Mover) if:(equals 0 (count Cell at:(site)))) (forEach Site (sites Mover) (if (is Occupied (site)) (fromTo (from Cell (handSite Next)) (to (if (is In (site) (sites Bottom)) (add (site) 6) (sub (site) 6))) count:(count at:(site))))) (moveAgain))))) (nextPhase (all Sites (sites Hand Mover) if:(equals 0 (count Cell at:(site)))) "Sowing"))} (end (forEach Player if:(equals 0 (add (count Cell at:(handSite Player)) (count in:(sites Player)))) (result Player Loss))))) 
