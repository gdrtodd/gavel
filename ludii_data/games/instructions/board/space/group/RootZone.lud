Goal: Scoring is based on your largest group (x2), with an extra point given to the first player to create a given size. The player with the largest group at the end of the game thus wins, and ties go to the first player to achieve this goal. Setup: Yellow starts by creating a set-up, then Orange begins actual play - Pass to skip this phase To create a set-up, Yellow first places a black blocking stone on any intersection and then a Yellow stone on an empty edge position. Orange then either begins play, or else exchanges the yellow piece with his own. Play: Players take turns placing their piece on an empty intersection that is either along the edge or next to another fiendly piece, but never adjacent to an enemy position. These placements are subject to 2 possible additional restrictions selected by the players before starting: A) The number range of friendly neighbors the piece being placed may have: (Standard is to play with no restriction.) and/or B) The maximum number of neighbors that are allowed for the pieces against which the piece may be placed, with 2 being standard play. Ending the game. Play continues until both players pass consecutively, and then the final scores are compared. Board & size: Hexhex with edges alternating 4 and 6 Place next to any friendly piece(s), but not next to pieces that already have more than 2 neighbors.
(game "RootZone" (players 2) (equipment {(board (tri {4 6 4 7 4}) use:Vertex) (piece "Disc" Each) (piece "Disc" Neutral)}) (rules (play (if (equals -1 (counter)) (or (move Pass) (move Add (piece "Disc0") (to (sites Board)))) (or {(if (equals 1 (counter)) (move Select (from (sites Occupied by:Enemy)) (then (remove (last To) (then (add (to (last To)))))))) (move Pass) (move Add (to (difference (union (sites Outer) (sites Around (sites Occupied by:Mover))) (union {(sites Around (sites Occupied by:Enemy)) (sites Around (forEach (sites Occupied by:Mover) if:(le 3 (count Pieces Mover in:(sites Around (site)))))) (sites Around (sites Occupied by:Neutral))})) if:(and (is Empty (to)) (ge 6 (count Pieces Mover in:(sites Around (to)))))) (then (if (gt (mul 2 (size Group at:(last To))) (score Mover)) (if (gt (mul 2 (size Group at:(last To))) (score Next)) (set Score Mover (add 1 (mul 2 (size Group at:(last To))))) (set Score Mover (mul 2 (size Group at:(last To))))))))}))) (end (if (all Passed) (byScore))))) 
