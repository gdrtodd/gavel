Each player in turn places one of his marbles in an open space on the board, on top of a square (i.e. 4 marbles next to each other). After the placement of each marble, check to see if a square or marbles have been formed. If at least 3 of the 4 marbles that form a square are of the same color, a piece of that color go on top of that square. If as a result other squares are formed, the same rule is applied. The winner is the first player to have at least 27 marbles of his colour on the board.
(game "Upper Hand" (players 2) (equipment {(board (square 5 pyramidal:True) use:Vertex) (piece "Ball" Each) (piece "Ball" Neutral)}) (rules (start (place "Ball0" (centrePoint))) (play (move Add (to (sites Empty) if:(is Flat)) (then (while (not (all Sites (sites Board) if:(not (can Move (or (and {(if (and (and (is Occupied (site)) (is Empty (ahead (site) UNE))) (and (notEqual (site) (ahead (site) N)) (notEqual (site) (ahead (site) E)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) N) (ahead (site) E) (ahead (ahead (site) N) E)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P1) (sites {(site) (ahead (site) N) (ahead (site) E) (ahead (ahead (site) N) E)}))))) (add (piece (id "Ball" P1)) (to (ahead (site) UNE) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) USE))) (and (notEqual (site) (ahead (site) S)) (notEqual (site) (ahead (site) E)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) S) (ahead (site) E) (ahead (ahead (site) S) E)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P1) (sites {(site) (ahead (site) S) (ahead (site) E) (ahead (ahead (site) S) E)}))))) (add (piece (id "Ball" P1)) (to (ahead (site) USE) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) USW))) (and (notEqual (site) (ahead (site) S)) (notEqual (site) (ahead (site) W)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) S) (ahead (site) W) (ahead (ahead (site) S) W)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P1) (sites {(site) (ahead (site) S) (ahead (site) W) (ahead (ahead (site) S) W)}))))) (add (piece (id "Ball" P1)) (to (ahead (site) USW) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) UNE))) (and (notEqual (site) (ahead (site) N)) (notEqual (site) (ahead (site) W)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) N) (ahead (site) W) (ahead (ahead (site) N) W)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P1) (sites {(site) (ahead (site) N) (ahead (site) W) (ahead (ahead (site) N) W)}))))) (add (piece (id "Ball" P1)) (to (ahead (site) UNE) if:(is Flat)))))}) (and {(if (and (and (is Occupied (site)) (is Empty (ahead (site) UNE))) (and (notEqual (site) (ahead (site) N)) (notEqual (site) (ahead (site) E)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) N) (ahead (site) E) (ahead (ahead (site) N) E)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P2) (sites {(site) (ahead (site) N) (ahead (site) E) (ahead (ahead (site) N) E)}))))) (add (piece (id "Ball" P2)) (to (ahead (site) UNE) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) USE))) (and (notEqual (site) (ahead (site) S)) (notEqual (site) (ahead (site) E)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) S) (ahead (site) E) (ahead (ahead (site) S) E)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P2) (sites {(site) (ahead (site) S) (ahead (site) E) (ahead (ahead (site) S) E)}))))) (add (piece (id "Ball" P2)) (to (ahead (site) USE) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) USW))) (and (notEqual (site) (ahead (site) S)) (notEqual (site) (ahead (site) W)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) S) (ahead (site) W) (ahead (ahead (site) S) W)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P2) (sites {(site) (ahead (site) S) (ahead (site) W) (ahead (ahead (site) S) W)}))))) (add (piece (id "Ball" P2)) (to (ahead (site) USW) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) UNE))) (and (notEqual (site) (ahead (site) N)) (notEqual (site) (ahead (site) W)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) N) (ahead (site) W) (ahead (ahead (site) N) W)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P2) (sites {(site) (ahead (site) N) (ahead (site) W) (ahead (ahead (site) N) W)}))))) (add (piece (id "Ball" P2)) (to (ahead (site) UNE) if:(is Flat)))))})))))) (forEach Site (sites Board) (and (and {(if (and (and (is Occupied (site)) (is Empty (ahead (site) UNE))) (and (notEqual (site) (ahead (site) N)) (notEqual (site) (ahead (site) E)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) N) (ahead (site) E) (ahead (ahead (site) N) E)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P1) (sites {(site) (ahead (site) N) (ahead (site) E) (ahead (ahead (site) N) E)}))))) (add (piece (id "Ball" P1)) (to (ahead (site) UNE) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) USE))) (and (notEqual (site) (ahead (site) S)) (notEqual (site) (ahead (site) E)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) S) (ahead (site) E) (ahead (ahead (site) S) E)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P1) (sites {(site) (ahead (site) S) (ahead (site) E) (ahead (ahead (site) S) E)}))))) (add (piece (id "Ball" P1)) (to (ahead (site) USE) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) USW))) (and (notEqual (site) (ahead (site) S)) (notEqual (site) (ahead (site) W)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) S) (ahead (site) W) (ahead (ahead (site) S) W)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P1) (sites {(site) (ahead (site) S) (ahead (site) W) (ahead (ahead (site) S) W)}))))) (add (piece (id "Ball" P1)) (to (ahead (site) USW) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) UNE))) (and (notEqual (site) (ahead (site) N)) (notEqual (site) (ahead (site) W)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) N) (ahead (site) W) (ahead (ahead (site) N) W)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P1) (sites {(site) (ahead (site) N) (ahead (site) W) (ahead (ahead (site) N) W)}))))) (add (piece (id "Ball" P1)) (to (ahead (site) UNE) if:(is Flat)))))}) (and {(if (and (and (is Occupied (site)) (is Empty (ahead (site) UNE))) (and (notEqual (site) (ahead (site) N)) (notEqual (site) (ahead (site) E)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) N) (ahead (site) E) (ahead (ahead (site) N) E)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P2) (sites {(site) (ahead (site) N) (ahead (site) E) (ahead (ahead (site) N) E)}))))) (add (piece (id "Ball" P2)) (to (ahead (site) UNE) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) USE))) (and (notEqual (site) (ahead (site) S)) (notEqual (site) (ahead (site) E)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) S) (ahead (site) E) (ahead (ahead (site) S) E)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P2) (sites {(site) (ahead (site) S) (ahead (site) E) (ahead (ahead (site) S) E)}))))) (add (piece (id "Ball" P2)) (to (ahead (site) USE) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) USW))) (and (notEqual (site) (ahead (site) S)) (notEqual (site) (ahead (site) W)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) S) (ahead (site) W) (ahead (ahead (site) S) W)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P2) (sites {(site) (ahead (site) S) (ahead (site) W) (ahead (ahead (site) S) W)}))))) (add (piece (id "Ball" P2)) (to (ahead (site) USW) if:(is Flat))))) (if (and (and (is Occupied (site)) (is Empty (ahead (site) UNE))) (and (notEqual (site) (ahead (site) N)) (notEqual (site) (ahead (site) W)))) (if (and (equals 0 (count Sites in:(intersection (sites Empty) (sites {(site) (ahead (site) N) (ahead (site) W) (ahead (ahead (site) N) W)})))) (le 3 (count Sites in:(intersection (sites Occupied by:P2) (sites {(site) (ahead (site) N) (ahead (site) W) (ahead (ahead (site) N) W)}))))) (add (piece (id "Ball" P2)) (to (ahead (site) UNE) if:(is Flat)))))}))))))) (end (if (le 27 (count Sites in:(sites Occupied by:Mover))) (result Mover Win))))) 
