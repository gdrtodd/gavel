The players take turns placing one piece on any vacant square. In this phase no captures are made. When all the pieces have been placed, the players take turns moving pieces on the board. The pieces can be moved orthogonally to any adjacent square. A piece can leap over any single piece of either color, if the square behind is unoccupied. Several leaps in one turn are possible (as in Draughts). If a player can trap an enemy piece between two friendly pieces, the enemy piece is blocked and cannot be moved. On the next turn, instead of moving a piece, the player can capture the trapped piece by removing it from the board, provided his own two surrounding pieces are still free. The trapped piece is immediately free if one of its two enemies is itself surrounded. A player reduced to only one piece left on the board has lost the game. States can not be repeated. Rules suggested by Ulrich Schadler in 1994.
(game "Ludus Latrunculorum" (players 2) (equipment {(board (square 8)) (hand Each) (piece "Vagi" Each (flips 0 1) (if (equals 0 (state at:(from))) (or (move Step Orthogonal (to if:(is Empty (to)))) (move Hop Orthogonal (between if:(is Occupied (between))) (to if:(and (is Empty (to)) (not (is Visited (to))))) (then (if (can Move (move Hop (from (last To)) Orthogonal (between if:(is Occupied (between))) (to if:(and (is Empty (to)) (not (is Visited (to))))))) (moveAgain)))) (then (and (custodial (from (last From)) Orthogonal (between (max 1) if:(and (equals (what at:(between)) (next)) (equals 1 (state at:(between)))) (apply (flip (between)))) (to if:(and (is Friend (who at:(to))) (equals 0 (state at:(to)))))) (custodial (from (last To)) Orthogonal (between (max 1) if:(and (equals (what at:(between)) (next)) (equals 0 (state at:(between)))) (apply (and (flip (between)) (custodial (from (between)) Orthogonal (between (max 1) if:(and (equals (what at:(between)) (mover)) (equals 1 (state at:(between)))) (apply (flip (between)))) (to if:(and (is Enemy (who at:(to))) (equals 0 (state at:(to))))))))) (to if:(and (is Friend (who at:(to))) (equals 0 (state at:(to)))))))))))}) (rules (meta (no Repeat)) (start (place "Vagi" "Hand" count:16)) phases:{(phase "Placement" (play (move (from (handSite Mover)) (to (sites Empty)))) (nextPhase Mover (all Sites (sites Hand Mover) if:(equals 0 (count Cell at:(site)))) "Movement")) (phase "Movement" (play (if (is Prev Mover) (or (move Hop (from (last To)) Orthogonal (between if:(is Occupied (between))) (to if:(and (is Empty (to)) (not (is Visited (to))))) (then (and {(if (can Move (move Hop (from (last To)) Orthogonal (between if:(is Occupied (between))) (to if:(and (is Empty (to)) (not (is Visited (to))))))) (moveAgain)) (custodial (from (last From)) Orthogonal (between (max 1) if:(and (equals (what at:(between)) (next)) (equals 1 (state at:(between)))) (apply (flip (between)))) (to if:(and (is Friend (who at:(to))) (equals 0 (state at:(to)))))) (custodial (from (last To)) Orthogonal (between (max 1) if:(and (equals (what at:(between)) (next)) (equals 0 (state at:(between)))) (apply (and (flip (between)) (custodial (from (between)) Orthogonal (between (max 1) if:(and (equals (what at:(between)) (mover)) (equals 1 (state at:(between)))) (apply (flip (between)))) (to if:(and (is Enemy (who at:(to))) (equals 0 (state at:(to))))))))) (to if:(and (is Friend (who at:(to))) (equals 0 (state at:(to))))))}))) (move Pass)) (or (forEach Piece) (move Remove (forEach (sites Occupied by:Next) if:(equals 1 (state at:(site)))))))))} (end (if (equals (count Pieces Next) 1) (result Mover Win))))) 
