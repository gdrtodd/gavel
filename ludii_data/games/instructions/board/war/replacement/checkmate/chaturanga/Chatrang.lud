Four players, playing on teams of two. 1 x Shah (king): moves one space orthogonally or diagonally. 2 x Rukh (rook): Any number of spaces orthogonally. 2 x Pil (elephant): any distance diagonally; 2 x Asb (horse): Moves as a chess knight. 8 x Sarbaz (soldier): Moves one space forward orthogonally; one space forward diagonally to capture. The pieces of one team are arranged with Shahs on the two central squares of the outer rows, then the Pils, ASbs, and Rukhs, with the Sarbaz in the row in front of them. When a piece moves onto a space occupied by an opponent's piece, the opponent's piece is captured. When a Shah can be captured on the next turn, it is in check, and cannot remain in check at the end of that player's turn. When this is not possible, it is checkmate, and that player is out of the game. A team wins by checkmating both opposing Kings, or by capturing all of the opponents' pieces aside from the Kings. If all four Kings are the only remaining pieces, the game is a draw.
(game "Chatrang" (players {(player N) (player S) (player N) (player S)}) (equipment {(board (square 8)) (piece "Pawn" Each (or {(move Step Forward (to if:(is Empty (to)))) (move Step (directions {FR FL}) (to if:(is Enemy (who at:(to))) (apply (remove (to))))) (if (is In (from) (sites Start (piece (what at:(from))))) (move Slide Forward (between (exact 2) if:(is Empty (between))) (to if:(is Empty (to)))))})) (piece "Rook" Each (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply (remove (to)))))) (piece "King_noCross" Each (move Step (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to))))))) (piece "Elephant" Each (move Slide Diagonal (to if:(is Enemy (who at:(to))) (apply (remove (to)))))) (piece "Knight" Each (move Leap {{F F R F} {F F L F}} (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to)))))))}) (rules (start {(place "Pawn1" (intersection (expand (sites Left) steps:3) (sites Row 1))) (place "Pawn2" (intersection (expand (sites Right) steps:3) (sites Row 6))) (place "Pawn3" (intersection (expand (sites Right) steps:3) (sites Row 1))) (place "Pawn4" (intersection (expand (sites Left) steps:3) (sites Row 6))) (place "Rook1" {"A1"}) (place "Knight1" {"B1"}) (place "Elephant1" {"C1"}) (place "King_noCross1" coord:"D1") (place "Rook3" {"H1"}) (place "Knight3" {"G1"}) (place "Elephant3" {"F1"}) (place "King_noCross3" coord:"E1") (place "Rook2" {"H8"}) (place "Knight2" {"G8"}) (place "Elephant2" {"F8"}) (place "King_noCross2" coord:"E8") (place "Rook4" {"A8"}) (place "Knight4" {"B8"}) (place "Elephant4" {"C8"}) (place "King_noCross4" coord:"D8") (set Team 1 {P1 P3}) (set Team 2 {P2 P4})}) (play (do (forEach Piece) ifAfterwards:(not (is Threatened (id "King_noCross" Mover))) (then (and {(if (and (is Active P1) (not (is Mover P1))) (if (or (and (is Threatened (id "King_noCross" P1)) (not (can Move (do (and (forEach Piece P1) (set NextPlayer (player 1))) ifAfterwards:(not (is Threatened (id "King_noCross" P1))))))) (equals (where (id "King_noCross" P1)) -1)) (forEach Site (sites Occupied by:P1) (remove (site))))) (if (and (is Active P2) (not (is Mover P2))) (if (or (and (is Threatened (id "King_noCross" P2)) (not (can Move (do (and (forEach Piece P2) (set NextPlayer (player 2))) ifAfterwards:(not (is Threatened (id "King_noCross" P2))))))) (equals (where (id "King_noCross" P2)) -1)) (forEach Site (sites Occupied by:P2) (remove (site))))) (if (and (is Active P3) (not (is Mover P3))) (if (or (and (is Threatened (id "King_noCross" P3)) (not (can Move (do (and (forEach Piece P3) (set NextPlayer (player 3))) ifAfterwards:(not (is Threatened (id "King_noCross" P3))))))) (equals (where (id "King_noCross" P3)) -1)) (forEach Site (sites Occupied by:P3) (remove (site))))) (if (and (is Active P4) (not (is Mover P4))) (if (or (and (is Threatened (id "King_noCross" P4)) (not (can Move (do (and (forEach Piece P4) (set NextPlayer (player 4))) ifAfterwards:(not (is Threatened (id "King_noCross" P4))))))) (equals (where (id "King_noCross" P4)) -1)) (forEach Site (sites Occupied by:P4) (remove (site)))))})))) (end {(forEach NonMover if:(equals (where "King_noCross" Player) -1) (result Player Loss)) (if (and {(no Pieces Enemy "Pawn") (no Pieces Enemy "Knight") (no Pieces Enemy "Elephant") (no Pieces Enemy "Rook")}) (result TeamMover Win))}))) 
