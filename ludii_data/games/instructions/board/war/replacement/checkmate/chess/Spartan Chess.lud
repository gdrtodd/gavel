<b>The Pieces</b> - <i>White</i> (the Persians) has orthodox chess pieces in standard spaces: 2 Rooks (A1, H1); 2 Knights (B1, G1); 2 Bishops (C1, F1); 1 Queen (D1); 1 King (E1); 8 Pawns (A2-H2). - <i>Black</i> (the Spartans) has: 2 Lieutenants (A8, H8); 1 General (B8); 1 Warlord (G8); 2 Kings (C8, F8); 2 Captains (D8, E8); 8 Hoplites (A7-H7). <b>The Moves</b> - <i>Pawns</i> can move (but not capture) one space forward. On their first move they can move two spaces forward. They capture one space diagonally forward. There is no en passant rule. - <i>Rooks</i> can move and capture any number of spaces orthogonally. - <i>Bishops</i> can move and capture any number of spaces diagonally. - <i>Knights</i> can move one space orthogonally with one space forward diagonally leaping over intervening pieces and capturing what they land on. - The <i>Queen</i> can move and capture any number of spaces orthogonally or diagonally. - <i>Kings</i> can move and capture one space orthogonally or diagonally. - <i>Lieutenants</i> (shown as crosses) can move and capture diagonally upto two spaces, jumping over any piece if necessary. They can also move (but not capture) one space sideways. - The <i>General</i> (shown as an upside-down rook) can move and capture any number of spaces orthogonally or one space diagonally. - The <i>Warlord</i> (shown as an upside-down bishop) can move and capture any number of spaces diagonally or like a knight. - <i>Captains</i> (shown as squares) can move and capture upto spaces orthogonally and may jump if necessary. - <i>Hoplites</i> (shown as an upside-down pawns) can move (but not capture) one space diagonally forward. On their first move they can move two spaces diagonally forward, jumping if necessary. They capture one space forward. <b>Winning</b> The Spartan and Persian have different victory conditions. <i>Spartan Victory</i>: The Spartan wins when the Persian King is checkmated as in orthodox chess. <i>Persians Victory</i>: The Persian wins once one of the Spartan Kings is captured and the remaining Spartan King is checkmated or when both Spartan Kings are placed under simultaneous attack (duple-check) and neither King can be removed from attack on the next move (Duple-Check and Mate). <b>First Move</b> The Persians, being the aggressors historically and White, always move first. <b>Check Immunity</b> When the Spartan has two Kings in play a Spartan King is immune from check. Thus, the Spartan may move a King onto an enemy attacked square, leave a King under attack or move a piece that would expose a King to attack. <b>Duple-Check & Mate</b> If both Spartan Kings are placed under simultaneous attack this is a form of check called duple-check. It is illegal for the Spartan to make a move that will place both of his Kings underattack. With both Kings under attack, the Spartan loses if on his move he is unable to remove at least one King from attack. In such case the game ends in checkmate. <b>Promotion</b> A hoplite, upon reaching its 8th rank, may promote to any Spartan piece including a King but only if the Spartan has only one king in play. A pawn, upon reaching its 8th rank, may promote to any Persian piece apart from the King. <b>Capturing en passant</b> There is no capturing en passant in Spartan Chess. <b>Castling</b> Spartan Kings may not castle. Persian Kings may castle as normal.
(game "Spartan Chess" (players {(player N) (player S)}) (equipment {(board (square 8)) (piece "Pawn" P1 (or {(if (is In (from) (sites Start (piece (what at:(from))))) (move Hop Forward (between if:(is Empty (between))) (to if:(is Empty (to))))) (move Step Forward (to if:(is Empty (to)))) (move Step (directions {FL FR}) (to if:(is Enemy (who at:(to))) (apply (remove (to)))))} (then (and (if (is In (last To) (sites Mover "Promotion")) (moveAgain)) (set Counter))))) (piece "Hoplite" P2 (or {(if (is In (from) (sites Start (piece (what at:(from))))) (move Hop (directions {FL FR}) (to if:(is Empty (to))))) (move Step (directions {FL FR}) (to if:(is Empty (to)))) (move Step Forward (to if:(is Enemy (who at:(to))) (apply (remove (to)))))} (then (and (if (is In (last To) (sites Mover "Promotion")) (moveAgain)) (set Counter))))) (piece "Rook" P1 (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter)))))) (then (if (equals (state at:(last To)) 1) (set State at:(last To) 0))))) (piece "General" P2 (or (move Slide Orthogonal (to if:(is Enemy (who at:(to))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter))))))) (move Step Diagonal (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter))))))))) (piece "Warlord" P2 (or (move Slide Diagonal (to if:(is Enemy (who at:(to))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter))))))) (move Leap {{F F R F} {F F L F}} (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter))))))))) (piece "Lieutenant" P2 (or {(move Step Diagonal (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter))))))) (move Hop Diagonal (to if:(or (is Enemy (who at:(to))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter))))))) (move Step (directions {W E}) (to if:(is Empty (to))))})) (piece "Captain" P2 (or (move Step Orthogonal (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter))))))) (move Hop Orthogonal (to if:(or (is Enemy (who at:(to))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter))))))))) (piece "King" Each (move Step Adjacent (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter)))))) (then (if (equals (state at:(last To)) 1) (set State at:(last To) 0))))) (piece "Bishop" P1 (move Slide Diagonal (to if:(is Enemy (who at:(to))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter)))))))) (piece "Knight" P1 (move Leap {{F F R F} {F F L F}} (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter)))))))) (piece "Queen" P1 (move Slide (to if:(is Enemy (who at:(to))) (apply (if (is Enemy (who at:(to))) (remove (to) (then (set Counter)))))))) (regions "Promotion" P1 (sites Top)) (regions "Promotion" P2 (sites Bottom))}) (rules (start {(place "Pawn1" (sites Row 1)) (place "Hoplite2" (sites Row 6)) (place "Rook1" {"A1" "H1"} state:1) (place "Knight1" {"B1" "G1"}) (place "Bishop1" {"C1" "F1"}) (place "Queen1" coord:"D1") (place "King1" coord:"E1" state:1) (place "Lieutenant2" {"A8" "H8"}) (place "Warlord2" {"G8"}) (place "General2" {"B8"}) (place "King2" {"C8" "F8"} state:0) (place "Captain2" {"D8" "E8"})}) (play (if (is Prev Mover) (if (equals (mover) (id P1)) (move Promote (last To) (piece {"Queen" "Knight" "Bishop" "Rook"}) Mover) (if (equals 1 (count Sites in:(sites Occupied by:P2 component:"King"))) (move Promote (last To) (piece {"King" "Captain" "General" "Warlord" "Lieutenant"}) Mover) (move Promote (last To) (piece {"Captain" "General" "Warlord" "Lieutenant"}) Mover))) (do (or (forEach Piece) (if (and {(equals (what at:4) (id "King" Mover)) (equals (state at:4) 1) (not (is Threatened (id "King" Mover)))}) (or (if (and (equals (state at:0) 1) (can Move (move Slide (from 0) E (between (exact 3) if:(is Empty (to)))))) (move Slide (from 4) W (between (exact 2) if:(and (is Empty (to)) (not (is Threatened (id "King" Mover) at:(to))))) (then (and (set State at:(last To) 0) (move Slide (from 0) E (between (exact 3) if:True)))))) (if (and (equals (state at:7) 1) (can Move (move Slide (from 7) W (between (exact 2) if:(is Empty (to)))))) (move Slide (from 4) E (between (exact 2) if:(and (is Empty (to)) (not (is Threatened (id "King" Mover) at:(to))))) (then (and (set State at:(last To) 0) (move Slide (from 7) W (between (exact 2) if:True))))))))) ifAfterwards:(not (all Sites (sites Occupied by:Mover component:"King") if:(is Threatened at:(site))))))) (end {(if (and (all Sites (sites Occupied by:Next component:"King") if:(is Threatened at:(site))) (not (can Move (do (forEach Piece Next) ifAfterwards:(not (all Sites (sites Occupied by:Next component:"King") if:(is Threatened at:(site)))))))) (result Mover Win)) (if (or (no Moves Mover) (equals (counter) 100)) (result Mover Draw))}))) 
