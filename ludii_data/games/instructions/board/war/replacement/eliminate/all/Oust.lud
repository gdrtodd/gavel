Oust is a game for two players, played on a hexagonally patterned board which is initially empty. The two players, Black and White, take turns placing stones of their color onto unoccupied cells on the board. A group is a set of interconnected, like-colored stones. A group can be a singleton, a single stone which is not connected to any other stones of its color. A group includes all the stones of its own color connected to it. There are two types of moves - non-capturing placements and capturing placements. Non-capturing placements either forms no connections (adjacencies) with any stones, or forms one or more connections with only enemy stones. A non-capturing placement does not form any connection with stones of its own color. Making a non-capturing placement concludes your turn. When you place a stone which forms one or more connections with your own groups, you will create a new, larger group of your own stones. You can only make such a placement if said new group will have one or more connections with enemy groups upon its creation and if all said enemy groups are smaller than said new group. Upon making such a placement, all said enemy groups are removed from the board. After capturing one or more enemy groups and while it is still your turn, you must continue to add stones until you make a non-capturing placement, at which time your turn is concluded. If you have a placement available on your turn you must make one. If you don't have any placements available, you must pass your turn. There will always be a placement available for at least one player. You win by making a placement which captures all of the enemy stones on the board. The game is played on a size 7 board
(game "Oust" (players 2) (equipment {(board (hex 7)) (piece "Disc" Each)}) (rules (play (or (move Add (to (sites Empty) if:(equals 0 (count Sites in:(sites Around (to) Own))))) (do (move Add (to (sites Empty) if:(lt 0 (count Sites in:(sites Around (to) Own))))) ifAfterwards:(and (all Sites (sites Around (sites Group at:(last To)) Enemy) if:(gt (size Group at:(last To)) (size Group at:(site)))) (lt 0 (count Sites in:(sites Around (sites Group at:(last To)) Enemy)))) (then (and (forEach Site (sites Around (sites Group at:(last To)) Enemy) (remove (sites Group at:(site)))) (moveAgain)))))) (end (if (and (lt 2 (count Moves)) (equals 0 (count Sites in:(sites Occupied by:Enemy)))) (result Mover Win))))) 
