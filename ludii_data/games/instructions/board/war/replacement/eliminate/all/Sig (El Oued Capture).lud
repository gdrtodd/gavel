3x6 board. Six pieces per player, which begin one in each space in the row closest to the player. Six sticks, used as dice. One side is polished, and the other is rough. The value of a throw is equal to the number of polished sides which land face up. A throw of sig (five polished or five rough sides up) must be made to move a piece that has not yet been moved; a throw of sig moves it 1 and grants the player another throw. If six polished sides up are thrown, the player gets another throw. If this throw is a sig, the player's throw = 7 and the player may either free the first piece and move it seven spaces or free all six pieces, moving them each one, and moving the first piece the remaining one space. Also, if the player throws six rough sides on their first turn, they get three extra throws. If any of these three throws is a sig, the value of the throw = 13, and the player may free the first piece and move it thirteen spaces, or free all of the player's pieces, moving them each one space, and then moving the first piece the remainder of the spaces. Pieces move from left to right in the player's home row, right to left in the central row, left to right in the opponent's home row, right to left in the central row, and then left to right in the player's home row. When a player's piece lands on a space occupied by an opponent's piece, the opponent's piece is captured. The player who captures all of their opponent's pieces wins.
(game "Sig (El Oued Capture)" (players 2) (equipment {(board (rectangle 3 6) {(track "Track1" "0,E,N1,W,N1,E,S1,W" loop:True P1) (track "Track2" "17,W,S1,E,S1,W,N1,E" P2 directed:True)}) (piece "Marker" Each) (hand Each) (dice d:2 from:0 num:6) (map "ExtraThrow" {(pair 0 3) (pair 1 1) (pair 2 0) (pair 3 0) (pair 4 0) (pair 5 1) (pair 6 1)})}) (rules (start {(place "Marker1" (sites Bottom)) (place "Marker2" (sites Top))}) (play (do (roll) next:(priority (forEach Piece (move (from (from) if:(and (not (equals (state at:(from)) 1)) (or (or (equals 1 (count Pips)) (equals 5 (count Pips))) (equals 1 (var "SpecialSig"))))) (to (trackSite Move steps:1) if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (and (set State at:(last To) 1) (if (equals 1 (var "SpecialSig")) (and {(moveAgain) (set Var (add (var) 1))})))))) (forEach Piece (move (from (from) if:(equals (state at:(from)) 1)) (to (trackSite Move steps:(if (equals 1 (var "SpecialSig")) (add 1 (count Pips)) (count Pips))) if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (remove (to)))))))) (then (if (notEqual 0 (mapEntry "ExtraThrow" (count Pips))) (and (if (equals 3 (mapEntry "ExtraThrow" (count Pips))) (if (le (var) 0) (set Var 2))) (if (notEqual (mover) (prev)) (and (moveAgain) (if (notEqual 1 (count Pips)) (set Var "SpecialSig" 1))))) (if (gt (var) 0) (and {(set Var (sub (var) 1)) (moveAgain)}) (set Var "SpecialSig" 0)))))) (end (if (no Pieces Next) (result Next Loss))))) 
