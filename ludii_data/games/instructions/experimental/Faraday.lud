Goal: End the game with the highest scoring group. A group scores one point for each stone it contains. Definitions: A group, as in Go, is every stone that can be reached from a selected stone through a series of adjacent stones of the same color. Play: Start with a pie offer of 1 to 3 stones of any color combination. (Player 1 does this by making 3 placements, or passes; after which Player 2 may choose to play, or to have the pieces exchanged with the opposite colors) Turns alternate. On a turn, a player places a series of stones, one at a time, (as described below) until no more placements are possible, and then passes. Order of placement matters. Placements are made to empty cells that: -- 1) have more neighbors that are oppositely charged than similarly charged, or -- 2) have 3 or more oppositely charged neighbors. The game ends when neither player can play. The largest group for each player is then scored. In case of a tie the last to place a stone loses. Variants: Exception for Surplus Charge Immediately after placing to a cell with 4 or more oppositely charged neighbors, the player MUST, if possible, place the next stone on an otherwise unplayable empty cell with an equal number of both types of charge around it. Hex Grid - Standard Order 6 board Largest orthogonal group scores 1 point per piece.
(game "Faraday" (players 2) (equipment {(board (tri Hexagon 6) use:Vertex) (piece "Ball" P1) (piece "Ball" P2)}) (rules (meta (no Repeat Positional)) (start (set Score Each 0)) phases:{(phase "Pie" (play (if (is Mover P1) (or {(move Add (piece (mover)) (to (sites Empty))) (move Add (piece (next)) (to (sites Empty))) (move Pass)} (then (if (lt 0 (counter)) (set NextPlayer (player (next))) (moveAgain)))) (or (move Propose "Accept Pie Offer and Move" (then (set NextPlayer (player (mover))))) (move Propose "Swap Pieces" (then (do (forEach Site (sites Occupied by:Mover) (remember Value (site))) next:(forEach Site (sites Occupied by:Next) (and (remove (site)) (add (piece (mover)) (to (site))))) (then (forEach Value (values Remembered) (and (remove (value)) (add (piece (next)) (to (value)))) (then (and (forget Value All) (set NextPlayer (player (next))))))))))))) (nextPhase (or (is Proposed "Swap Pieces") (is Proposed "Accept Pie Offer and Move")) "Placement")) (phase "Placement" (play (move Add (piece (mover)) (to (sites Empty) if:(or (le 3 (count Pieces Next in:(sites Around (to) Orthogonal))) (lt 0 (sub (count Pieces Next in:(sites Around (to) Orthogonal)) (count Pieces Mover in:(sites Around (to) Orthogonal)))))) (then (and {(set Score Mover (max (sizes Group Orthogonal Mover))) (set Var "Last2Move" (mover)) (if (not (no Moves Mover)) (moveAgain))})))) (end (if (all Passed) {(if (notEqual (score Mover) (score Next)) (byScore)) (if (and (equals (score Mover) (score Next)) (equals (var "Last2Move") (mover))) (result Mover Loss)) (if (and (equals (score Mover) (score Next)) (notEqual (var "Last2Move") (mover))) (result Mover Loss))} (byScore))))})) 
