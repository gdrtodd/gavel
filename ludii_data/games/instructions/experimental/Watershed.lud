Goal: Score the most points: -- One point for each stone in one's largest group. -- Bonus points are also awarded for certain captured stones. The board starts empty. Players take alternating turns placing one of their stones onto an empty site. Directly after placement, every site of the board must remain connected to an empty perimeter site via a continuous path of empty sites, and the stone that was placed must be next to any 2 empty sites. Capture After placement, simultaneously remove all the stones adjacent to the placed stone that are no longer next to 2 empty sites. There is no passing. The game ends when no more placements can be made. Ties are broken in favor of the underdog by compairing cascading largest groups (excluding tied pairs) Tie breaker scores are negative, so largest group LOSES. Plateau version (mauve background): Connection to the edge is by omni-directional steps. Stone groups are orthogonal only. Players score one point for every stone in their largest group, plus a bonus point for each captured opponent's stone. The player with the higher score wins. Floodplain version (green background): Connection to the edge is by orthogonal steps. Stone groups are omni-directional adjacent. Players score one point for every stone in their largest group, plus a bonus point for each of their stones that the opponent removed from the board. The player with the higher score wins. Order 9 board Watershed Plateau: Omni-Square Grid - Orthogonal group scoring, Bonus for opponent's capured, Largest group loses a tie.
(game "Watershed" (players 2) (equipment {(board (square 9) use:Vertex) (piece "Ball" Each) (piece "Disc" Each) (hand Each size:1)}) (rules (start (set Score Each 0)) (play (do (move Add (to (sites Empty) if:(lt 1 (count Sites in:(intersection (sites Around (to) All) (sites Empty)))))) ifAfterwards:(all Sites (intersection (sites Around (last To) All) (sites Empty)) if:(or (and (is Empty (site)) (is In (site) (sites Outer))) (notEqual 1000000000 (count Steps (step All (to if:(is Empty (to)))) (site) (difference (sites Outer) (site)))))) (then (do (forEach Value (array (intersection (sites Occupied by:All) (sites Around (last To) All))) (if (gt 2 (count Sites in:(sites Around (value) All if:(is Empty (to))))) (if (is Next (who at:(value))) (remove (value) (then (if (is Empty (handSite Mover)) (add (piece (id "Disc" Next)) (to (handSite Mover)) (then (set Value at:(handSite Mover) (add 1 (value Piece at:(handSite Mover)))))) (set Value at:(handSite Mover) (add 1 (value Piece at:(handSite Mover))))))) (remove (value))))) next:(set Var "MoverScore" (add (value Piece at:(handSite Mover)) (max 0 (max (sizes Group Orthogonal Mover)))) (then (set Var "NextScore" (add (value Piece at:(handSite Next)) (max 0 (max (sizes Group Orthogonal Next)))) (then (if (equals (var "MoverScore") (var "NextScore")) (and (set Score Mover (mul -1 (max 0 (max (difference (sizes Group Orthogonal Mover) (sizes Group Orthogonal Next)))))) (set Score Next (mul -1 (max 0 (max (difference (sizes Group Orthogonal Next) (sizes Group Orthogonal Mover))))))) (and (set Score Mover (var "MoverScore")) (set Score Next (var "NextScore")))))))))))) (end (if (no Moves Next) {(if (equals (score Mover) (score Next)) (result Mover Win)) (if (notEqual (score Mover) (score Next)) (byScore))})))) 
