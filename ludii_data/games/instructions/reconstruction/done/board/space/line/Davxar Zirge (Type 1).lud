The game Davxar Zirge (Type 1) is played by two players on a noshape board with nobasis tiling. All players play with Markers. Rules for Pieces: Markers step adjacent. Players take turns moving. Rules: If in the same turn, remove pieces at not if a player places 4 [Lgame.functions.ints.IntFunction;@68c9d179 pieces in an north direction line then a player places 4 of their pieces in an north direction line else a player places 3 of their pieces in an north direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@d554c5f pieces in an ne direction line then a player places 4 of their pieces in an ne direction line else a player places 3 of their pieces in an ne direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@2dfaea86 pieces in an east direction line then a player places 4 of their pieces in an east direction line else a player places 3 of their pieces in an east direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@15888343 pieces in an se direction line then a player places 4 of their pieces in an se direction line else a player places 3 of their pieces in an se direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@33ecda92 pieces in an south direction line then a player places 4 of their pieces in an south direction line else a player places 3 of their pieces in an south direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@14fc5f04 pieces in an sw direction line then a player places 4 of their pieces in an sw direction line else a player places 3 of their pieces in an sw direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@6e2829c7 pieces in an west direction line then a player places 4 of their pieces in an west direction line else a player places 3 of their pieces in an west direction line or if a player places 4 [Lgame.functions.ints.IntFunction;@3feb2dda pieces in an nw direction line then a player places 4 of their pieces in an nw direction line else a player places 3 of their pieces in an nw direction line sites occupied by any component owned by Next in Board, else from vertex in Player the moving player's hand site 0 to vertex in the set of empty vertexs moveRule: true then if if a player places 4 [Lgame.functions.ints.IntFunction;@6a8658ff pieces in an north direction line then a player places 4 of their pieces in an north direction line else a player places 3 of their pieces in an north direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@1c742ed4 pieces in an ne direction line then a player places 4 of their pieces in an ne direction line else a player places 3 of their pieces in an ne direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@333d4a8c pieces in an east direction line then a player places 4 of their pieces in an east direction line else a player places 3 of their pieces in an east direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@55de24cc pieces in an se direction line then a player places 4 of their pieces in an se direction line else a player places 3 of their pieces in an se direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@dc7df28 pieces in an south direction line then a player places 4 of their pieces in an south direction line else a player places 3 of their pieces in an south direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@30f842ca pieces in an sw direction line then a player places 4 of their pieces in an sw direction line else a player places 3 of their pieces in an sw direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@69c81773 pieces in an west direction line then a player places 4 of their pieces in an west direction line else a player places 3 of their pieces in an west direction line or if a player places 4 [Lgame.functions.ints.IntFunction;@4d14b6c2 pieces in an nw direction line then a player places 4 of their pieces in an nw direction line else a player places 3 of their pieces in an nw direction line, move again if in the same turn, remove pieces at not if a player places 4 [Lgame.functions.ints.IntFunction;@7e990ed7 pieces in an north direction line then a player places 4 of their pieces in an north direction line else a player places 3 of their pieces in an north direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@c05fddc pieces in an ne direction line then a player places 4 of their pieces in an ne direction line else a player places 3 of their pieces in an ne direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@25df00a0 pieces in an east direction line then a player places 4 of their pieces in an east direction line else a player places 3 of their pieces in an east direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@4d15107f pieces in an se direction line then a player places 4 of their pieces in an se direction line else a player places 3 of their pieces in an se direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@7b4c50bc pieces in an south direction line then a player places 4 of their pieces in an south direction line else a player places 3 of their pieces in an south direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@5884a914 pieces in an sw direction line then a player places 4 of their pieces in an sw direction line else a player places 3 of their pieces in an sw direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@50378a4 pieces in an west direction line then a player places 4 of their pieces in an west direction line else a player places 3 of their pieces in an west direction line or if a player places 4 [Lgame.functions.ints.IntFunction;@60f00693 pieces in an nw direction line then a player places 4 of their pieces in an nw direction line else a player places 3 of their pieces in an nw direction line sites occupied by any component owned by Next in Board, else move one of your pieces. Aim: If there are no pieces owned by Player the next player, the next player loses. The Davxar Zirge (Type 1) (Ludii 1) ruleset.
(game "Davxar Zirge (Type 1)" (players 2) (equipment {(board (add (concentric Square rings:4 joinCorners:True) edges:{{14 20} {20 24} {24 22} {22 17} {17 11} {11 7} {7 9} {9 14} {6 4} {4 8} {5 1} {1 3} {23 27} {27 25} {26 30} {30 28}}) use:Vertex) (hand Each) (piece "Marker" Each (move Step (to if:(is Empty (to)))))}) (rules (start (place "Marker" "Hand" count:11)) phases:{(phase "Placement" (play (if (is Prev Mover) (move Remove (forEach (sites Occupied by:Next container:"Board") if:(not (or {(if (is Line 4 N through:(site) whats:{0 1 2}) (is Line 4 N through:(site) exact:True) (is Line 3 N through:(site) exact:True)) (if (is Line 4 NE through:(site) whats:{0 1 2}) (is Line 4 NE through:(site) exact:True) (is Line 3 NE through:(site) exact:True)) (if (is Line 4 E through:(site) whats:{0 1 2}) (is Line 4 E through:(site) exact:True) (is Line 3 E through:(site) exact:True)) (if (is Line 4 SE through:(site) whats:{0 1 2}) (is Line 4 SE through:(site) exact:True) (is Line 3 SE through:(site) exact:True)) (if (is Line 4 S through:(site) whats:{0 1 2}) (is Line 4 S through:(site) exact:True) (is Line 3 S through:(site) exact:True)) (if (is Line 4 SW through:(site) whats:{0 1 2}) (is Line 4 SW through:(site) exact:True) (is Line 3 SW through:(site) exact:True)) (if (is Line 4 W through:(site) whats:{0 1 2}) (is Line 4 W through:(site) exact:True) (is Line 3 W through:(site) exact:True)) (if (is Line 4 NW through:(site) whats:{0 1 2}) (is Line 4 NW through:(site) exact:True) (is Line 3 NW through:(site) exact:True))})))) (move (from (handSite Mover)) (to (sites Empty)) (then (if (or {(if (is Line 4 N whats:{0 1 2}) (is Line 4 N exact:True) (is Line 3 N exact:True)) (if (is Line 4 NE whats:{0 1 2}) (is Line 4 NE exact:True) (is Line 3 NE exact:True)) (if (is Line 4 E whats:{0 1 2}) (is Line 4 E exact:True) (is Line 3 E exact:True)) (if (is Line 4 SE whats:{0 1 2}) (is Line 4 SE exact:True) (is Line 3 SE exact:True)) (if (is Line 4 S whats:{0 1 2}) (is Line 4 S exact:True) (is Line 3 S exact:True)) (if (is Line 4 SW whats:{0 1 2}) (is Line 4 SW exact:True) (is Line 3 SW exact:True)) (if (is Line 4 W whats:{0 1 2}) (is Line 4 W exact:True) (is Line 3 W exact:True)) (if (is Line 4 NW whats:{0 1 2}) (is Line 4 NW exact:True) (is Line 3 NW exact:True))}) (moveAgain)))))) (nextPhase Mover (all Sites (sites Hand Mover) if:(equals 0 (count Cell at:(site)))) "Movement")) (phase "Movement" (play (if (is Prev Mover) (move Remove (forEach (sites Occupied by:Next container:"Board") if:(not (or {(if (is Line 4 N through:(site) whats:{0 1 2}) (is Line 4 N through:(site) exact:True) (is Line 3 N through:(site) exact:True)) (if (is Line 4 NE through:(site) whats:{0 1 2}) (is Line 4 NE through:(site) exact:True) (is Line 3 NE through:(site) exact:True)) (if (is Line 4 E through:(site) whats:{0 1 2}) (is Line 4 E through:(site) exact:True) (is Line 3 E through:(site) exact:True)) (if (is Line 4 SE through:(site) whats:{0 1 2}) (is Line 4 SE through:(site) exact:True) (is Line 3 SE through:(site) exact:True)) (if (is Line 4 S through:(site) whats:{0 1 2}) (is Line 4 S through:(site) exact:True) (is Line 3 S through:(site) exact:True)) (if (is Line 4 SW through:(site) whats:{0 1 2}) (is Line 4 SW through:(site) exact:True) (is Line 3 SW through:(site) exact:True)) (if (is Line 4 W through:(site) whats:{0 1 2}) (is Line 4 W through:(site) exact:True) (is Line 3 W through:(site) exact:True)) (if (is Line 4 NW through:(site) whats:{0 1 2}) (is Line 4 NW through:(site) exact:True) (is Line 3 NW through:(site) exact:True))})))) (forEach Piece (then (if (or {(if (is Line 4 N whats:{0 1 2}) (is Line 4 N exact:True) (is Line 3 N exact:True)) (if (is Line 4 NE whats:{0 1 2}) (is Line 4 NE exact:True) (is Line 3 NE exact:True)) (if (is Line 4 E whats:{0 1 2}) (is Line 4 E exact:True) (is Line 3 E exact:True)) (if (is Line 4 SE whats:{0 1 2}) (is Line 4 SE exact:True) (is Line 3 SE exact:True)) (if (is Line 4 S whats:{0 1 2}) (is Line 4 S exact:True) (is Line 3 S exact:True)) (if (is Line 4 SW whats:{0 1 2}) (is Line 4 SW exact:True) (is Line 3 SW exact:True)) (if (is Line 4 W whats:{0 1 2}) (is Line 4 W exact:True) (is Line 3 W exact:True)) (if (is Line 4 NW whats:{0 1 2}) (is Line 4 NW exact:True) (is Line 3 NW exact:True))}) (moveAgain)))))))} (end (if (no Pieces Next) (result Next Loss))))) 
