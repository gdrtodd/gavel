(define "RemoveAllTigersWithNoMove"
    (then 
        (forEach Site
            (sites Occupied by:Next)
            (if
                (not 
                    (can Move 
                        (or
                            (step (from (site)) Orthogonal (to if:(is Empty (to))))
                            (hop 
                                (from (site))
                                Orthogonal
                                (between 
                                    if:(= (who at:(between)) P1) 
                                    (apply (remove (between)))
                                )
                                (to if:(is Empty (to)))
                            )
                        )
                    )
                )
                (remove (site))
            )
        )
    )		
)

(define "MinDistanceWithCorners" 
    (min 
        (results 
            from:(last To)
            to:(sites Corners)
            (count Steps (from) (to))
        )
    )
)

(game "Len Cua Kin Ngoa" 
    (players 2) 
    (equipment { 
        (board (square 4))
        (hand P1)
        (piece "Ox" P1 (or ("HopDiagonalCapture") "StepOrthogonalToEmpty"))
        (piece "Tiger" P2 (or ("HopOrthogonalCapture") "StepOrthogonalToEmpty")) 
    }) 
    (rules 
        (start { 
            (place "Ox1" (handSite P1) count:12)
            (place "Tiger2" (sites Corners))
        })
        
        phases:{ 
        (phase "Placement" P1 
            (play 
                (move 
                    (from (handSite P1)) 
                    (to (sites Empty))
                    ("RemoveAllTigersWithNoMove")
                )
            ) 
            (nextPhase ("HandEmpty" P1) "MovementP1")
        )
        (phase "MovementP1" P1
            (play 
                (forEach Piece ("RemoveAllTigersWithNoMove"))
            )
        )
        (phase "FirstTigerMovement" P2 
            (play 
                (forEach Piece
                    (if (= 
                            (count Steps (from) (last To))
                            ("MinDistanceWithCorners")
                        )
                        (or ("HopOrthogonalCapture") "StepToEmpty")
                    )
                )
            )
            (nextPhase Mover "MovementP2")
        )
        (phase "MovementP2" P2
            (play 
                (forEach Piece)
            )
        )
        }
        
        (end {
            (if (no Pieces P1) (result P2 Win))
            (if (>= 2 (count Pieces P2)) (result P1 Win))
        }) 
    )
)

