(define "MoveTo" ("NextSiteOnTrack" (count Pips)))
(define "HasToPlay" (!= 0 (count Sites in:(sites (values Remembered "Throws")))))
(define "RemovePiece" (move Remove (from)))

(define "HoundsAndJackalsParallelConnection"
    (graph
        vertices:{ 
        { 9 27} { 9 24} { 9 21} { 9 18} { 9 15} { 9 12} { 9 9} { 9 6} 
        { 9 3} { 9 0} { 3 0} { 3 2} { 3 4} { 3 6} { 3 8} { 3 10} 
        { 3 12} { 3 14} { 3 16} { 3 18} { 3 20} { 3 22} { 3 24} { 3 26} 
        { 3 28} { 4 30} { 6 31} { 8 32} {10 33} {15 27} {15 24} {15 21} 
        {15 18} {15 15} {15 12} {15 9} {15 6} {15 3} {15 0} {21 0} 
        {21 2} {21 4} {21 6} {21 8} {21 10} {21 12} {21 14} {21 16} 
        {21 18} {21 20} {21 22} {21 24} {21 26} {21 28} {20 30} {18 31}
        {16 32} {14 33} {12 33}
        }
        edges:{ 
        { 0 1} { 1 2} { 2 3} { 3 4} { 4 5} { 5 6} { 6 7} { 7 8} 
        { 8 9} { 9 10} {10 11} {11 12} {12 13} {13 14} {14 15} {15 16} 
        {16 17} {17 18} {18 19} {19 20} {20 21} {21 22} {22 23} {23 24} 
        {24 25} {25 26} {26 27} {27 28} {28 58} {29 30} {30 31} {31 32} 
        {32 33} {33 34} {34 35} {35 36} {36 37} {37 38} {38 39} {39 40} 
        {40 41} {41 42} {42 43} {43 44} {44 45} {45 46} {46 47} {47 48} 
        {48 49} {49 50} {50 51} {51 52} {52 53} {53 54} {54 55} {55 56} 
        {56 57} {57 58}
        } 
    )
)

(define "HoundsAndJackalsMarked"
    (graph
        vertices:{ 
        { 7 26} { 8 23} { 8.3 21} { 8.3 19} { 8.5 17} 
        { 8.4 14.5} { 8.5 12} { 8.6 9.5} { 8.6 7} { 8.6 4.5} 
        { 8.8 2} { 8.9 1} { 8 0} { 7 0.5} { 6 2} { 5 4.6} 
        { 5.1 7} { 5 8.5} { 5.1 10} { 5.1 12.5} { 5 15} { 5.2 17} { 5.4 19} { 5.6 21} 
        { 5 24} { 4 27} { 5 29} { 6 30} {8 31} 
        
        {17 26} {16 23} {15.7 21} {15.7 19} {15.5 17} 
        {15.6 14.5} {15.5 12} {15.4 9.5} {15.4 7} {15.4 4.5}
        {15.2 2} {15.1 1} {16 0} {17 0.5} {18 2} {19 4.6}
        {18.9 7} {19 8.5} {18.9 10} {18.9 12.5} {19.5 16} {19.6 18.5} {19.6 21} {19.8 23.5} 
        {20 27} {19 30} {18 31} {16 31.5} {14 32} 
        
        {12 31}
        }
        edges:{ 
        { 0 1} { 1 2} { 2 3} { 3 4} { 4 5} { 5 6} { 6 7} { 7 8} 
        { 8 9} { 9 10} {10 11} {11 12} {12 13} {13 14} {14 15} {15 16} 
        {16 17} {17 18} {18 19} {19 20} {20 21} {21 22} {22 23} {23 24} 
        {24 25} {25 26} {26 27} {27 28} {28 58} {29 30} {30 31} {31 32} 
        {32 33} {33 34} {34 35} {35 36} {36 37} {37 38} {38 39} {39 40} 
        {40 41} {41 42} {42 43} {43 44} {44 45} {45 46} {46 47} {47 48} 
        {48 49} {49 50} {50 51} {51 52} {52 53} {53 54} {54 55} {55 56} 
        {56 57} {57 58}
        } 
    )
)

(define "HoundsAndJackalsCrossoverOne"
    (graph
        vertices:{ 
        { 9 27} { 9 24} { 9 21} { 9 18} { 9 15} { 9 12} { 9 9} { 9 6} 
        { 9 3} { 9 0} { 3 0} { 3 2} { 3 4} { 3 6} { 3 8} { 3 10} 
        { 3 12} { 3 14} { 3 16} { 3 18} { 3 20} { 3 22} { 3 24} { 3 26} 
        { 3 28} { 4 30} { 6 31} { 8 32} {10 33} {15 27} {15 24} {15 21} 
        {15 18} {15 15} {15 12} {15 9} {15 6} {15 3} {15 0} {21 0} 
        {21 2} {21 4} {21 6} {21 8} {21 10} {21 12} {21 14} {21 16} 
        {21 18} {21 20} {21 22} {21 24} {21 26} {21 28} {20 30} {18 31}
        {16 32} {14 33} 
        
        {12 33}
        }
        edges:{ 
        { 0 1} { 1 2} { 2 3} { 3 4} { 4 5} { 5 6} { 6 7} { 7 8} 
        { 8 9} { 9 10} {10 11} {11 12} {12 13} {13 14} {14 15} {15 16} 
        {16 17} {17 18} {18 19} {19 20} {20 21} {21 22} {22 23} {23 24} 
        {24 25} {25 26} {26 27} {27 28} {28 58} {29 30} {30 31} {31 32} 
        {32 33} {33 34} {34 35} {35 36} {36 37} {37 38} {38 39} {39 40} 
        {40 41} {41 42} {42 43} {43 44} {44 45} {45 46} {46 47} {47 48} 
        {48 49} {49 50} {50 51} {51 52} {52 53} {53 54} {54 55} {55 56} 
        {56 57} {57 58}
        } 
    )
)

(define "HoundsAndJackalsCrossoverTwo"
    (graph
        vertices:{ 
        { 9 27} { 9 24} { 9 21} { 9 18} { 9 15} { 9 12} { 9 9} { 9 6} 
        { 9 3} { 9 0} 
        { 3 0} { 3.75 2} { 4.5 4} {5.25 6} {6 8} {6.75 10} {7.5 12}
        {7.5 14} {6.75 16} {6 18} {5.25 20} {4.5 22} {3.75 24} { 3 26} 
        { 3 28} { 4 30} { 6 31} { 8 32} {10 33} {15 27} {15 24} {15 21} 
        {15 18} {15 15} {15 12} {15 9} {15 6} {15 3} {15 0}
        {21 0} 
        {20.25 2} {19.5 4} {18.75 6} {18 8} {17.25 10} {16.5 12} {16.5 14} {17.25 16} 
        {18 18} {18.75 20} {19.5 22} {20.25 24} {21 26} {21 28} {20 30} {18 31}
        {16 32} {14 33} 
        
        {12 33}
        }
        edges:{ 
        { 0 1} { 1 2} { 2 3} { 3 4} { 4 5} { 5 6} { 6 7} { 7 8} 
        { 8 9} { 9 10} {10 11} {11 12} {12 13} {13 14} {14 15} {15 16} 
        {16 17} {17 18} {18 19} {19 20} {20 21} {21 22} {22 23} {23 24} 
        {24 25} {25 26} {26 27} {27 28} {28 58} {29 30} {30 31} {31 32} 
        {32 33} {33 34} {34 35} {35 36} {36 37} {37 38} {38 39} {39 40} 
        {40 41} {41 42} {42 43} {43 44} {44 45} {45 46} {46 47} {47 48} 
        {48 49} {49 50} {50 51} {51 52} {52 53} {53 54} {54 55} {55 56} 
        {56 57} {57 58}
        } 
    )
)

(define "HoundsAndJackalsCrossoverThree"
    (graph
        vertices:{ 
        { 9 27} { 9 25} { 9 23} { 9 21} { 9 19} { 9 15} { 9 12} { 9 9} 
        { 9 6} { 9 3}  { 9 0}
        { 7 1} { 5 2.5} {4 5} {4 7} {4 9} {4 11}
        {4 13} {4 15} {4 19} {4.2 21} {4.3 22.5} {4.4 24} {4.6 25.5} 
        {4.8 27} { 6 28} { 7 29} { 8 30} {9 31}
        {15 27} {15 25} {15 23} 
        {15 21} {15 19} {15 15} {15 12} {15 9} {15 6} {15 3}
        {15 0} 
        {17 1} {19 2.5} {20 5} {20 7} {20 9} {20 11} {20 13} {20 15} 
        {19.8 19} {19.7 21} {19.6 22.5} {19.4 24} {19.2 25.5} {19 27} {18 28} {17 29}
        {16 30} {15 31} 
        
        {12 33}
        }
        edges:{ 
        { 0 1} { 1 2} { 2 3} { 3 4} { 4 5} { 5 6} { 6 7} { 7 8} 
        { 8 9} { 9 10} {10 11} {11 12} {12 13} {13 14} {14 15} {15 16} 
        {16 17} {17 18} {18 19} {19 20} {20 21} {21 22} {22 23} {23 24} 
        {24 25} {25 26} {26 27} {27 28} {28 58} {29 30} {30 31} {31 32} 
        {32 33} {33 34} {34 35} {35 36} {36 37} {37 38} {38 39} {39 40} 
        {40 41} {41 42} {42 43} {43 44} {44 45} {45 46} {46 47} {47 48} 
        {48 49} {49 50} {50 51} {51 52} {52 53} {53 54} {54 55} {55 56} 
        {56 57} {57 58}
        } 
    )
)

(define "HoundsAndJackalsCrossoverFour"
    (graph
        vertices:{ 
        { 9 27} { 9 25} { 9 23} { 9 21} { 9 19} { 9 15} { 9 12} { 9 9} 
        { 9 6} { 9 3}  { 9 0}
        { 7 1} { 5 2.5} {4 5} {4 7} {4 9} {4 11}
        {4 13} {4 15} {4 19} {4.2 21} {4.3 22.5} {4.4 24} {4.6 25.5} 
        {4.8 27} { 6 28} { 7 29} { 8 30} {9 31}
        {15 27} {15 25} {15 23} 
        {15 21} {15 19} {15 15} {15 12} {15 9} {15 6} {15 3}
        {15 0} 
        {17 1} {19 2.5} {20 5} {20 7} {20 9} {20 11} {20 13} {20 15} 
        {19.8 19} {19.7 21} {19.6 22.5} {19.4 24} {19.2 25.5} {19 27} {18 28} {17 29}
        {16 30} {15 31} 
        
        {12 33}
        }
        edges:{ 
        { 0 1} { 1 2} { 2 3} { 3 4} { 4 5} { 5 6} { 6 7} { 7 8} 
        { 8 9} { 9 10} {10 11} {11 12} {12 13} {13 14} {14 15} {15 16} 
        {16 17} {17 18} {18 19} {19 20} {20 21} {21 22} {22 23} {23 24} 
        {24 25} {25 26} {26 27} {27 28} {28 58} {29 30} {30 31} {31 32} 
        {32 33} {33 34} {34 35} {35 36} {36 37} {37 38} {38 39} {39 40} 
        {40 41} {41 42} {42 43} {43 44} {44 45} {45 46} {46 47} {47 48} 
        {48 49} {49 50} {50 51} {51 52} {52 53} {53 54} {54 55} {55 56} 
        {56 57} {57 58}
        } 
    )
)

(define "HoundsAndJackalsCrossoverFive"
    (graph
        vertices:{ 
        { 9 27} { 9 24} { 9 21} { 9 18} { 9 15} { 9 12} { 9 9} { 9 6} 
        { 9 3} { 9 0} { 3 0} { 3 2} { 3 4} { 3 6} { 3 8} { 3 10} 
        { 3 12} { 3 14} { 3 16} { 3 18} { 3 20} { 3 22} { 3 24} { 3 26} 
        { 3 28} { 4 30} { 6 31} { 8 32} {10 33} {15 27} {15 24} {15 21} 
        {15 18} {15 15} {15 12} {15 9} {15 6} {15 3} {15 0} {21 0} 
        {21 2} {21 4} {21 6} {21 8} {21 10} {21 12} {21 14} {21 16} 
        {21 18} {21 20} {21 22} {21 24} {21 26} {21 28} {20 30} {18 31}
        {16 32} {14 33} 
        
        {12 33}
        }
        edges:{ 
        { 0 1} { 1 2} { 2 3} { 3 4} { 4 5} { 5 6} { 6 7} { 7 8} 
        { 8 9} { 9 10} {10 11} {11 12} {12 13} {13 14} {14 15} {15 16} 
        {16 17} {17 18} {18 19} {19 20} {20 21} {21 22} {22 23} {23 24} 
        {24 25} {25 26} {26 27} {27 28} {28 58} {29 30} {30 31} {31 32} 
        {32 33} {33 34} {34 35} {35 36} {36 37} {37 38} {38 39} {39 40} 
        {40 41} {41 42} {42 43} {43 44} {44 45} {45 46} {46 47} {47 48} 
        {48 49} {49 50} {50 51} {51 52} {52 53} {53 54} {54 55} {55 56} 
        {56 57} {57 58}
        } 
    )
)

(game "58 Holes" 
    (players 2) 
    (equipment { 
        
        (board 
            ("HoundsAndJackalsParallelConnection")
            {
            (track "Track1" {59 0..28 58} P1 directed:True)
            (track "Track2" {60 29..58  } P2 directed:True)
            }
            use:Vertex
        )
        
        (hand Each)
        ("StickDice" 4)
        (regions "Replay" {14 24 43 53})
        
        (piece "Marker" Each 
            (if (= "MoveTo" 58)
                "RemovePiece"
                (if ("IsNotOffBoard" "MoveTo") 	 			
                    (if (is Empty "MoveTo")
                        (move 
                            (from) 
                            (to "MoveTo")
                            (then
                                (and
                                    ("ReplayInMovingOn" (sites "Replay"))
                                    ("Teleportation")
                                )
                            )
                        )
                    )
                )
            )
        )
        
        (map {(pair 19 5) (pair 9 7) (pair 48 34) (pair 38 36) })
    }) 
    
    (define "Teleportation"
        (if (!= (last To) (mapEntry (last To)))
            (if (is Empty (mapEntry (last To)))
                (move (from (last To)) (to (mapEntry (last To))))
            )
        )		
    )
    
    (rules 
        (start {
            (place "Marker1" (handSite P1) count:5)
            (place "Marker2" (handSite P2) count:5)
        })
        
        (play ("RollMove" (or (forEach Piece) (forEach Piece container:(mover)))))
        (end ("EscapeWin"))
    )
    
)

