(define "ThrowValue" (mapEntry "Throw" (count Pips)))
(define "SiteToMoveOnTrack" ("NextSiteOnTrack" #2 #1))
(define "IsSpecialThrow" (is In ("ThrowValue") (sites {12 25 11 6})))
(define "Bange" (= ("ThrowValue") 25))
(define "Dust" (= ("ThrowValue") 11))

(define "Move" 
    (or {
        (if (and { 
                (>= 0 (var "EnteredPiece"))
                (is Occupied (handSite Mover)) 
                ("Bange")
            })
            (move
                (from (handSite Mover))
                (to (mapEntry "DefaultEntry" Mover))
                (then (set Var "EnteredPiece" 1))
            )
        )
        (if (and { 
                (>= 0 (var "EnteredPiece"))
                (is Occupied (handSite Mover)) 
                ("Dust")
            })
            (move
                (from (handSite Mover))
                (to (mapEntry "DefaultEntry" Mover))
                (then (set Var "EnteredPiece" 1))
            )
        )
        (if (and { 
                (>= 0 (var "EnteredPiece"))
                (is Occupied (handSite Mover)) 
                ("Dust")
            })
            (move
                (from (handSite Mover))
                (to (mapEntry "XEntry" Mover))
            )
        )
        (forEach Piece)
    })		
)

(game "Bargese" 
    (players 2) 
    (equipment { 
        ("PachisiBoard" 
            {
            (track "Track1" "26,W,S,E,8,S,E,N,11,E,N,W,53,N,W,S,42,W,S1,E7,End" P1 directed:True)
            (track "Track2" "27,E,N,W,53,N,W,S,42,W,S,E,8,S,E,N,11,E,N1,W7,End" P2 directed:True)
            }
        )
        (hand Each) 
        ("StickDice" 6)
        (piece "Pawn" Each
            (if (and {
                    (>= 0 (var "EnteredPiece"))
                    ("IsEndTrack" ("SiteToMoveOnTrack" from:(from) 1)) 
                    (or ("Bange") ("Dust"))
                })
                (move Remove (from) level:(level)
                    (then (set Var "EnteredPiece" 1))
                )
                (if (and 
                        (>= 0 (var "EnteredPiece"))
                        ("IsEndTrack" ("SiteToMoveOnTrack" from:(from) 2)) 
                    )
                    (move
                        (from (from))
                        (to ("SiteToMoveOnTrack" from:(from) 1))
                    )
                    (move 
                        (from (from) level:(level))
                        (to
                            ("SiteToMoveOnTrack" from:(from) (if (< 0 (var "EnteredPiece")) (- ("ThrowValue") 1) ("ThrowValue")))
                            if:(not (and (is In (to) (sites "SafeSites")) ("IsEnemyAt" (to))))
                            ("HittingStackCapture" (handSite (who at:(to) level:(level))))
                        )
                        (then (set Var "EnteredPiece" 0))
                    )
                )
            )		
        )
        (map "Throw" {(pair 0 6) (pair 1 11) (pair 2 2) (pair 3 3) (pair 4 4) (pair 5 25) (pair 6 12)})
        (map "DefaultEntry" {(pair P1 26) (pair P2 27)})
        (map "XEntry" {(pair P1 2) (pair P2 48)})
        (regions "SafeSites" (sites {60 62 16 48 87 89 37 2}))
    }) 
    (rules 
        (start { 
            (place Stack "Pawn1" (handSite P1) count:4)
            (place Stack "Pawn2" (handSite P2) count:4)
        })
        
        (play 
            (do (if (>= 0 (var "EnteredPiece")) (roll))
                next:(if (can Move ("Move")) ("Move") (move Pass (then (set Var "EnteredPiece" 0))))
                (then 
                    (if ("IsSpecialThrow")
                        (moveAgain)
                    )
                )
            )
        )
        
        (end ("EscapeWin"))
    )
)

