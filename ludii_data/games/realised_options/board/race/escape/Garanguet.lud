(define "NextSiteFrom" ("NextSiteOnTrack" (pips) from:#1))

(define "NextSiteFromDistTripleDice" ("NextSiteOnTrack" (/ (count Pips) 3) from:#1))

(define "NextSiteFromDistLower" ("NextSiteOnTrack" ("LowerValue") from:#1))

(define "NextSiteFromDistDouble" ("NextSiteOnTrack" ("DoubleValue") from:#1))

(define "RemoveAPiece" (move Remove (site)))

(define "AllPieceEscaped" (no Pieces Mover))

(define "CanEscape" ("IsOffBoard" #1))

(define "Bar" (mapEntry #1))

(define "UpdateCounterTriplePlay" 
    (if (< (value Player Mover) 8)
        (and 
            (moveAgain) 
            (if (< (value Player Mover) 0)
                (set Value Mover 1)
                (set Value Mover (+ 1 (value Player Mover)))
            )
        )
        (set Value Mover 0)
    )
)

(define "UpdateCounterDoublePlay" 
    (and 
        (if (< (count MovesThisTurn) 4)
            (moveAgain) 
        )
        (if (< (value Player Mover) 3)
            (if (< (value Player Mover) 0)
                (set Value Mover 1)
                (set Value Mover (+ 1 (value Player Mover)))
            )
            (set Value Mover 0)
        )
    )
)

(define "TwoDiceEqualLastLower"
    (or {
        (and (= (face 26) (face 27)) (> (face 26) (face 28)))
        (and (= (face 26) (face 28)) (> (face 26) (face 27)))
        (and (= (face 27) (face 28)) (> (face 27) (face 26)))
    })
)

(define "DoubleValue"
    (if (and (= (face 26) (face 27)) (> (face 26) (face 28)))
        (face 26)
        (if (and (= (face 26) (face 28)) (> (face 26) (face 27)))
            (face 26)
            (face 27)
        )
    )
)

(define "LowerValue"
    (if (and (= (face 26) (face 27)) (> (face 26) (face 28)))
        (face 28)
        (if (and (= (face 26) (face 28)) (> (face 26) (face 27)))
            (face 27)
            (face 26)
        )
    )
)

(define "CanStillPlayDouble" 
    (not 
        (and 
            (= (value Player Mover) 0) 
            (!= (count MovesThisTurn) 0)
        )
    )	
)

(define "CanStillLowerDie" 
    (or 
        (or 
            (= (count MovesThisTurn) (value Player Mover)) 
            (and 
                (= (count MovesThisTurn) 0) 
                (< (value Player Mover) 0)
            )
        )
        (and 
            (!= (count MovesThisTurn) 0) 
            (= (value Player Mover) 0)
        )
    )	
)

(define "CaptureToBar" ("HittingCapture" ("Bar" (next))))

(define "Move"
    (forEach Site
        (sites Occupied by:Mover)
        (if ("CanEscape" #1)
            ("RemoveAPiece")
            (move 
                (from (site))
                (to #1
                    if:("NoEnemyOrOnlyOne" (to))
                    ("CaptureToBar")
                )
            )
        )
        #2
    )		
)

(game "Garanguet" 
    (players 2) 
    (equipment { 
        ("BackgammonBoard" ("BackgammonTracksWithBar"))
        (dice num:3)
        (piece "Disc" Each) 
        (map {(pair 1 6) (pair 2 19)}) 
        (regions "Home" P1 { 7..12 }) 
        (regions "Home" P2 { 20..25 }) 
    })
    
    (rules
        (start { 
            (place Stack "Disc1" 12 count:15)
            (place Stack "Disc2" 25 count:15)
        })
        
        (play 
            ("RollEachNewTurnMove"
                (if (all DiceEqual)
                    ("Move" ("NextSiteFromDistTripleDice" (site)) (then ("UpdateCounterTriplePlay")))
                    (if ("TwoDiceEqualLastLower")
                        (or
                            (if ("CanStillPlayDouble")
                                ("Move" ("NextSiteFromDistDouble" (site)) (then ("UpdateCounterDoublePlay")))
                            )
                            (if ("CanStillLowerDie")
                                ("Move" ("NextSiteFromDistLower" (site)) 
                                    (then 
                                        (if 
                                            (< (count MovesThisTurn) 4) 
                                            (moveAgain) 
                                            (set Value Mover 0) 
                                        )
                                    )		
                                )
                            )
                        )
                        (forEach Die
                            if:("DieNotUsed")
                            ("Move" ("NextSiteFrom" (site)) (then ("ReplayNotAllDiceUsed")))
                        )
                    )
                )
            )
        )
        
        (end 
            (if ("AllPieceEscaped")
                (result Mover Win)
            )
        )
    )
)

