(define "NextSiteFrom" ("NextSiteOnTrack" #2 from:#1))

(define "DoubleDieValue" (face 28))

(define "MoveOppositeDice" 
    (forEach Value (values Remembered "Opposite")
        (if ("IsOffBoard" ("NextSiteFrom" (from) (value)))
            (move Remove (from))
            (move 
                (from (from))
                (to 
                    ("NextSiteFrom" (from) (value))
                    if:("NoEnemyOrOnlyOne" (to))
                    (apply 
                        (and
                            (if ("IsEnemyAt" (to))
                                (fromTo 
                                    (from (to))
                                    (to (handSite Next))
                                )
                            )
                            (forget Value "Opposite" (value))
                        )
                    )
                )
            )
            (then 
                (if (!= 0 (size Array (values Remembered "Opposite")))
                    (moveAgain)
                    (and { 
                        (set Var "PlayOpposite" 0) 
                        (set Pending)
                        (moveAgain)
                    })
                )
            )
        )
    )	
)

(game "Lange Puff"
    (players 2)
    (equipment {
        ("BackgammonBoard" "BackgammonTracksSameDirectionWithHands") 
        (dice d:6 num:2)
        (piece "Disc" Each
            (forEach Die
                replayDouble:(= 1 (value Player Mover)) 
                if:("DieNotUsed")
                (if ("IsOffBoard" ("NextSiteFrom" (from) (pips)))
                    (move Remove (from))
                    (move 
                        (from (from))
                        (to 
                            ("NextSiteFrom" (from) (pips))
                            if:("NoEnemyOrOnlyOne" (to))
                            ("HittingCapture" (handSite Next))
                        )
                    )
                )
                (then 
                    (if (not (all DiceUsed))
                        (moveAgain)
                        (if (= 1 (value Player Mover))
                            (if (and (all DiceEqual) (= 0 (size Array (values Remembered)))) 
                                (and 
                                    (moveAgain) 
                                    (set Var "PlayOpposite" 1)
                                )
                            )
                            (set Value Mover 1)
                        )
                    )
                )
            )			
        )
        (hand Each)
    })
    
    (rules 
        (start {
            (place Stack "Disc1" (handSite P1) count:15)
            (place Stack "Disc2" (handSite P2) count:15)
        })
        
        (play 
            (do (if (or (is Pending) ("NewTurn")) (roll))
                next:(if (= 1 (var "PlayOpposite"))
                    (or { 
                        (forEach Piece ("MoveOppositeDice") top:True) 
                        (forEach Piece container:(mover) ("MoveOppositeDice") top:True)
                        (move Pass 
                            (then 
                                (and { 
                                    (forget Value "Opposite" All) 
                                    (set Var "PlayOpposite" 0) 
                                    (set Pending) 
                                    (moveAgain)
                                })
                            )
                        )
                    })
                    
                    (do (if (and { 
                                (= 0 (count MovesThisTurn)) 
                                (all DiceEqual)
                                (= 1 (value Player Mover))
                            })
                            (and 
                                (remember Value "Opposite" (- 7 ("DoubleDieValue"))) 
                                (remember Value "Opposite" (- 7 ("DoubleDieValue")))
                            )
                        )
                        next:(or (forEach Piece top:True) (forEach Piece container:(mover) top:True))
                    )
                    
                )
            )
        )
        
        (end ("EscapeWin"))
    )
)

