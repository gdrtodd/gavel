(define "ThrowValue" (mapEntry "Throw" (count Pips)))
(define "SiteToMoveOnTrack" ("NextSiteOnTrack" #2 #1))
(define "IsSpecialThrow" (is In ("ThrowValue") (sites {7 25 30 14})))

(game "Pachih" 
    (players 4) 
    (equipment {
        ("PachisiBoard"
            {
            (track "Track1" "96,9,S,E,N,11,E,N,W,53,N,W,S,42,W,S,E,8,S,E1,N7,End" P1 directed:True)
            (track "Track2" "96,26,W,S,E,8,S,E,N,11,E,N,W,53,N,W,S,42,W,S1,E7,End" P2 directed:True)
            (track "Track3" "96,52,N,W,S,42,W,S,E,8,S,E,N,11,E,N,W,53,N,W1,S7,End" P3 directed:True)
            (track "Track4" "96,27,E,N,W,53,N,W,S,42,W,S,E,8,S,E,N,11,E,N1,W7,End" P4 directed:True)
            }
        )
        ("StickDice" 7)
        (piece "Pawn" Each
            (if ("IsEndTrack" ("SiteToMoveOnTrack" from:(from) ("ThrowValue")))
                (move Remove (from) level:(level))
                (move 
                    (from (from) level:(level))
                    (to
                        ("SiteToMoveOnTrack" from:(from) ("ThrowValue"))
                        if:True
                        (apply
                            (if (and (not (is In (to) (sites "SafeSites"))) ("IsEnemyAt" (to)))
                                (forEach Level (to) FromTop
                                    (fromTo
                                        (from (to) level:(level))
                                        (to (centrePoint))
                                    )
                                )
                            )
                        )
                    )
                )
            )		
        )
        (regions "SafeSites" (sites {60 62 2 37 87 89 16 48}))
        (map "Throw" {(pair 0 7) (pair 1 10) (pair 2 2) (pair 3 3) (pair 4 4) (pair 5 25) (pair 6 30) (pair 7 14)})
    }) 
    (rules 
        (start {
            (place Stack "Pawn1" 9 count:4)
            (place Stack "Pawn2" 26 count:4)
            (place Stack "Pawn3" 52 count:4)
            (place Stack "Pawn4" 27 count:4)
        })
        
        (play 
            ("RollMove"
                (forEach Piece)
                (then 
                    (if (and (< (value Player Mover) 2) ("IsSpecialThrow"))
                        (and (moveAgain) (set Value Mover (+ 1 (value Player Mover))))
                        (set Value Mover Undefined)
                    )
                )
            )
        )
        
        (end ("EscapeWin"))
    )
)

