(define "NextSiteFrom" ("NextSiteOnTrack" #2 from:#1))

(define "DieValue" (face 28))

(define "AllPiecesInFinalQuadrant" ("AllOwnedPiecesIn" (sites Mover "FinalQuadrant")))

(define "EnterPieces"
    (if (is Occupied (handSite Mover))
        (forEach Die
            replayDouble:True 
            if:("DieNotUsed")
            (move 
                (from (handSite Mover))
                (to 
                    ("NextSiteFrom" (mapEntry "Entry" Mover) (- (pips) 1))
                    if:(is Empty (to))
                )
            )
            
            (then ("ReplayNotAllDiceUsed"))
        )
    )
)

(define "CommonMove"
    (if ("IsEndTrack" ("NextSiteFrom" (from) #1))
        (if ("AllPiecesInFinalQuadrant")
            (move Remove (from))
        )
        (move 
            (from (from))
            (to 
                ("NextSiteFrom" (from) #1)
                if:(and {
                    ("NoEnemyOrOnlyOne" (to))
                    (if (not (is In (to) (sites Mover "StartingSide")))
                        True
                        (> 2 (size Stack at:(to)))
                    )
                    (if (not (is In (to) (sites Mover "AfterPenultimate")))
                        True
                        (>= 10 (count Pieces in:(sites {(handSite Mover) (mapEntry "Entry" Mover)})))
                    )
                })
                ("HittingCapture" (handSite Next))
            )
        )
    )		
)

(define "Move" 
    (forEach Die
        replayDouble:True 
        if:("DieNotUsed")
        ("CommonMove" (pips))
        (then ("ReplayNotAllDiceUsed"))
    )		
)

(define "SpecialMove" ("CommonMove" #1))

(define "SpecialEnterPieces"
    (if (is Occupied (handSite Mover))
        (move 
            (from (handSite Mover))
            (to 
                ("NextSiteFrom" (mapEntry "Entry" Mover) (- #1 1))
                if:(is Empty (to))
            )
        )
    )
)

(define "PlayMove" 
    (if (>= 0 (value Player Mover))
        ("RollEachNewTurnMove"
            (if (all DiceEqual)
                (or
                    ("SpecialEnterPieces" ("DieValue"))
                    (forEach Piece ("SpecialMove" ("DieValue")) top:True)
                    (then 
                        (and {
                            (moveAgain)
                            (set Var "FirstPlay" 1)
                            (set Value Mover ("DieValue"))
                            (set Var "DoubleToPlay" ("DieValue"))
                        })
                    )
                )
                (or
                    ("EnterPieces")
                    (forEach Piece top:True)
                )
            )
        )
        (or
            ("SpecialEnterPieces" (var "DoubleToPlay"))
            (forEach Piece ("SpecialMove" (var "DoubleToPlay")) top:True)
            (then 
                (and {
                    (if (or (= (value Player Mover) 1) (= (value Player Mover) 5))
                        (if (!= (var "FirstPlay") 1)
                            (and
                                (set Var "DoubleToPlay" (var "DoubleToPlay"))
                                (moveAgain)
                            )
                            (if (!= 6 (var "DoubleToPlay"))
                                (and
                                    (set Var "DoubleToPlay" (+ (var "DoubleToPlay") 1))
                                    (moveAgain)
                                )
                                (and
                                    (set Var "DoubleToPlay" 0)
                                    (set Value Mover 0)
                                )
                            )
                        )	
                        (if (!= (var "FirstPlay") 1)
                            (and
                                (set Var "DoubleToPlay" (var "DoubleToPlay"))
                                (moveAgain)
                            )
                            (if (!= 1 (var "DoubleToPlay"))
                                (and
                                    (set Var "DoubleToPlay" (- (var "DoubleToPlay") 1))
                                    (moveAgain)
                                )
                                (and
                                    (set Var "DoubleToPlay" 0)
                                    (set Value Mover 0)
                                )
                            )
                        )
                    )
                    (if (!= (var "FirstPlay") 1) (set Var "FirstPlay" 1) (set Var "FirstPlay" 0))
                })
            )
        )
        (then
            (if (no Pieces Mover) (set Score Mover 2))
        )
    )	
)

(game "Piprjall"
    (players 2)
    (equipment {
        ("BackgammonBoard"
            {
            (track "Track1" {25..20 18..13 0..5 7..12 End} P1 directed:True)
            (track "Track2" {0..5 7..12 25..20 18..13 End} P2 directed:True)
            }
        )
        (dice d:6 num:2)
        (piece "Disc" Each ("Move")) 
        (hand Each)
        (regions "FinalQuadrant" P1 (sites {7..12}))
        (regions "FinalQuadrant" P2 (sites {13..18}))
        (regions "StartingSide" P1 (sites {25..20 18..13}))
        (regions "StartingSide" P2 (sites {0..5 7..12}))
        (regions "AfterPenultimate" P1 (sites {12}))
        (regions "AfterPenultimate" P2 (sites {13}))
        (map "Entry" {(pair P1 25) (pair P2 0)})
    })
    (rules 
        (start {
            (place Stack "Disc1" 25 count:15)
            (place Stack "Disc2" 0 count:15)
        })
        (play 
            (if (can Move ("PlayMove"))
                ("PlayMove") 
                (move Pass 
                    (then 
                        (and {
                            (set Value Mover 0)
                            (set Var "FirstPlay" 0)
                            (set Var "DoubleToPlay" 0)
                        })
                    )
                )
            )
        )
        (end ("EscapeWin"))
    )
)

