(define "NextSiteFrom" ("NextSiteOnTrack" (pips) from:#1))

(define "AllPieceInHome" ("AllOwnedPiecesIn" (sites Mover)))

(define "RemoveAPiece" (move Remove (from)))

(define "DieNotUsedAndNoEscapeAndNotOffTheTrack" 
    (and { 
        ("DieNotUsed") 
        ("IsNotOffBoard" ("NextSiteFrom" (from))) 
        ("IsNotEndTrack" ("NextSiteFrom" (from))) 
    })		
)

(define "MoveAPiece" 
    (move 
        (from #1)
        (to 
            ("NextSiteFrom" #1) 
            if:("NoEnemyOrOnlyOne" (to)) 
        )
    )
)

(define "MoveAPieceIf" 
    (forEach Die 
        replayDouble:True 
        if:#1
        ("MoveAPiece" #2)
    )		
)

(define "AllPieceEscaped" (no Pieces Mover))

(define "NumPiece" (size Stack in:(sites Occupied by:#1)))

(define "CanEscape" ("IsEndTrack" ("NextSiteFrom" (site))))

(define "NotEmptyAndNotOffTheBoard" 
    (and 
        (is Occupied (site)) 
        ("IsNotOffBoard" ("NextSiteFrom" (site)))
    )
)

(define "SetScoreOf" 
    (score 
        #1 
        (if (is Mover #1) 
            (if 
                (= ("NumPiece" #2) 15) 
                2 
                1
            ) 
            0
        )
    )
)

(define "HaveAPieceAndCanEscape" 
    (and 
        ("IsFriendAt" (site)) 
        (< (trackSite Move from:(site) steps:(pips)) 0)
    )
)

(define "MotherCheckerP1Pinned" 
    (and 
        ("IsPieceAt" "Disc1" P1 12 level:0)
        ("IsPieceAt" "Disc2" P2 12 level:1)
    )
) 

(define "MotherCheckerP2Pinned" 
    (and 
        ("IsPieceAt" "Disc2" P2 25 level:0)
        ("IsPieceAt" "Disc1" P1 25 level:1)
    )
)

(game "Plakoto" 
    (players 2) 
    (equipment { 
        ("BackgammonBoard" "BackgammonTracks")
        (dice num:2)
        (regions P1 { 20..25 }) 
        (regions P2 { 7..12 }) 
        (piece "Disc" Each ("MoveAPieceIf" "DieNotUsedAndNoEscapeAndNotOffTheTrack" (from))) 
    })
    
    (rules
        (start { 
            (place Stack "Disc1" 12 count:15)
            (place Stack "Disc2" 25 count:15)
        })
        
        (play 
            ("RollEachNewTurnMove"
                (if "AllPieceInHome"
                    (forEach Die 
                        replayDouble:True 
                        if:("DieNotUsed")
                        (forEach Site 
                            (sites Occupied by:Mover)
                            (if ("NotEmptyAndNotOffTheBoard") 
                                (if ("CanEscape")
                                    ("RemoveAPiece")
                                    ("MoveAPiece" (site))
                                )
                            )
                            noMoveYet:(firstMoveOnTrack "Track" Mover
                                (if "HaveAPieceAndCanEscape"
                                    "RemoveAPiece"
                                )
                            )
                            (then ("ReplayNotAllDiceUsed"))
                        )
                    )
                    (max Distance "Track" Mover
                        (forEach Piece top:True 
                            (then ("ReplayNotAllDiceUsed"))
                        )
                    )
                )
            )
        )
        
        (end {
            (if ("AllPieceEscaped")
                (byScore { 
                    ("SetScoreOf" P1 P2)
                    ("SetScoreOf" P2 P1)
                })
            )
            (if ("MotherCheckerP1Pinned")
                (byScore { 
                    (score P1 0)
                    (score P2 2)
                })
            )
            (if ("MotherCheckerP2Pinned")
                (byScore { 
                    (score P1 2)
                    (score P2 0)
                })
            )
        })
    )
)

