(define "SiteToEnter" (coord "A3"))

(define "Throw" (mapEntry (count Pips)))

(define "SiteToMoveOnTrack" ("NextSiteOnTrack" "Throw" #1 #2))

(define "PieceMovement" )

(define "SevenPiecesOnBoard"
    (start { 	
        (place "SenetPiece1" (sites {"B3" "D3" "F3" "H3" "J3" "I2" "G2"}))
        (place "SenetPiece2" (sites {"A3" "C3" "E3" "G3" "I3" "J2" "H2"}))
    })
)

(define "FivePiecesOnBoard"
    (start { 	
        (place "SenetPiece1" (sites {"B3" "D3" "F3" "H3" "J3"}))
        (place "SenetPiece2" (sites {"A3" "C3" "E3" "G3" "I3"}))
    })
)

(define "Ankh Waset Site" (coord "F2"))

(define "MoveInFront7Pieces" (fromTo (from (coord "G2")) (to (coord "F2"))))

(define "MoveInFront5Pieces" (fromTo (from (coord "J3")) (to (coord "J2"))))

(define "TwoConsecutiveSpaces" 
    (if (= ("SiteToMoveOnTrack" #1 #2) 19)
        (or (is Line 2 W through:("SiteToMoveOnTrack" #1 #2)) (is Line 2 N through:("SiteToMoveOnTrack" #1 #2)))
        (if (= ("SiteToMoveOnTrack" #1 #2) 29)
            (or (is Line 2 W through:("SiteToMoveOnTrack" #1 #2)) (is Line 2 S through:("SiteToMoveOnTrack" #1 #2)))
            (if (= ("SiteToMoveOnTrack" #1 #2) 10)
                (or (is Line 2 E through:("SiteToMoveOnTrack" #1 #2)) (is Line 2 S through:("SiteToMoveOnTrack" #1 #2)))
                (if (= ("SiteToMoveOnTrack" #1 #2) 0)
                    (or (is Line 2 E through:("SiteToMoveOnTrack" #1 #2)) (is Line 2 N through:("SiteToMoveOnTrack" #1 #2)))
                    (or (is Line 2 W through:("SiteToMoveOnTrack" #1 #2)) (is Line 2 E through:("SiteToMoveOnTrack" #1 #2)))
                )
            )
        )
    )
)

(define "NextSiteFrom" ("NextSiteOnTrack" 1 from:(last From)))

(define "BearOffPiece" (move Remove (from)))

(define "BearOffPieceIfNoPieceInHomeRow" 
    (if (all Sites (sites Occupied by:Mover) if:(not (is In (site) (sites "TopRow"))))
        (move Remove (from))
    )
)

(define "BearOffPieceOnWater" (move Remove (sites "Water")))

(define "BearOffPieceOnWaterIfNoPieceInHomeRow" 
    (if (all Sites (sites Occupied by:Mover) if:(not (is In (site) (sites "TopRow"))))
        (move Remove (sites "Water"))
    )
)

(define "TrapRule"
    (if (and (or {
                ("IsEndTrack" ("SiteToMoveOnTrack")) 
                ("IsOffBoard" ("SiteToMoveOnTrack"))
                (is In ("SiteToMoveOnTrack") (union {(sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")}))
            })
            (= 1 (count Sites in:(intersection (sites Empty) (sites "Water"))))
        )
        (move (from) (to (sites "Water")))
    )
)

(define "ThrowOfOne" (or (is Mover P1) (and (is Mover P2) (= (value Player Mover) 1))))

(define "NoStartingThrow" True)

(define "StartingThrow" #1)

(define "SetStartingThrow" (then (if (and (!= (value Player Mover) 1) (= 1 ("Throw"))) (set Value Mover 1))))

(define "MovePieceForward"
    (or {
        
        (if (is In (from) (sites "Neferu"))
            (if ("IsNotOffBoard" ("SiteToMoveOnTrack"))
                (if ("IsEndTrack" ("SiteToMoveOnTrack"))
                    #1 
                    (if 
                        (is Empty ("SiteToMoveOnTrack"))
                        (move 
                            (from) 
                            (to ("SiteToMoveOnTrack"))
                        )
                        (if (and (not ("TwoConsecutiveSpaces")) ("IsEnemyAt" ("SiteToMoveOnTrack")))
                            (if (and 
                                    (= 1 (count in:(intersection (sites Empty) (sites "Water")))) 
                                    (is In ("SiteToMoveOnTrack") (union {(sites "Baw") (sites "Two Men") (sites "Horus")}))
                                )
                                (move Swap Pieces
                                    (from) 	
                                    ("SiteToMoveOnTrack") 
                                    (then (fromTo 
                                            (from (last From)) 
                                            (to ("NextSiteFrom"))
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
        
        (if (is In (from) (union {(sites "Two Men") (sites "Baw")}))
            (if ("IsNotOffBoard" ("SiteToMoveOnTrack"))
                (if ("IsEndTrack" ("SiteToMoveOnTrack")) 
                    #1 
                )
            )
        )
        
        (if (is In (from) (sites "Horus"))
            (if (or 
                    ("IsEndTrack" ("SiteToMoveOnTrack")) 
                    ("IsOffBoard" ("SiteToMoveOnTrack"))
                )
                #1 
            )
        )
        (if (not (is In (from) (union {(sites "Neferu") (sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")})))
            (or {
                #2 
                
                (if (not 
                        (or {
                            ("IsEndTrack" ("SiteToMoveOnTrack")) 
                            ("IsOffBoard" ("SiteToMoveOnTrack"))
                            (is In ("SiteToMoveOnTrack") (union {(sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")}))
                        })
                    )
                    (if 
                        (is Empty ("SiteToMoveOnTrack"))
                        (move 
                            (from) 
                            (to ("SiteToMoveOnTrack"))
                        )
                        (if (and (not ("TwoConsecutiveSpaces")) ("IsEnemyAt" ("SiteToMoveOnTrack")))
                            (move Swap Pieces
                                (from) 	
                                ("SiteToMoveOnTrack") 
                            )
                        )
                    )
                )
            })
        )
    })
)

(define "MovePieceBackward"
    (or {
        
        (if (is In (from) (sites "Neferu"))
            (if ("IsNotOffBoard" ("SiteToMoveOnTrack" "TrackOpposite"))
                (if 
                    (is Empty ("SiteToMoveOnTrack" "TrackOpposite"))
                    (move 
                        (from) 
                        (to ("SiteToMoveOnTrack" "TrackOpposite"))
                    )
                    (if (and (not ("TwoConsecutiveSpaces" "TrackOpposite")) ("IsEnemyAt" ("SiteToMoveOnTrack" "TrackOpposite")))
                        (move Swap Pieces
                            (from) 	
                            ("SiteToMoveOnTrack" "TrackOpposite") 
                        )
                    )
                )
            )
        )
        (if (not (is In (from) (union {(sites "Neferu") (sites "Water") (sites "Baw") (sites "Two Men") (sites "Horus")})))
            
            (if ("IsNotOffBoard" ("SiteToMoveOnTrack" "TrackOpposite"))
                (if 
                    (is Empty ("SiteToMoveOnTrack" "TrackOpposite"))
                    (move 
                        (from) 
                        (to ("SiteToMoveOnTrack" "TrackOpposite"))
                    )
                    (if (and (not ("TwoConsecutiveSpaces" "TrackOpposite")) ("IsEnemyAt" ("SiteToMoveOnTrack" "TrackOpposite")))
                        (move Swap Pieces
                            (from) 	
                            ("SiteToMoveOnTrack" "TrackOpposite") 
                        )
                    )
                )
            )
        )
    })
)

(define "PieceOnAnkhWasetFromWaterHasToMove" 
    (and 
        (= (state at:("Ankh Waset Site")) 1) 
        (= 1 (count Sites in:(intersection (sites Occupied by:Mover) (sites "Ankh Waset"))))
    )	
)

(define "PieceOnAnkhWasetHasMoved" (then (set State at:(last To) 0)))

(define "PieceOnAnkhWasetHasToMove" (then (set State at:(last To) 1)))

(define "PieceOnWater" (= 1 (count Sites in:(intersection (sites Occupied by:Mover) (sites "Water")))))

(define "NoPieceOnAnkhWaset" (= 1 (count Sites in:(intersection (sites Empty) (sites "Ankh Waset")))))

(define "KendallMoves" 
    (if ("PieceOnAnkhWasetFromWaterHasToMove") 
        (priority {
            (if 
                (is Empty ("SiteToMoveOnTrack" from:("Ankh Waset Site")))
                (move 
                    (from ("Ankh Waset Site")) 
                    (to ("SiteToMoveOnTrack" from:("Ankh Waset Site")))
                )
                (if (and 
                        (not ("TwoConsecutiveSpaces" from:("Ankh Waset Site"))) 
                        ("IsEnemyAt" ("SiteToMoveOnTrack" from:("Ankh Waset Site")))
                    )
                    (move Swap Pieces
                        ("Ankh Waset Site") 
                        ("SiteToMoveOnTrack" from:("Ankh Waset Site")) 
                    )
                )
                ("PieceOnAnkhWasetHasMoved")
            )
            (if 
                (is Empty ("SiteToMoveOnTrack" from:("Ankh Waset Site") "TrackOpposite"))
                (move 
                    (from ("Ankh Waset Site")) 
                    (to ("SiteToMoveOnTrack" from:("Ankh Waset Site") "TrackOpposite"))
                )
                (if (and 
                        (not ("TwoConsecutiveSpaces" from:("Ankh Waset Site") "TrackOpposite")) 
                        ("IsEnemyAt" ("SiteToMoveOnTrack" from:("Ankh Waset Site") "TrackOpposite"))
                    )
                    (move Swap Pieces
                        ("Ankh Waset Site") 
                        ("SiteToMoveOnTrack" from:("Ankh Waset Site") "TrackOpposite") 
                    )
                )
                ("PieceOnAnkhWasetHasMoved")
            )
        })
        (if ("PieceOnWater")
            (if (= ("Throw") 4)
                #3 
                (or
                    (if ("NoPieceOnAnkhWaset")
                        (move (from (sites "Water")) (to (sites "Ankh Waset")) ("PieceOnAnkhWasetHasToMove"))
                    )
                    (move Pass)
                )
            )
            
            (if ("StartingThrow" #1)
                (priority {
                    (forEach Piece ("MovePieceForward" #2 #4))
                    (forEach Piece ("MovePieceBackward"))
                    }
                    (then (if (is In ("Throw") (sites {1 4 5})) (moveAgain)))
                )
            )
        )
    )
)

(define "KendallRules" 
    (rules 
        #1 
        phases:{
        (phase "Opening"
            (play 
                ("RollMove"
                    (move Pass 
                        (then 
                            (if (= 1 ("Throw"))
                                (and {
                                    #2
                                    (if (is Mover P2) 
                                        (swap Players P1 P2)
                                    )
                                    (set NextPlayer (player 1))
                                })
                            )
                        )
                    )
                )
            )
            (nextPhase (= 1 (count Pips)) "Playing")
        )
        (phase "Playing"
            (play 
                (do 
                    (roll #6)
                    next:(if (can Move ("KendallMoves" #3 #4 #5 #7))
                        ("KendallMoves" #3 #4 #5 #7)
                        (move Pass (then (if (is In ("Throw") (sites {1 4 5})) (moveAgain))))
                    )
                )
            )
        )
        }
        
        (end ("EscapeWin"))
    )
)

(game "Senet"
    (players 2) 
    (equipment { 
        (board (rectangle 3 10) 
            { 
            
            (track "Track1" "20,E,S1,W,S1,E,End" P1 directed:True)
            (track "Track2" "20,E,S1,W,S1,E,End" P2 directed:True)
            (track "TrackOpposite1" "9,W,N1,E,N1,W" P1 directed:True)
            (track "TrackOpposite2" "9,W,N1,E,N1,W" P2 directed:True)
            
            }
        )
        ("StickDice" 4)
        (map {(pair 0 5) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4)})
        (regions "Symbols" (sites {"F2" "F1" "G1" "H1" "I1"}))
        (regions "Ankh Waset" (sites {"F2"}))
        (regions "Neferu" (sites {"F1"}))
        (regions "Water" (sites {"G1"}))
        (regions "Baw" (sites {"H1"}))
        (regions "Two Men" (sites {"I1"}))
        (regions "Horus" (sites {"J1"}))
        (regions "TopRow" (sites Top))
        (regions "MiddleRow" (difference (expand (sites Top)) (sites Top)))
        (regions "BottomRow" (sites Bottom))
        (piece "SenetPiece" Each ("PieceMovement")) 
        (hand Each)
    }) 
    
    ("KendallRules" ("SevenPiecesOnBoard") ("MoveInFront7Pieces") ("NoStartingThrow") ("BearOffPiece") ("BearOffPieceOnWater"))
    
)

