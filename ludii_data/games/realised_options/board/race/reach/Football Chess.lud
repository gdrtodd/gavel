(define "SameDirection" 
    (directions Cell from:#1 to:(where "Ball" Shared))
)

(define "KickerIsA" 
    (and ("IsPieceAt" #1 Mover #2) (is In (where "Ball" Shared) (sites Around #2 #3)))
)

(define "InBottomOrTop"
    (is In #1 (union (sites Bottom) (sites Top)))	
)

(define "NotInOrThroughGoal"
    (and (is Empty (between)) (not (is In (between) (sites "Goals"))))	
)

(define "KickTheBall"
    (if ("KickerIsA" "Knight" #1)
        (move
            (from (where "Ball" Shared))
            (to
                (sites To (leap (from (where "Ball" Shared)) "KnightWalk" (to if:(is Empty (to)))))
                if:(not (is In (to) (sites Around #1)))
            )
        )
        (if ("KickerIsA" "King" #1)
            (move
                (from (where "Ball" Shared))
                (to
                    (sites To (step (from (where "Ball" Shared)) ("SameDirection" #1) (to if:(is Empty (to)))))
                    if:(if ("InBottomOrTop" #1) (not (is In (to) (sites "Goals"))) True)
                )
            )
            (if ("KickerIsA" "Queen" #1)
                (move
                    (from (where "Ball" Shared))
                    (to
                        (sites To
                            (slide (from (where "Ball" Shared)) ("SameDirection" #1)
                                (between if:(if ("InBottomOrTop" #1) ("NotInOrThroughGoal") (is Empty (between))))
                            )
                        )
                    )
                )
                (if ("KickerIsA" "Rook" #1 Orthogonal)
                    (move
                        (from (where "Ball" Shared))
                        (to
                            (sites To
                                (slide (from (where "Ball" Shared)) ("SameDirection" #1)
                                    (between if:(if ("InBottomOrTop" #1) ("NotInOrThroughGoal") (is Empty (between))))
                                )
                            )
                        )
                    )
                    (if ("KickerIsA" "Bishop" #1 Diagonal)
                        (move
                            (from (where "Ball" Shared))
                            (to
                                (sites To
                                    (slide (from (where "Ball" Shared)) ("SameDirection" #1)
                                        (between if:(if ("InBottomOrTop" #1) ("NotInOrThroughGoal") (is Empty (between))))
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
        #2
    )		
)

(define "KickBallAgainWithoutMoving" (is Pending))
(define "CanKickAgainWithoutMoving" (and (set Pending) (moveAgain)))

(game "Football Chess" 
    (players 2) 
    (equipment { 
        (board (square 9)) 
        
        (piece "Rook" Each (move Slide Orthogonal (to (apply if:(not (is In (to) (sites "Goals")))))))
        (piece "King" Each (move Step (to if:(and (is Empty (to)) (not (is In (to) (sites "Goals")))))))
        (piece "Bishop" Each (move Slide Diagonal (to (apply if:(not (is In (to) (sites "Goals")))))))
        (piece "Knight" Each (move Leap "KnightWalk" (to if:(and (is Empty (to)) (not (is In (to) (sites "Goals")))))))
        (piece "Queen" Each (move Slide (to (apply if:(not (is In (to) (sites "Goals")))))))
        (piece "Ball" Shared)
        (regions "Goals" (sites {"E1" "E9"}))
        (map "Goal" {(pair P1 "E9") (pair P2 "E1")})
    }) 
    (rules 
        (meta (no Repeat PositionalInTurn))
        (start { 
            (place "Rook1" {"A1" "I1"}) (place "Knight1" {"B1" "H1"}) (place "Bishop1" {"C1" "G1"}) (place "Queen1" coord:"D1") (place "King1" coord:"F1") 
            (place "Rook2" {"A9" "I9"}) (place "Knight2" {"B9" "H9"}) (place "Bishop2" {"C9" "G9"}) (place "Queen2" coord:"D9") (place "King2" coord:"F9") 
            (place "Ball" {"E5"})
        })
        
        (play 
            (if ("SameTurn")
                (or
                    (if ("KickBallAgainWithoutMoving")
                        (forEach Site (sites Around (where "Ball" Shared)) ("KickTheBall" (site))
                            (then (if (can Move (forEach Site (sites Around (where "Ball" Shared)) ("KickTheBall" (site)))) ("CanKickAgainWithoutMoving")))		
                        )
                        ("KickTheBall" (last To) 
                            (then (if (can Move (forEach Site (sites Around (where "Ball" Shared)) ("KickTheBall" (site)))) ("CanKickAgainWithoutMoving")))
                        )
                    )
                    (move Pass)
                )
                (or 
                    (forEach Piece (then (if (can Move ("KickTheBall" (last To))) (moveAgain))))
                    (forEach Site 
                        (sites Around (where "Ball" Shared)) 
                        ("KickTheBall" (site))
                        (then (if (can Move (forEach Site (sites Around (where "Ball" Shared)) ("KickTheBall" (site)))) ("CanKickAgainWithoutMoving")))		
                    )
                )
            )
        )
        
        (end {
            (if (= (where "Ball" Shared) (mapEntry P1)) (result P1 Win))
            (if (= (where "Ball" Shared) (mapEntry P2)) (result P2 Win))
        })
    )
)

