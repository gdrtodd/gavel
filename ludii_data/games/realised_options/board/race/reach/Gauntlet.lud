
(define "HopCounter"
    (move Hop
        (from #1)
        #2
        (between 
            if:(and 
                (not (is In (between) (sites ToClear))) 
                ("IsEnemyAt" (between))
            )
            (apply (remove (between) at:EndOfTurn))
        ) 
        (to if:(is Empty (to))) 
        #3
    )
)

(game "Gauntlet"
    (players {(player N) (player W)})
    (equipment {
        (board (square 8))
        (piece "Counter" Each)
        (piece "DoubleCounter" Each)
        
        (regions "RunnerGoal" P1 (difference (sites Top) (sites Corners)))
        (regions "RunnerGoalRed" Neutral 
            (intersection
                (difference (sites Top) (sites Corners)) 
                (sites Phase 0)
            )
        )
        (regions "RunnerGoalPink" Neutral
            (intersection
                (difference (sites Top) (sites Corners)) (sites Phase 1)
            )
        )
        }
    ) 
    
    (rules 
        (start { 
            (place "Counter1" (difference (sites Bottom) (sites Corners)))
            (place "DoubleCounter2" (difference (sites Left) (sites Corners)))
            (place "Counter2" (difference (sites Right) (sites Corners)))
        })
        
        (play
            (priority {
                (max Moves
                    (or
                        (forEach Piece "Counter"
                            ("HopCounter" (from) Forward
                                (then
                                    (if (can Move ("HopCounter" (last To) Forward))
                                        (moveAgain)
                                    )
                                )
                            ) 
                        )
                        (forEach Piece "DoubleCounter"
                            ("HopCounter" (from) Backward
                                (then
                                    (if (can Move ("HopCounter" (last To) Backward))
                                        (moveAgain)
                                    )
                                )
                            ) 
                        )
                    )
                )
                (or 
                    (forEach Piece "Counter" 
                        (move Step 
                            (directions Forward)
                            (to if:(is Empty (to)))
                        )
                    )
                    (forEach Piece "DoubleCounter"
                        (move Step 
                            (directions Backward)
                            (to if:(is Empty (to)))
                        )
                    )
                )
            })
        )
        
        (end {
            (if (no Moves Next) (result Next Loss))
            (if (is In (last To) (sites Mover)) (result Mover Win))
        })
    )
)

