(define "Cairo" 27)
(define "Medina" 29)
(define "Mecca" 30)
(define "Minaret" 12)
(define "EnterMinaret" 11)
(define "ExitMinaret" 13)
(define "Step1" 25)
(define "Step2" 26)
(define "Step3" 28)
(define "Ground" 24)
(define "Start" 0)
(define "AfterStart" 1)
(define "GroundAway" 23)

(define "ThrowValue" (mapEntry "Throw" (count Pips)))
(define "SiteToMoveOnTrack" ("NextSiteOnTrack" #2 #1))
(define "ExtraThrowValue" (mapEntry "ExtraThrow" (count Pips)))

(define "AllPiecesInMecca"
    (and {
        (= ("Mecca") (where "Djinn" Mover))
        (= ("Mecca") (where "Father" Mover))
        (= ("Mecca") (where "Mother" Mover))
    })
)

(define "Sig" (= "ThrowValue" 1))

(define "CaptureMove"
    (then
        (forEach Site (sites Track Mover #1 from:(last From) to:(last To))
            (if (!= (site) (last To))
                (forEach Level (site) FromTop
                    (if ("IsEnemyAt" (site) level:(level))
                        (fromTo
                            (from (site) level:(level))
                            (to
                                ("Start")
                            )
                        )
                    )
                )
            )
        )
    )		
)

(define "NextSite" ("NextSiteOnTrack" 1 from:#1 #2))

(define "SigMove" 
    (if 
        (and { 
            ("Sig")
            (= (from) #1)
            (if ("NewTurn")
                True
                (= 1 (var "SpecialSig"))
            )
        })
        (move
            (from (from) level:(level))
            (to
                #2
            )
        )
    )	
)

(define "EnterToMinaret" ("SigMove" ("EnterMinaret") ("Minaret")))
(define "ExitFromMinaret" ("SigMove" ("Minaret") ("ExitMinaret")))
(define "ExitStart" ("SigMove" ("Start") ("AfterStart")))
(define "GoToStep1" ("SigMove" ("Ground") ("Step1")))
(define "GoToStep2" ("SigMove" ("Step1") ("Step2")))
(define "GoToStep3" ("SigMove" ("Step2") ("Step3")))
(define "GoToCairo" ("SigMove" ("Step3") ("Cairo")))
(define "GoToMedina" ("SigMove" ("Cairo") ("Medina")))
(define "GoToMecca" ("SigMove" ("Medina") ("Mecca")))
(define "GoToStep2" ("SigMove" ("Step1") ("Step2")))
(define "GoToStep3" ("SigMove" ("Step2") ("Step3")))
(define "GoToStep1Djinn" ("SigMove" ("GroundAway") ("Step1")))

(define "Move"
    (or {
        (if (and (!= (from) ("Start")) (is In (from) (sites Track "FirstTrack")))
            (move
                (from (from) level:(level))
                (to
                    ("SiteToMoveOnTrack" "FirstTrack" #1)
                )
            )
            ("CaptureMove" "FirstTrack")
        )
        (if (is In (from) (sites Track "SecondTrack"))
            (move
                (from (from) level:(level))
                (to
                    ("SiteToMoveOnTrack" "SecondTrack" #1)
                )
                
                ("CaptureMove" "SecondTrack")
            )
        )
        ("ExitStart")
        ("EnterToMinaret")
        ("ExitFromMinaret")
        ("GoToStep1")
        ("GoToStep2")
        ("GoToStep3")
        ("GoToCairo")
        ("GoToMedina")
        ("GoToMecca")
        #2
    })
)

(game "Sig (El Oued)"
    (players 4) 
    (equipment {
        (board
            (scale 2 1 
                (merge {
                    (square 5)
                    (shift 4 5 (rectangle 3 1))
                    (scale 2 1 (shift 1.5 8 (rectangle 3 1)))
                })
            )
            {
            (track "FirstTrack" "0,E,N1,W,N1,E1" directed:True)
            (track "SecondTrack" "13,E,N1,W,N1,E" directed:True)
            }
        )
        (dice d:2 from:0 num:6)
        (piece "Father" Each ("Move" (if (= 1 (var "SpecialSig")) (+ 1 ("ThrowValue")) ("ThrowValue"))))
        (piece "Djinn" Each 
            (if (= ("Mecca") (where "Father" Mover))
                ("Move" (* 2 (if (= 1 (var "SpecialSig")) (+ 1 ("ThrowValue")) ("ThrowValue"))) ("GoToStep1Djinn"))
            )
        )
        (piece "Mother" Each 
            (if (= ("Mecca") (where "Djinn" Mover))
                ("Move" (if (= 1 (var "SpecialSig")) (+ 1 ("ThrowValue")) ("ThrowValue")))
            )
        )
        (map "Throw" {(pair 0 12) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4) (pair 5 1) (pair 6 6)})
        (map "ExtraThrow" {(pair 0 3) (pair 1 1) (pair 2 0) (pair 3 0) (pair 4 0) (pair 5 1) (pair 6 1)})
    })
    (rules
        
        (start {
            (place Stack "Father1" 0)
            (place Stack "Djinn1" 0)
            (place Stack "Mother1" 0)
            (place Stack "Father2" 0)
            (place Stack "Djinn2" 0)
            (place Stack "Mother2" 0)
            (place Stack "Father3" 0)
            (place Stack "Djinn3" 0)
            (place Stack "Mother3" 0)
            (place Stack "Father4" 0)
            (place Stack "Djinn4" 0)
            (place Stack "Mother4" 0)
        })
        
        (play 
            ("RollMove"
                (if (can Move (forEach Piece)) (forEach Piece) (move Pass))
                (then
                    (if (!= 0 ("ExtraThrowValue"))
                        (and
                            (if (= 3 ("ExtraThrowValue"))
                                (if (<= (var) 0)
                                    (set Var 2)
                                )
                            )
                            (if (!= (mover) (prev))
                                (and 
                                    (moveAgain)
                                    (if (!= 1 ("ThrowValue")) (set Var "SpecialSig" 1))
                                )
                            )
                        )
                        (if (> (var) 0)
                            (and {
                                (set Var (- (var) 1))
                                (moveAgain)
                            })
                            (set Var "SpecialSig" 0)
                        )
                    )
                )
            )
        )
        (end (if ("AllPiecesInMecca") (result Mover Win)))
    )
)

