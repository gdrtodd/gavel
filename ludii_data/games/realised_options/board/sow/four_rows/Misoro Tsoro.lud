(define "Columns" 8)

(define "NoPiece" (all Sites (sites Player "Home") if:(= 0 (count at:(site)))))

(define "LastHoleSowed" (sites {(var)}))

(define "AHoleHasMoreThanOneCounter" 
    (not (all Sites (forEach (sites Mover) if:(< 1 (count at:(site)))) if:(= 0 (count at:(site)))))
)

(define "NextHoleFrom" ("NextSiteOnTrack" 1 from:#1 #2))

(game "Misoro Tsoro" 
    (players 2) 
    
    (equipment { 
        (mancalaBoard 4 "Columns" store:None
            { 
            (track "Track1" "0,E,N1,W" loop:True P1)
            (track "Track2" "16,E,N1,W" loop:True P2)
            }
        )
        (regions "Home" P1 (sites Track "Track1"))        
        (regions "Home" P2 (sites Track "Track2"))        
        (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) 
        (regions "Inner" P2 (difference (sites Track "Track2") (sites Top))) 
        (regions "Outer" P1 (sites Bottom))         
        (regions "Outer" P2 (sites Top))          
        (piece "Seed" Shared)
    }) 
    (rules 
        
        (start (set Count 2 to:(union (sites Top) (sites Bottom))))
        
        phases:{
        
        (phase "Misoro" 
            (play
                (move 
                    Select 
                    (from (forEach (sites Mover "Outer") if:(= 0 (state at:(site)))))
                    (then (set State at:(last To) (mover)))
                )
            )
            (nextPhase (= 4 (count Turns)) "Playing")
        )
        
        (phase "Playing"
            (play 
                (or
                    (if (and (!= 0 (state at:(var))) ("SameTurn"))
                        (move Pass)
                    )
                    (move Select
                        (from 
                            (if ("SameTurn")
                                "LastHoleSowed" 
                                (sites Mover "Home") 
                            ) 
                            if:(if "AHoleHasMoreThanOneCounter"
                                (> (count at:(from)) 1)
                                (and (= (count at:(from)) 1) (= 0 (count at:("NextHoleFrom" (from) Mover)))) 
                            )
                        )
                        (then 
                            (and
                                (sow
                                    "Track"
                                    owner:(mover)
                                    apply:(if (= (count at:(to)) 1)
                                        (if (is In (to) (sites Mover "Inner"))
                                            (if (> (count at:("OppositePit" (to))) 0) 
                                                (and
                                                    (remove ("OppositePit" (to))) 
                                                    (if 
                                                        (> (count at:("OppositeOuterPit" (to))) 0) 
                                                        (remove ("OppositeOuterPit" (to))) 
                                                    ) 
                                                ) 
                                            ) 
                                        )
                                        (and
                                            (moveAgain)
                                            (set Var (to))
                                        )
                                    )
                                )
                                (forEach Site (sites Board)
                                    (if (!= 0 (state at:(site))) (set State at:(site) (state at:(site))))
                                )
                            )
                        )
                    )
                )
            )
        )
        }
        
        (end
            (forEach NonMover
                if:("NoPiece")
                (result Player Loss)
            )
        )
    )
)

