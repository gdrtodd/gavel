(define "Columns" 8)
(define "OuterPhaseOppositePit" (if (is Mover P1) (+ (to) (* 3 ("Columns"))) (- (to) (* ("Columns") 3))))
(define "NextHole" ("NextSiteOnTrack" #3 from:#1 #2))

(game "Mweiso" 
    (players 2) 
    
    (equipment { 
        (mancalaBoard 4 "Columns" store:None
            { 
            (track "TrackCCW1" "0,E,N1,W" loop:True P1)
            (track "TrackCCW2" "16,E,N1,W" loop:True P2)
            (track "TrackCW1" "7,W,N1,E" loop:True P1)
            (track "TrackCW2" "24,E,S1,W" loop:True P2)
            }
        )
        (regions "Home" P1 (sites Track "TrackCCW1"))        
        (regions "Home" P2 (sites Track "TrackCCW2"))        
        (regions "Inner" P1 (difference (sites Track "TrackCCW1") (sites Bottom))) 
        (regions "Inner" P2 (difference (sites Track "TrackCCW2") (sites Top))) 
        (regions "Outer" P1 (difference (sites Bottom) (sites {3 4 })))          
        (regions "Outer" P2 (difference (sites Top) (sites {27 28})))           
        (map "LeftMostOuter" {(pair P1 0) (pair P2 31)})
        (map "SecondLeftInner" {(pair P1 9) (pair P2 22)})
        (piece "Seed" Shared)
        (hand Each)
    }) 
    (rules 
        
        (start (set Count 2 to:(union (sites P1 "Home") (sites P2 "Home"))))
        
        phases:{
        (phase "OuterPhase"
            (play
                (move Select
                    (from 
                        (if ("SameTurn")
                            (sites {(var "Replay")})
                            (sites Mover "Outer") 
                        )
                        if:(if ("SameTurn")
                            (< 0 (count at:(from)))
                            (< 1 (count at:(from)))
                        )
                    )
                    (then 
                        (sow
                            "TrackCCW"
                            owner:(mover)
                            apply:
                            (if (< 1 (count at:(to)))
                                (and
                                    (moveAgain)
                                    (if (and {
                                            (is Occupied ("OppositePit" (to)))
                                            (is Occupied ("OppositeOuterPit" (to)))
                                            (is In (to) (sites Mover "Inner"))
                                        })
                                        (and {
                                            (fromTo
                                                (from ("OppositePit" (to)))
                                                (to (last From))
                                                count:(count at:("OppositePit" (to)))
                                            )
                                            (fromTo
                                                (from ("OppositeOuterPit" (to)))
                                                (to (last From))
                                                count:(count at:("OppositeOuterPit" (to)))
                                            )
                                            (set Var "Replay" (from))
                                        })
                                        (set Var "Replay" (to))
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (nextPhase Mover (= 1 (count at:(last To afterConsequence:True))) "MainPhase")
        )
        
        (phase "MainPhase"
            (play
                (or
                    (move Select
                        (from 
                            (if ("SameTurn")
                                (sites {(var "Replay")})
                                (sites {(mapEntry "LeftMostOuter" Mover) (mapEntry "SecondLeftInner" Mover)}) 
                            )
                            if:(and {
                                if:(if ("SameTurn")
                                    (< 0 (count at:(from)))
                                    (< 1 (count at:(from)))
                                )
                                (is In (from) (sites {(mapEntry "LeftMostOuter" Mover) (mapEntry "SecondLeftInner" Mover)}))
                                (is In ("NextHole" (from) "TrackCW" (count at:(from))) (sites Mover "Inner"))
                                (is Occupied ("OppositePit" ("NextHole" (from) "TrackCW" (count at:(from)))))
                                (is Occupied ("OppositeOuterPit" ("NextHole" (from) "TrackCW" (count at:(from)))))
                            })
                        )
                        (then 
                            (sow
                                "TrackCW"
                                owner:(mover)
                                apply:
                                (if (< 1 (count at:(to)))
                                    (and
                                        (moveAgain)
                                        (if (and {
                                                (is Occupied ("OppositePit" (to)))
                                                (is Occupied ("OppositeOuterPit" (to)))
                                                (is In (to) (sites Mover "Inner"))
                                            })
                                            (and {
                                                (fromTo
                                                    (from ("OppositePit" (to)))
                                                    (to (last From))
                                                    count:(count at:("OppositePit" (to)))
                                                )
                                                (fromTo
                                                    (from ("OppositeOuterPit" (to)))
                                                    (to (last From))
                                                    count:(count at:("OppositeOuterPit" (to)))
                                                )
                                                (set Var "Replay" (from))
                                            })
                                            (set Var "Replay" (to))
                                        )
                                    )
                                )
                            )
                        )
                    )
                    (move Select
                        (from 
                            (if ("SameTurn")
                                (sites {(var "Replay")})
                                (sites Mover) 
                            )
                            if:(if ("SameTurn")
                                (< 0 (count at:(from)))
                                (< 1 (count at:(from)))
                            )
                        )
                        (then 
                            (sow
                                "TrackCCW"
                                owner:(mover)
                                apply:
                                (if (< 1 (count at:(to)))
                                    (and
                                        (moveAgain)
                                        (if (and {
                                                (is Occupied ("OppositePit" (to)))
                                                (is Occupied ("OppositeOuterPit" (to)))
                                                (is In (to) (sites Mover "Inner"))
                                            })
                                            (and {
                                                (fromTo
                                                    (from ("OppositePit" (to)))
                                                    (to (last From))
                                                    count:(count at:("OppositePit" (to)))
                                                )
                                                (fromTo
                                                    (from ("OppositeOuterPit" (to)))
                                                    (to (last From))
                                                    count:(count at:("OppositeOuterPit" (to)))
                                                )
                                                (set Var "Replay" (from))
                                            })
                                            (set Var "Replay" (to))
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
            (end ("BlockWin"))
        )
        }
    )
)

