(define "Columns" 8)

(game "Nsumbi" 
    (players 2) 
    
    (equipment { 
        (mancalaBoard 4 "Columns" store:None
            { 
            (track "Track1" "0,E,N1,W" loop:True P1)
            (track "Track2" "16,E,N1,W" loop:True P2)
            }
        )
        (regions "Home" P1 (sites Track "Track1"))          
        (regions "Home" P2 (sites Track "Track2"))          
        (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom)))  
        (regions "Inner" P2 (difference (sites Track "Track2") (sites Top)))   
        (piece "Seed" Shared)
    }) 
    (rules 
        
        (start (set Count 2 to:(union (sites P1 "Home") (sites P2 "Home"))))
        
        phases:{
        (phase "Opening" 
            (play 
                (move Select
                    (from (sites Mover))
                    (then 
                        (sow
                            "Track"
                            owner:(mover)
                        )
                    )
                )		
            )
            (nextPhase Mover "Playing")
        )
        (phase "Playing"
            (play 
                (move Select
                    (from 
                        (if 
                            ("SameTurn") 
                            "LastHoleSowed" 
                            (sites Mover) 
                        ) 
                        if:(< 1 (count at:(from)))
                    )
                    (then 
                        (sow
                            "Track"
                            owner:(mover)
                            apply:(if
                                (and { 
                                    (< 1 (count at:(to)))
                                    (is In (to) (sites Mover "Inner")) 
                                    (> (count at:("OppositePit" (to))) 0) 
                                    (> (count at:("OppositeOuterPit" (to))) 0) 
                                })
                                (and {
                                    (fromTo 
                                        (from ("OppositePit" (to))) 
                                        (to (last From)) 
                                        count:(count at:("OppositePit" (to)))
                                    ) 
                                    (fromTo 
                                        (from ("OppositeOuterPit" (to))) 
                                        (to (last From)) 
                                        count:(count at:("OppositeOuterPit" (to)))
                                    ) 
                                    (sow
                                        (last From)
                                        count:(+ (count at:("OppositePit" (to))) (count at:("OppositeOuterPit" (to))))
                                        "Track"
                                        owner:(mover)
                                        origin:True
                                    )
                                })
                                (if (< 1 (count at:(to)))
                                    (moveAgain)
                                )
                            )
                        )
                    )
                )		
            )		
        )
        }
        
        (end ("BlockWin"))
    )
)

