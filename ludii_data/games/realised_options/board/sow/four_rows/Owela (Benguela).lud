(define "Columns" 12)

(define "NextHole" (if (is Mover P1) ("NextSiteOnTrack" 1 from:(to) "Track1") ("NextSiteOnTrack" 1 from:(to) "Track2")))

(define "PlayFromNextHole" (sites {(value Pending)}))

(define "MoveAgainAfterCapture" (is Pending))

(define "PiecesOwnedBy" (+ (count Cell at:(handSite #1)) (count in:(sites #1))))

(game "Owela (Benguela)" 
    (players 2) 
    
    (equipment { 
        (mancalaBoard 4 "Columns" store:None
            { 
            (track "Track1" "0,E,N1,W" loop:True P1)
            (track "Track2" "24,E,N1,W" loop:True P2)
            }
        )
        (regions "Home" P1 (sites Track "Track1"))        
        (regions "Home" P2 (sites Track "Track2"))        
        (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) 
        (regions "Inner" P2 (difference (sites Track "Track2") (sites Top))) 
        (regions "Outer" P1 (sites Bottom))          
        (regions "Outer" P2 (sites Top))          
        (regions "InnerInit" P1 (sites {19..23}))        
        (regions "InnerInit" P2 (sites {24..28}))        
        (piece "Seed" Shared)
        (hand Each)
    }) 
    (rules 
        
        (start (set Count 2 to:(union {(sites P1 "Outer") (sites P1 "InnerInit") (sites P2 "Outer") (sites P2 "InnerInit")})))
        
        (play 
            (move Select 
                (from 
                    (if ("SameTurn") 
                        (if "MoveAgainAfterCapture" "PlayFromNextHole" "LastHoleSowed") 
                        (sites Mover "Home") 
                    ) 
                    if:(> (count at:(from)) 1)
                )
                (then 
                    (sow
                        "Track"
                        owner:(mover)
                        apply:(if (> (count at:(to)) 1)
                            (if (and 
                                    (is In (to) (sites Mover "Inner")) 
                                    (> (count at:("OppositePit" (to))) 0) 
                                )
                                (and {
                                    (fromTo 
                                        (from (to)) 
                                        (to (handSite Mover)) 
                                        count:(count at:(to))
                                    ) 
                                    (fromTo 
                                        (from ("OppositePit" (to))) 
                                        (to (handSite Mover)) 
                                        count:(count at:("OppositePit" (to)))
                                    ) 
                                    (if 
                                        (> (count at:("OppositeOuterPit" (to))) 0) 
                                        (fromTo 
                                            (from ("OppositeOuterPit" (to))) 
                                            (to (handSite Mover)) 
                                            count:(count at:("OppositeOuterPit" (to)))
                                        )
                                    )
                                    (if (> (count at:"NextHole") 1)
                                        (and
                                            (set Pending "NextHole") 
                                            (moveAgain)
                                        )
                                    )
                                })
                                (moveAgain)
                            )
                        )
                    )
                )
            )
        )
        
        (end ("MancalaByScoreWhen" (no Moves Mover)))
    )
)

