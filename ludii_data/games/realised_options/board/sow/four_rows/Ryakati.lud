
(define "Columns" 8)
(define "PiecesOwnedBy" (+ (count Cell at:(handSite #1)) (count in:(sites #1 "Home"))))
(define "NoPiece" (all Sites (sites Player "Home") if:(= 0 (count at:(site)))))

(game "Ryakati" 
    (players 2) 
    
    (equipment { 
        (mancalaBoard 4 "Columns" store:None
            { 
            (track "Track1" "0,E,N1,W" loop:True P1)
            (track "Track2" "16,E,N1,W" loop:True P2)
            }
        )
        (regions "Home" P1 (sites Track "Track1"))        
        (regions "Home" P2 (sites Track "Track2"))        
        (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) 
        (regions "Inner" P2 (difference (sites Track "Track2") (sites Top))) 
        (map "RightMostOuter" {(pair P1 7) (pair P2 24)})
        (map "SecondHoleRightOuter" {(pair P1 6) (pair P2 25)})
        (piece "Seed" Shared)
        (hand Each)
    }) 
    (rules 
        
        (start 
            (set Count 2 to:(sites Board)) 
        )
        
        phases:{
        (phase "Opening1"
            (play
                (move Select
                    (from
                        (mapEntry "SecondHoleRightOuter" Mover)	
                    )
                    (then
                        (sow
                            "Track"
                            owner:(mover)
                            apply:(and
                                (fromTo
                                    (from ("OppositePit" (to)))
                                    (to (mapEntry "RightMostOuter" Mover))
                                    count:2
                                )
                                (fromTo
                                    (from ("OppositeOuterPit" (to)))
                                    (to (mapEntry "RightMostOuter" Mover))
                                    count:2
                                )
                            )
                        )
                    )
                )
            )
            (nextPhase Mover "Opening2")
        )
        (phase "Opening2"
            (play
                (move Select
                    (from
                        (mapEntry "RightMostOuter" Mover)	
                    )
                    (then
                        (sow
                            count:4
                            "Track"
                            owner:(mover)
                            apply:(and
                                (fromTo
                                    (from ("OppositePit" (to)))
                                    (to (mapEntry "RightMostOuter" Mover))
                                    count:2
                                )
                                (fromTo
                                    (from ("OppositeOuterPit" (to)))
                                    (to (mapEntry "RightMostOuter" Mover))
                                    count:2
                                )
                            )
                            origin:True
                        )
                    )
                )
            )
            (nextPhase Mover "Opening3")
        )
        
        (phase "Opening3"
            (play
                (move Select
                    (from
                        (if 
                            ("SameTurn") 
                            (var "Replay")
                            (mapEntry "RightMostOuter" Mover) 
                        ) 
                    )
                    (then
                        (sow
                            count:(if ("SameTurn") (count at:(last To)) 4)
                            "Track"
                            owner:(mover)
                            apply:(if (< 1 (count at:(to)))
                                (and
                                    (moveAgain)
                                    (set Var "Replay" (to))
                                )
                            )
                            origin:("NewTurn")
                        )
                    )
                )
            )
            (nextPhase Mover (not (is Next Mover)) "Sowing")
        )
        
        (phase "Sowing"
            (play
                (move Select
                    (from 
                        (if 
                            ("SameTurn") 
                            (sites {(var "Replay") })
                            (sites Mover "Home") 
                        ) 
                        if:(> (count at:(from)) 1)
                    )
                    (then
                        (sow
                            "Track"
                            owner:(mover)
                            apply:(if (< 1 (count at:(to)))
                                (if (and {
                                        (is In (to) (sites Mover "Inner"))
                                        (is Occupied ("OppositePit" (to)))
                                        (is Occupied ("OppositeOuterPit" (to)))
                                    })
                                    (and {
                                        (fromTo
                                            (from ("OppositePit" (to)))
                                            (to (last From))
                                            count:(count at:("OppositePit" (to)))
                                        )
                                        (fromTo
                                            (from ("OppositeOuterPit" (to)))
                                            (to (last From))
                                            count:(count at:("OppositeOuterPit" (to)))
                                        )
                                        (sow
                                            (last From)
                                            count:(+ (count at:("OppositeOuterPit" (to))) (count at:("OppositePit" (to))))
                                            "Track"
                                            owner:(mover)
                                        )
                                        
                                    })
                                    (and
                                        (moveAgain)
                                        (set Var "Replay" (to))
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
        }
        
        (end
            (forEach NonMover
                if:("NoPiece")
                (result Player Loss)
            )
        )
    )
)

