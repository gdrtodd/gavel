(define "PiecesOwnedBy" (+ (count Cell at:(handSite #1)) (count in:(sites #1))))
(define "StoreLastPitSowed" (set Pending (to)))
(define "LastPitSowed" (sites Pending))
(define "LastHoleSowed" (if (is Pending) ("LastPitSowed") (sites {(last To afterConsequence:True)})))
(define "HasCaptured" (is Pending))
(define "Columns" 6)
(define "NextRowPit" (if (is Mover P1) (+ (to) "Columns") (- (to) "Columns")))
(define "OppositePit" (if (is Mover P1) (+ (to) (* "Columns" 2)) (- (to) (* "Columns" 2))))

(game "Abalala'e" 
    
    (players 2) 
    (equipment { 
        (mancalaBoard 3 "Columns" store:None
            {
            (track "Track" "0,E,N1,W5,N1,E" loop:True P1)
            (track "Track" "17,W,S1,E5,S1,W" loop:True P2)
            }
        )
        (regions "Home" P1 (union (sites Bottom) (sites {"D2" "E2" "F2"}))) 
        (regions "Home" P2 (union (sites Top) (sites {"A2" "B2" "C2"})))  
        (regions "LeftPart" P1 (sites {"A1" "B1" "C1"}))      
        (regions "LeftPart" P2 (sites {"D3" "E3" "F3"}))      
        (regions "MiddleRow" (sites {"A2" "B2" "C2" "D2" "E2" "F2"}))   
        (map "LeftHole" {(pair P1 0) (pair P2 17)})       
        (piece "Seed" Shared)
        (hand Each)
    }) 
    (rules 
        
        (start (set Count 3 to:(union (sites P1 "Home") (sites P2 "Home"))))
        
        (play 
            (move Select 
                (from 
                    (if ("SameTurn") 
                        "LastHoleSowed" 
                        (sites Mover "Home") 
                    ) 
                    if:(> (count at:(from)) 0)
                )
                (then 
                    (sow
                        count:(if ("HasCaptured") 1 (count at:(last To))) 
                        "Track"
                        owner:(mover)
                        apply:(if (> (count at:(to)) 1)
                            (moveAgain)
                            (if (is In (to) (sites Mover "Home"))
                                (if (is In (to) (sites "MiddleRow")) 
                                    (if (> (count at:"NextRowPit") 0) 
                                        (and { 
                                            (fromTo 
                                                (from "NextRowPit") 
                                                (to (handSite Mover)) 
                                                count:(count at:"NextRowPit")
                                            ) 
                                            (moveAgain) 
                                            ("StoreLastPitSowed")
                                        })
                                    )
                                    (if (is In (to) (sites Mover "LeftPart"))
                                        (and {
                                            (if (> (count at:"NextRowPit") 0) 
                                                (and {
                                                    (fromTo 
                                                        (from "NextRowPit") 
                                                        (to (handSite Mover)) 
                                                        count:(count at:"NextRowPit")
                                                    )
                                                    (moveAgain) 
                                                    ("StoreLastPitSowed")
                                                })
                                            )
                                            (if (> (count at:"OppositePit") 0) 
                                                (and {
                                                    (fromTo 
                                                        (from "OppositePit") 
                                                        (to (handSite Mover)) 
                                                        count:(count at:"OppositePit")
                                                    )
                                                    (moveAgain) 
                                                    ("StoreLastPitSowed")
                                                })
                                            )
                                        })
                                        (if (> (count at:"OppositePit") 0) 
                                            (and {
                                                (fromTo 
                                                    (from "OppositePit") 
                                                    (to (handSite Mover)) 
                                                    count:(count at:"OppositePit")
                                                )
                                                (moveAgain) 
                                                ("StoreLastPitSowed")
                                            })
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
        
        (end ("MancalaByScoreWhen"
                (or {
                    (all Sites (sites P1 "Home") if:(= 0 (count at:(site)))) 
                    (all Sites (sites P2 "Home") if:(= 0 (count at:(site)))) 
                })
            )
        )
    )
)

