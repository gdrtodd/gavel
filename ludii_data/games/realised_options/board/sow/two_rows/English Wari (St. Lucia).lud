(define "NoMovesNext" 
    (if (is Mover P1) 
        (not 
            (and {
                (< (count at:7) 2) 
                (< (count at:8) 2) 
                (< (count at:9) 2) 
                (< (count at:10) 2) 
                (< (count at:11) 2) 
                (< (count at:12) 2)
            })
        ) 
        (not 
            (and {
                (< (count at:1) 2) 
                (< (count at:2) 2) 
                (< (count at:3) 2) 
                (< (count at:4) 2) 
                (< (count at:5) 2) 
                (< (count at:6) 2)
            })
        )
    )
)

(define "PiecesOwnedBy" (+ (count at:(mapEntry #1)) (count in:(sites #1))))

(game "English Wari (St. Lucia)" 
    (players 2) 
    (equipment { 
        (mancalaBoard 2 6
            (track "Track" "1,E,N,W" loop:True)
        )
        (regions P1 (sites Bottom))      
        (regions P2 (sites Top))      
        (map {(pair P1 FirstSite) (pair P2 LastSite)}) 
        (piece "Seed" Shared)
    }) 
    (rules 
        (start (set Count 4 to:(sites Track)))
        
        phases:{
        (phase "Init" 
            (play 
                (move Select 
                    (from (sites Mover)) 
                    (then 
                        (fromTo 
                            (from (last To)) 
                            (to ("NextSiteOnTrack" 1 from:(last To))) 
                            count:(count at:(last To))
                        ) 
                    )
                )
            ) 
            (nextPhase (= (next) 1) "Sowing")
        )
        (phase "Sowing" 
            (play 
                (do 
                    (move Select 
                        (from 
                            (sites Mover) 
                            if:(> (count at:(from)) 1)
                        )
                        (then 
                            (sow
                                if:(= (count at:(to)) 4)
                                apply:(fromTo 
                                    (from (to)) 
                                    (to (mapEntry (mover))) 
                                    count:(count at:(to))
                                )
                                includeSelf:False
                                backtracking:True
                            )
                        )
                    )
                    ifAfterwards:"NoMovesNext"
                )
            )
        )
        }
        
        (end ("MancalaByScoreWhen" (no Moves Mover)))
    )
)

