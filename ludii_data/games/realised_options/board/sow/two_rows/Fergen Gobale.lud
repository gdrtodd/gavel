(define "Columns" 3)
(define "PlayableSites" (sites (values Remembered "Playable")))
(define "LeftMostEmpty" 
    (trackSite FirstSite 
        "TrackFill"
        from:(mapEntry "LeftMost" Mover)
        if:(is Empty (to))
    )
)

(define "NoOccupiedFreeHoles" (all Sites (sites #1 "Home") if:(or (is Empty (site)) (!= 0 (state at:(site))))))

(define "NumCaptureSeeds"
    (+ (count Cell at:(handSite #1)) (count in:(forEach (sites Board) if:(or (and (= 0 (state at:(site))) (is In (site) (sites #1 "Home"))) (= (state at:(site)) #1)))))
)

(game "Fergen Gobale"
    (players 2)
    (equipment {
        (board 
            (merge {
                (rectangle 2 "Columns")
                (shift 5 0 (rectangle 2 3))
                (shift 3 0.5 (rectangle 1 2))
            })
            {
            (track "Track" "0,E,12,13,6,E,N,W,13,12,5,W" loop:True)
            (track "TrackFill" "0,E,6,E,N,W,5,W" loop:True)
            }
            use:Vertex
        )
        (piece "Seed" Shared)
        (regions "Home" P1 (sites Bottom)) 
        (regions "Home" P2 (sites Top))  
        (regions "Central" (sites Centre)) 
        (hand Each)
        (map "LeftMost" {(pair P1 0) (pair P2 11)})
        (map "CorrespondingHoles" {
            (pair 0 11) (pair 1 10) (pair 2 9) (pair 6 5) (pair 7 4) (pair 8 3) 
            (pair 5 6) (pair 4 7) (pair 3 8) (pair 9 2) (pair 10 1) (pair 11 0)
        })
        (map "InitialCount" {
            (pair 0 5) (pair 1 5) (pair 2 3) (pair 6 3) (pair 7 5) (pair 8 5)
            (pair 3 5) (pair 4 5) (pair 5 3) (pair 9 3) (pair 10 5) (pair 11 5)
        })
    })
    (rules
        (start {
            (set Count 5 to:(sites {"A1" "B1" "A2" "B2" "G2" "H2" "G1" "H1" "H2"}))
            (set Count 4 to:(sites {"D1" "E1"}))
            (set Count 3 to:(sites {"C1" "F1" "C2" "F2"}))
            (set RememberValue "Playable" (sites Board))
        })
        
        phases:{
        (phase "Sowing"
            (play
                (if (is Pending)
                    (move Select
                        (from (sites "Central") if:(= 0 (state at:(from))))
                        (then
                            (set State at:(last To) (mover))
                        )
                    )
                    
                    (move Select
                        (from 
                            (if ("SameTurn")
                                (sites {(var "Replay")})
                                (sites Mover "Home")
                            )
                            if:(and {(= 0 (state at:(from))) (is In (from) ("PlayableSites")) (is Occupied (from)) })
                        )
                        (then
                            (sow
                                "Track"
                                apply:(if (< 1 (count at:(to)))
                                    (if (and (= 0 (state at:(to))) (not (is In (to) (sites "Central"))))
                                        (and
                                            (moveAgain)
                                            (set Var "Replay" (to))
                                        )
                                    )
                                    (if (is In (to) (sites Mover "Home"))
                                        (if (= 3 (count at:("OppositePit" (to))))
                                            (and {
                                                (fromTo
                                                    (from ("OppositePit" (to)))
                                                    (to (to))
                                                    count:1
                                                )
                                                (set State at:(to) (mover))
                                                (set State at:("OppositePit" (to)) (mover))
                                                (moveAgain)
                                                (set Pending)
                                            })
                                            (and
                                                (fromTo 
                                                    (from (to))
                                                    (to (handSite Mover))
                                                    count:1
                                                )
                                                (if (is Occupied ("OppositePit" (to)))
                                                    (fromTo 
                                                        (from ("OppositePit" (to)))
                                                        (to (handSite Mover))
                                                        count:(count at:("OppositePit" (to)))
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                                skipIf:(and (not (is In (to) (sites "Central"))) (not (is In (to) ("PlayableSites"))))
                            )
                        )
                    )
                    
                    (then
                        (if (or ("NoOccupiedFreeHoles" P1) ("NoOccupiedFreeHoles" P2))
                            (and {
                                (forEach Site 
                                    (sites Board)
                                    (if (or (and (= 0 (state at:(site))) (is In (site) (sites P1 "Home"))) (= (state at:(site)) 1))
                                        (fromTo
                                            (from (site))
                                            (to (handSite P1))
                                            count:(count at:(site))
                                        )
                                        (if (or (and (= 0 (state at:(site))) (is In (site) (sites P2 "Home"))) (= (state at:(site)) 2))
                                            (fromTo
                                                (from (site))
                                                (to (handSite P2))
                                                count:(count at:(site))
                                            )
                                        )
                                    )
                                )
                                (if (< ("NumCaptureSeeds" P1) ("NumCaptureSeeds" P2))
                                    (set NextPlayer (player 1))
                                    (set NextPlayer (player 2))
                                )
                                (if (or (> 5 ("NumCaptureSeeds" P1)) (> 5 ("NumCaptureSeeds" P2)))
                                    (set Var "PlaceOne" 1)
                                )
                                (forget Value "Playable" All)
                            })
                        )
                    )
                )
            )
            
            (end (if (or ("NoOccupiedFreeHoles" P1) ("NoOccupiedFreeHoles" P2))
                    {
                    (if (= 0 (count Cell at:(handSite P1))) (result P2 Win))
                    (if (= 0 (count Cell at:(handSite P2))) (result P1 Win))
                    }
                )
            )
            (nextPhase (or ("NoOccupiedFreeHoles" P1) ("NoOccupiedFreeHoles" P2)) "BetweenRounds")
            
        )
        
        (phase "BetweenRounds"
            (play
                (if (= 1 (var "PlaceOne"))
                    (move
                        (from (handSite Mover))
                        (to ("LeftMostEmpty"))
                        count:1
                        (then
                            (and 
                                (remember Value "Playable" (last To))
                                (if (is Occupied (handSite Mover))
                                    (moveAgain)	
                                )
                            )
                        )
                    )
                    (if (<= (mapEntry "InitialCount" ("LeftMostEmpty")) (count Cell at:(handSite Mover)))
                        (move
                            (from (handSite Mover))
                            (to ("LeftMostEmpty"))
                            count:(mapEntry "InitialCount" ("LeftMostEmpty"))
                            (then
                                (and 
                                    (remember Value "Playable" (last To))
                                    (if (is Occupied (handSite Mover))
                                        (moveAgain)	
                                    )
                                )
                            )
                        )
                        (if (all Sites (sites Mover "Home") if:(is Occupied (site)))
                            (move
                                (from (handSite Mover))
                                (to (if (is Empty 12) 12 13))
                                count:(count Cell at:(handSite Mover))
                            )
                            (move
                                (from (handSite Mover))
                                (to ("LeftMostEmpty"))
                                count:(count Cell at:(handSite Mover))
                                (then (remember Value "Playable" (last To)))
                            )
                        )
                    )
                    (then
                        (if (is Empty (handSite Mover))
                            (and
                                (forEach Site (sites Mover "Home")
                                    (if (is Occupied (site))
                                        (and
                                            (remember Value "Playable" (mapEntry "CorrespondingHoles" (site)))
                                            (fromTo
                                                (from (handSite Next))
                                                (to (mapEntry "CorrespondingHoles" (site)))
                                                count:(count at:(site))
                                            )
                                        )
                                    )
                                )
                                (set Var "PlaceOne" 0)
                            )
                        )
                    )
                )
            )
            (nextPhase (is Empty (handSite Mover)) "Sowing")
        )
        
        }
    )
)

