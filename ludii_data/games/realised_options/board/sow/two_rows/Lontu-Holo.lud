(define "NextHoleFrom" ("NextSiteOnTrack" #3 from:#1 #2))
(define "NoSeedInHome"
    (all Sites (sites #1 "Home") if:(is Empty (site)))
)
(define "OneSeedInEachHole"
    (all Sites (sites #1 "Home") if:(= 1 (count at:(site))))	
)

(game "Lontu-Holo" 
    (players 2) 
    
    (equipment { 
        (mancalaBoard 2 6
            {
            (track "TrackCCW1" {1 2 3 9 8 7} loop:True P1) 
            (track "TrackCCW2" {4 5 6 12 11 10} loop:True P2) 
            }
        )
        (regions "Home" P1 (sites Track "TrackCCW1"))   
        (regions "Home" P2 (sites Track "TrackCCW2"))   
        (regions "TwoHolesClosestNotCentre" P1 (sites {1 3}))
        (regions "TwoHolesClosestNotCentre" P2 (sites {10 12}))
        (regions "TwoHolesFurtherNotCentre" P1 (sites {7 9}))
        (regions "TwoHolesFurtherNotCentre" P2 (sites {4 6}))
        (regions "LeftMostHoles" P1 (intersection (expand (sites Left)) (sites Track "TrackCCW1")))
        (regions "LeftMostHoles" P2 (intersection (expand (sites Right)) (sites Track "TrackCCW2")))
        (regions "RightMostHoles" P1 (intersection (sites Centre) (sites Track "TrackCCW1")))
        (regions "RightMostHoles" P2 (intersection (sites Centre) (sites Track "TrackCCW2")))
        (regions "ClosestRow" P1 (intersection (sites Bottom) (sites Track "TrackCCW1")))
        (regions "ClosestRow" P2 (intersection (sites Top) (sites Track "TrackCCW2")))
        (map "CentreFurtherRow" {(pair P1 8) (pair P2 5)})
        (map "CentreClosestRow" {(pair P1 2) (pair P2 11)})
        (map "RightFurtherRow" {(pair P1 9) (pair P2 4)})
        (map "RightClosestRow" {(pair P1 3) (pair P2 10)})
        (map "LeftFurtherRow" {(pair P1 7) (pair P2 6)})
        (map "LeftClosestRow" {(pair P1 1) (pair P2 12)})
        (piece "Seed" Shared)
        (map "Store" {(pair P1 FirstSite) (pair P2 LastSite)}) 
    }) 
    (rules 
        (start (set Count 4 to:(union (sites Bottom) (sites Top))))
        
        phases:{
        
        (phase "Opening1"
            (play 
                (move 
                    (from 
                        (sites Mover "TwoHolesClosestNotCentre")
                        if:(is Occupied (from))
                    )
                    (to (mapEntry "CentreFurtherRow" Mover))
                    count:(count at:(from))
                )
            )
            (nextPhase Mover (all Sites (sites Mover "TwoHolesClosestNotCentre") if:(is Empty (site))) "Opening2")
        )
        (phase "Opening2"
            (play 
                (move Select
                    (from 
                        ("NextHoleFrom" (mapEntry "CentreFurtherRow" Mover) "TrackCCW" 1)
                    )
                    (then 
                        (sow
                            "TrackCCW"
                            owner:(mover)
                        )
                    )
                )
            )
            (nextPhase Mover "Opening3")
        )
        (phase "Opening3"
            (play 
                (move Select
                    (from 
                        (mapEntry "CentreFurtherRow" Mover) 
                    )
                    (then 
                        (sow
                            "TrackCCW"
                            owner:(mover)
                        )
                    )
                )
            )
            (nextPhase Mover "Opening4")
        )
        (phase "Opening4"
            (play 
                (move 
                    (from 
                        (sites Mover "ClosestRow")
                        if:(is Occupied (from))
                    )
                    (to (mapEntry "Store" Mover))
                    count:(count at:(from))
                )
            )
            
            (nextPhase Mover (all Sites (sites Mover "ClosestRow") if:(is Empty (site))) "Opening5")
        )
        
        (phase "Opening5"
            (play 
                (move 
                    (from 
                        (mapEntry "Store" Mover)
                    )
                    (to (sites Mover "Home") if:(< 1 (count at:(to))))
                    count:1
                )
            )
            
            (nextPhase Mover (is Empty (mapEntry "Store" Mover)) "Sowing")
        )
        
        (phase "Sowing"
            (play 
                (if ("SameTurn")
                    (if ("OneSeedInEachHole" Next)
                        (move 
                            (from 
                                (sites Next "Home")
                            )
                            (to (sites Next "Home") if:(!= (from) (to)))
                            count:1
                            (then
                                (moveAgain)
                            )
                        )
                        (move 
                            (from 
                                (var "Replay")
                            )
                            (to (sites Next "Home") if:(< 1 (count at:(to))))
                            count:1
                            (then
                                (if (is Occupied (last From))
                                    (moveAgain)
                                )
                            )
                        )
                    )
                    (move Select
                        (from 
                            (sites Mover "Home")
                            if:(is Occupied (from))
                        )
                        (then
                            (sow
                                "TrackCCW"
                                owner:(mover)
                                apply:(if (= 4 (count at:(to)))
                                    (and
                                        (moveAgain)
                                        (set Var "Replay" (to))
                                    )
                                )
                            )
                        )
                    )
                )
            )
            (end
                (if ("NoSeedInHome" Mover) (result Mover Win))
            )
        )
        }
    )
)

