(define "Columns" 6)

(define "PiecesOwnedBy" (count Cell at:(handSite #1)))

(define "OneRowIsEmpty"
    (or
        (all Sites (sites P1) if:(= 0 (count at:(site))))
        (all Sites (sites P2) if:(= 0 (count at:(site))))
    )
)

(game "Mangala (Bedouin)" 
    (players 2) 
    
    (equipment { 
        (mancalaBoard 2 "Columns" store:None
            (track "Track" "5,W,N,E" loop:True)
        )
        (piece "Seed" Shared)
        (hand Each)
        (hand Shared)
        (regions P1 (sites Bottom)) 
        (regions P2 (sites Top)) 
        (map "FourthHole" {(pair P1 3) (pair P2 8)})
    })
    
    (rules 
        
        (start (place "Seed" (handSite Shared) count:17))
        
        phases:{
        (phase "OpeningP1"
            (play 
                (move
                    (from (handSite Shared))
                    (to (sites Centre))
                    (then (if (is Occupied (handSite Shared)) (moveAgain)))
                )
            )
            (nextPhase (is Empty (handSite Shared)) "OpeningP2")
        )
        
        (phase "OpeningP2"
            (play 
                (or
                    (move Pass)
                    (if (is Mover P2) 
                        (move Pass 
                            (then
                                (and {
                                    (remove (sites Centre))
                                    (add (piece (id "Seed" Shared)) (to 9) count:(count at:2))
                                    (add (piece (id "Seed" Shared)) (to 2) count:(count at:9))
                                    (add (piece (id "Seed" Shared)) (to 8) count:(count at:3))
                                    (add (piece (id "Seed" Shared)) (to 3) count:(count at:8))
                                })
                            )
                        )
                    )
                )
            )
            
            (nextPhase (all Passed) "SowingRestricted")
        )
        
        (phase "SowingRestricted"
            (play
                (move Select
                    (from (mapEntry Mover) if:(is Occupied (from)))
                    (then (sow))
                )
            )
            (nextPhase Mover "Sowing")
        )
        
        (phase "Sowing"
            (play
                (move Select
                    (from
                        (if ("SameTurn") 
                            "LastHoleSowed" 
                            (sites Mover) 
                        ) 
                        if:(> (count at:(from)) 0)		
                    )
                    (then
                        (sow
                            apply:(if (< 10 (count at:(to)))
                                (moveAgain)
                                (if (is Even (count at:(to)))
                                    (if (is Even (count at:("OppositePit" (to))))
                                        (and
                                            (fromTo
                                                (from (to))
                                                (to (handSite Mover))
                                                count:(count at:(to))
                                            )
                                            (fromTo
                                                (from ("OppositePit" (to)))
                                                (to (handSite Mover))
                                                count:(count at:("OppositePit" (to)))
                                            )
                                        )
                                        (moveAgain)
                                    )
                                )
                            )		
                        )
                    )
                )
            )
            
            (end ("MancalaByScoreWhen" ("OneRowIsEmpty")))
        )
        }
    )
)

