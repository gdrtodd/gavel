(define "Columns" 7)
(define "NextHole" ("NextSiteOnTrack" #2 from:#1 "Track"))
(define "PlayableSites" (sites (values Remembered "Playable")))
(define "NoPieceOnBoard" (all Sites (forEach (sites Board) if:(= 0 (state at:(site)))) if:(= 0 (count at:(site)))))
(define "LeftMostEmpty" 
    (trackSite FirstSite "TrackCCW"
        from:(mapEntry "LeftMost" Mover)
        if:(is Empty (to))
    )
)

(game "Mawkar Katiya" 
    (players 2) 
    
    (equipment { 
        (mancalaBoard 2 "Columns" store:None
            {
            (track "TrackCW" "6,W,N,E" loop:True)
            (track "TrackCCW" "0,E,N,W" loop:True)
            }
        )
        (piece "Seed" Shared)
        (hand Each)
        (regions P1 (sites Bottom))      
        (regions P2 (sites Top))      
        (map "LeftMost" {(pair P1 0) (pair P2 13)})
    }) 
    
    (rules 
        (start {
            (set Count 5 to:(sites Track "TrackCW")) 
            (set RememberValue "Playable" (union (sites Top) (sites Bottom)))
        })
        
        phases:{
        (phase "Sowing"
            (play
                (or {
                    (move Select
                        (from 
                            (if 
                                ("SameTurn") 
                                (sites {(var "Replay")}) 
                                (sites Mover) 
                            ) 
                            if:(and {
                                (is Occupied (from)) 
                                (is In (from) ("PlayableSites"))
                                (!= (next) (state at:(from)))
                            })
                        )
                        (then
                            (do
                                (and
                                    (set Var "NumSowed" (count at:(last To)))
                                    (set Var "StateSowFrom" (state at:(last To)))
                                )
                                next:(sow
                                    "TrackCW"
                                    apply:(if (is Occupied ("NextHole" (to) 1))
                                        (and 
                                            (moveAgain)
                                            (set Var "Replay" ("NextHole" (to) 1))
                                        )
                                        (if (is Occupied ("OppositePitTwoRows" ("NextHole" (to) 1)))
                                            (and
                                                (fromTo
                                                    (from ("OppositePitTwoRows" ("NextHole" (to) 1)))
                                                    (to (handSite Mover))
                                                    count:(count at: ("OppositePitTwoRows" ("NextHole" (to) 1)))
                                                )
                                                (set State at:("OppositePitTwoRows" ("NextHole" (to) 1)) (state at:("OppositePitTwoRows" ("NextHole" (to) 1))))
                                            )
                                        )
                                    )
                                    skipIf:(or (and (!= (state at:(to)) (mover)) (!= (state at:(to)) 0)) (not (is In (to) ("PlayableSites"))))
                                )
                                (then
                                    (and {
                                        (forEach Site (sites Track from:(last From) to:(trackSite Move from:(last From) "Track" steps:(var "NumSowed")))
                                            (if (and (= (value Player Mover) (count at:(site))) (or (= (state at:(site)) (mover)) (= (state at:(site)) 0)))
                                                (and
                                                    (fromTo
                                                        (from (site))
                                                        (to (handSite Mover))
                                                        count:(value Player Mover)
                                                    )
                                                    (set State at:(site) (state at:(site)))
                                                )
                                                (if (and (is Occupied (site)) (= (mover) (state at:(site))))
                                                    (and
                                                        (fromTo
                                                            (from (site))
                                                            (to (handSite Mover))
                                                            count:1
                                                        ) 
                                                        (set State at:(site) (state at:(site)))
                                                    )
                                                )
                                            )
                                        )
                                        (set Var "NumSowed" 0)
                                        (if (< 0 (var "StateSowFrom")) (set State at:(last From) (var "StateSowFrom")))
                                    })
                                )
                            )
                        )
                    )
                    }
                    (then
                        (if ("NoPieceOnBoard")
                            (and {
                                (forEach Site (sites Board)
                                    (and
                                        (if (= (state at:(site)) 1)
                                            (fromTo
                                                (from (site))
                                                (to (handSite P1))
                                                count:(count at:(site))
                                            )
                                        )
                                        (if (= (state at:(site)) 2)
                                            (fromTo
                                                (from (site))
                                                (to (handSite P2))
                                                count:(count at:(site))
                                            )
                                        )
                                    )
                                )
                                (forget Value "Playable" All)
                                (if (>= (count Cell at:(handSite P1)) (count Cell at:(handSite P2)))
                                    (set Var "CurrentWinner" 1)
                                    (set Var "CurrentWinner" 2)
                                )
                                (set Value P2 0)
                                (set Value P1 0)
                                (forEach Site (sites Board) 
                                    (if (!= 0 (state at:(site))) (set State at:(site) 0))
                                )
                            })
                        )
                    )
                )
            )
            (end (if ("NoPieceOnBoard")
                    {
                    (if (= 0 (count Cell at:(handSite P1))) (result P2 Win))
                    (if (= 0 (count Cell at:(handSite P2))) (result P1 Win))
                    }
                )
            )
            
            (nextPhase ("NoPieceOnBoard") "BetweenRounds")
        )
        
        (phase "BetweenRounds"
            (play
                (if (not (all Sites (sites Mover) if:(is Occupied (site))))
                    (if (<= 5 (count Cell at:(handSite Mover)))
                        (move
                            (from (handSite Mover))
                            (to "LeftMostEmpty")
                            count:5
                            (then (remember Value "Playable" (last To)))
                        )
                        (if (and (!= 0 (count Cell at:(handSite Mover))) (!= (mover) (var "CurrentWinner")))
                            (move
                                (from (handSite Mover))
                                (to "LeftMostEmpty")
                                count:(count Cell at:(handSite Mover))
                                (then
                                    (and {
                                        (remember Value "Playable" (last To))
                                        (set Value Mover (count at:(last To)))
                                        (set State at:(last To) (next))
                                    })
                                )
                            )
                        )
                    )
                    (if (= (mover) (var "CurrentWinner"))
                        (move Pass
                            (then
                                (set Value Mover (count Cell at:(handSite Mover)))
                            )
                        )
                    )
                )
            )
            (nextPhase (all Passed) "Sowing")
        )
        }
    )
)

