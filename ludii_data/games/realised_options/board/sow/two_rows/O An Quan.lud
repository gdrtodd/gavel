(define "OwnedHoles" 
    (if (is Mover P1)
        (sites (values Remembered "OwnedP1"))
        (sites (values Remembered "OwnedP2"))
    )
)

(define "RemmemberOwnedHoles" 
    (if (is Mover P1)
        (remember Value "OwnedP1" #1)
        (remember Value "OwnedP2" #1)
    )
)

(define "RemmemberOpponentOwnedHoles" 
    (if (is Mover P2)
        (remember Value "OwnedP1" #1)
        (remember Value "OwnedP2" #1)
    )
)

(define "NextHole" ("NextSiteOnTrack" #3 from:#1 #2))
(define "NumBigPiecesCaptured" (count Cell in:(sites {(handSite P1 1) (handSite P2 1)})))

(define "LeftMostEmpty" 
    (trackSite FirstSite 
        "TrackCCW"
        from:(mapEntry Mover)
        if:(and (not (is In (to) (sites "EndHoles"))) (is Empty (to)))
    )
)

(define "NextLeftMostEmpty" 
    (trackSite FirstSite 
        "TrackCCW"
        from:("LeftMostEmpty")
        if:(and {(not (is In (to) (sites "EndHoles"))) (is Empty (to)) (!= (("LeftMostEmpty") (to)))})
    )
)

(define "NoPieceOnOwnedHoles" 
    (if (= 1 #1)
        (no Pieces All in:(sites (values Remembered "OwnedP1")))
        (no Pieces All in:(sites (values Remembered "OwnedP2")))
    )
)

(define "NumOwnedHoles" 
    (if (= 1 #1)
        (count Sites in:(sites (values Remembered "OwnedP1")))
        (count Sites in:(sites (values Remembered "OwnedP2")))
    )
)

(game "O An Quan" 
    (players 2) 
    
    (equipment { 
        (mancalaBoard 2 5 largeStack:True
            {
            (track "TrackCCW" "0,1,E,11,10,W" loop:True)
            (track "TrackCW" "0,6,E,11,5,W" loop:True)
            }
        )
        (piece "Seed" Shared)
        (piece "Ball" Shared)
        (hand Each size:2)
        (regions P1 (sites Bottom))      
        (regions P2 (sites Top))      
        (map {(pair P1 FirstSite) (pair P2 LastSite)}) 
        (regions "EndHoles" (sites {"A1" "G1"}))
    }) 
    (rules 
        
        (start {
            (place Stack "Seed" (union (sites Bottom) (sites Top)) count:5)
            (place Stack "Ball" (sites {"A1" "G1"}))
            (set RememberValue "OwnedP1" (sites Bottom))
            (set RememberValue "OwnedP2" (sites Top))
        })
        
        phases:
        {
        (phase "Sowing"
            (play
                (or {
                    (if (!= (var "Direction") 2)
                        (move Select
                            (from 
                                (if ("SameTurn")
                                    (sites {(var "Replay")})
                                    ("OwnedHoles") 
                                )
                                if:(!= 0 (size Stack at:(from)))
                            )
                            (then
                                (and {
                                    (forEach Value min:1 max:(size Stack at:(last From))
                                        (fromTo
                                            (from (last From) level:(- (size Stack at:(last From)) (value)))
                                            (to ("NextHole" (last From) "TrackCCW" (value)))
                                            stack:True
                                        )
                                    )
                                    (if (or (is In ("NextHole" (last From) "TrackCCW" (+ 1 (size Stack at:(last From)))) (sites "EndHoles")) (>= (size Stack at:(last From)) 10))
                                        (set Var "Direction" 0)
                                        (if (!= 0 (size Stack at:("NextHole" (last From) "TrackCCW" (+ 1 (size Stack at:(last From))))))
                                            (and {
                                                (set Var "Direction" 1)
                                                (moveAgain)
                                                (set Var "Replay" ("NextHole" (last From) "TrackCCW" (+ 1 (size Stack at:(last From)))))
                                            })
                                            (and
                                                (set Var "Direction" 0)
                                                (if (is Occupied ("NextHole" (last From) "TrackCCW" (+ 2 (size Stack at:(last From)))))
                                                    (forEach Level ("NextHole" (last From) "TrackCCW" (+ 2 (size Stack at:(last From)))) FromTop
                                                        (if (= (id "Seed" Shared) (what at:("NextHole" (last From) "TrackCCW" (+ 2 (size Stack at:(last From)))) level:(level)))
                                                            (fromTo
                                                                (from ("NextHole" (last From) "TrackCCW" (+ 2 (size Stack at:(last From)))) level:(level))
                                                                (to (handSite Mover))
                                                            )
                                                            (fromTo
                                                                (from ("NextHole" (last From) "TrackCCW" (+ 2 (size Stack at:(last From)))) level:(level))
                                                                (to (handSite Mover 1))
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                })
                            )
                        )
                    )
                    (if (!= (var "Direction") 1)
                        (move Select
                            (from 
                                (if ("SameTurn")
                                    (sites {(var "Replay")})
                                    ("OwnedHoles") 
                                ) 
                                if:(!= 0 (size Stack at:(from)))
                            )
                            (then
                                (and
                                    (forEach Value min:1 max:(size Stack at:(last From))
                                        (fromTo
                                            (from (last From) level:(- (size Stack at:(last From)) (value)))
                                            (to ("NextHole" (last From) "TrackCW" (value)))
                                            stack:True
                                        )
                                    )
                                    (if (or (is In ("NextHole" (last From) "TrackCW" (+ 1 (size Stack at:(last From)))) (sites "EndHoles")) (>= (size Stack at:(last From)) 10))
                                        (set Var "Direction" 0)
                                        (if (!= 0 (size Stack at: ("NextHole" (last From) "TrackCW" (+ 1 (size Stack at:(last From))))))
                                            (and {
                                                (set Var "Direction" 2)
                                                (moveAgain)
                                                (set Var "Replay" ("NextHole" (last From) "TrackCW" (+ 1 (size Stack at:(last From)))))
                                            })
                                            (and
                                                (set Var "Direction" 0)
                                                (if (is Occupied ("NextHole" (last From) "TrackCW" (+ 2 (size Stack at:(last From)))))
                                                    (forEach Level ("NextHole" (last From) "TrackCW" (+ 2 (size Stack at:(last From)))) FromTop
                                                        (if (= (id "Seed" Shared) (what at:("NextHole" (last From) "TrackCW" (+ 2 (size Stack at:(last From)))) level:(level)))
                                                            (fromTo
                                                                (from ("NextHole" (last From) "TrackCW" (+ 2 (size Stack at:(last From)))) level:(level))
                                                                (to (handSite Mover))
                                                            )
                                                            (fromTo
                                                                (from ("NextHole" (last From) "TrackCW" (+ 2 (size Stack at:(last From)))) level:(level))
                                                                (to (handSite Mover 1))
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    }
                    (then
                        (if (= 2 ("NumBigPiecesCaptured"))
                            (and {
                                (forEach Site
                                    (intersection (sites (values Remembered "OwnedP1")) (sites (values Remembered "OwnedP2")))
                                    (if (is Occupied (site))
                                        (and
                                            (forEach Level (site) FromTop
                                                (if (>= (level) (/ (size Stack at:(site)) 2))
                                                    (fromTo
                                                        (from (site) level:(level))
                                                        (to (handSite P1))
                                                        stack:True
                                                    )
                                                )
                                            )
                                            (forEach Level (site) FromTop
                                                (if (< (level) (/ (size Stack at:(site)) 2))
                                                    (fromTo
                                                        (from (site) level:(level))
                                                        (to (handSite P2))
                                                        stack:True
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                                (forEach Site
                                    (union (difference (sites (values Remembered "OwnedP1")) (sites (values Remembered "OwnedP2"))) (sites {(mapEntry P1)}))
                                    (if (is Occupied (site))
                                        (forEach Level (site) FromTop
                                            (fromTo
                                                (from (site) level:(level))
                                                (to (handSite P1))
                                                stack:True
                                            )
                                        )
                                    )
                                )
                                (forEach Site
                                    (union (difference (sites (values Remembered "OwnedP2")) (sites (values Remembered "OwnedP1"))) (sites {(mapEntry P2)}))
                                    (if (is Occupied (site))
                                        (forEach Level (site) FromTop
                                            (fromTo
                                                (from (site) level:(level))
                                                (to (handSite P2))
                                                stack:True
                                            )
                                        )
                                    )
                                )
                                (forget Value "OwnedP1" All)
                                (forget Value "OwnedP2" All)
                            })
                            (and
                                (if (and ("NoPieceOnOwnedHoles" P1) (>= (size Stack Cell at:(handSite P1)) ("NumOwnedHoles" P1)))
                                    (forEach Value min:1 max:("NumOwnedHoles" P1)
                                        (fromTo
                                            (from Cell (handSite P1) level:(- (size Stack Cell at:(handSite P1)) (value)))
                                            (to (regionSite (sites (values Remembered "OwnedP1")) index:(- (value) 1)))
                                            stack:True
                                        )
                                    )
                                )
                                (if (and ("NoPieceOnOwnedHoles" P2) (>= (size Stack Cell at:(handSite P2)) ("NumOwnedHoles" P2)))
                                    (forEach Value min:1 max:("NumOwnedHoles" P2)
                                        (fromTo
                                            (from Cell (handSite P2) level:(- (size Stack Cell at:(handSite P2)) (value)))
                                            (to (regionSite (sites (values Remembered "OwnedP2")) index:(- (value) 1)))
                                            stack:True
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (end (if ("NoPieceOnBoard")
                    {
                    (if (>= 9 (size Stack Cell at:(handSite P1))) 
                        (result P2 Win)
                    )
                    (if (>= 9 (size Stack Cell at:(handSite P2))) 
                        (result P1 Win)
                    )
                    }
                )
            )
            (nextPhase ("NoPieceOnBoard") "BetweenRounds")
        )
        
        (phase "BetweenRounds"
            (play
                (if (<= 5 (size Stack Cell at:(handSite Mover)))
                    (move Select
                        (from Cell (handSite Mover))
                        (to ("LeftMostEmpty"))
                        (then
                            (and {
                                (forEach Value min:1 max:5
                                    (fromTo
                                        (from Cell (last From) level:(- (size Stack Cell at:(last From)) (value)))
                                        (to (last To))
                                        stack:True
                                    )
                                )
                                ("RemmemberOwnedHoles" (last To))
                                (if (<= 10 (count Cell at:(handSite Mover)))
                                    (moveAgain)
                                    (if (or (= 8 (count Cell at:(handSite Mover))) (= 9 (count Cell at:(handSite Mover))))
                                        (and {
                                            (forEach Value min:1 max:(- (count Cell at:(handSite Mover)) 5)
                                                (fromTo
                                                    (from Cell (handSite Mover) level:(- (- (size Stack Cell at:(handSite Mover)) 5) (value)))
                                                    (to ("NextLeftMostEmpty"))
                                                    stack:True
                                                )
                                            )
                                            (forEach Value min:1 max:(- 5 (- (count Cell at:(handSite Mover)) 5))
                                                (fromTo
                                                    (from Cell (handSite Next) level:(- (size Stack Cell at:(handSite Next)) (value)))
                                                    (to ("NextLeftMostEmpty"))
                                                    stack:True
                                                )
                                            )
                                            ("RemmemberOwnedHoles" ("NextLeftMostEmpty"))
                                            ("RemmemberOpponentOwnedHoles" ("NextLeftMostEmpty"))
                                        })
                                    )
                                )
                            })
                        )
                    )
                    (then
                        (if (and (is Empty Cell (handSite P1)) (is Empty Cell (handSite P2))) 
                            (if (= (size Stack Cell at:(handSite P1 1)) 2)
                                (and
                                    (fromTo
                                        (from Cell (handSite P1 1) level:1)
                                        (to (mapEntry P1))
                                        stack:True
                                    )
                                    (fromTo
                                        (from Cell (handSite P1 1) level:0)
                                        (to (mapEntry P2))
                                        stack:True
                                    )
                                )
                                (if (= (size Stack Cell at:(handSite P2 1)) 2)
                                    (and
                                        (fromTo
                                            (from Cell (handSite P2 1) level:1)
                                            (to (mapEntry P1))
                                            stack:True
                                        )
                                        (fromTo
                                            (from Cell (handSite P2 1) level:0)
                                            (to (mapEntry P2))
                                            stack:True
                                        )
                                    )
                                    (and
                                        (fromTo
                                            (from Cell (handSite P1 1) level:0)
                                            (to (mapEntry P1))
                                            stack:True
                                        )
                                        (fromTo
                                            (from Cell (handSite P2 1) level:0)
                                            (to (mapEntry P2))
                                            stack:True
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
            (nextPhase (and (is Empty Cell (handSite P1)) (is Empty Cell (handSite P2))) "Sowing")
        )
        }
    )
)

