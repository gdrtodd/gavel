
(define "Columns" 7)
(define "RightMostEmpty" 
    (trackSite FirstSite 
        from:(mapEntry "RightMost" Mover)
        if:(is Empty (to))
    )
)
(define "PlayableSites" (sites (values Remembered "Playable")))
(define "NoPieceOnBoard" (all Sites (union (sites Top) (sites Bottom)) if:(is Empty (site))))

(game "Papan Dakon" 
    (players 2) 
    
    (equipment { 
        (mancalaBoard 2 "Columns"
            {
            (track "Track1" "0,8,E,S,W" loop:True P1)
            (track "Track2" "15,7,W,N,E" loop:True P2)
            }
        )
        (piece "Seed" Shared)
        (regions P1 (sites Bottom))      
        (regions P2 (sites Top))      
        (map {(pair P1 FirstSite) (pair P2 LastSite)}) 
        (map "RightMost" {(pair P1 7) (pair P2 8)})
    }) 
    (rules 
        (start {
            (set Count 7 to:(union (sites P1) (sites P2)))
            (set RememberValue "Playable" (union (sites Top) (sites Bottom)))
        })
        
        phases:{
        (phase "Sowing"
            (play
                (or
                    (move Select
                        (from 
                            (if ("SameTurn") 
                                "LastHoleSowed" 
                                (sites Mover) 
                            ) 
                            if:(and (> (count at:(from)) 0) (is In (from) ("PlayableSites")))
                        )
                        (then
                            (sow
                                "Track"
                                owner:(mover)
                                apply:(if (and (!= (to) (mapEntry Mover)) (< 1 (count at:(to))))
                                    (moveAgain)
                                )
                                skipIf:(if (!= (to) (mapEntry Mover)) (not (is In (to) ("PlayableSites"))))
                            )
                        )
                    )
                    (if (and (is In (last To afterConsequence:True) (sites Mover)) ("SameTurn"))
                        (if (is In (last To afterConsequence:True) ("PlayableSites"))
                            (move
                                (from (last To afterConsequence:True))
                                (to ("OppositePit" (last To afterConsequence:True)))
                                count:1
                                (then
                                    (fromTo
                                        (from (last To))
                                        (to (mapEntry Mover))
                                        count:(count at:(last To))
                                    )
                                )
                            )
                        )
                    )
                    (then (if ("NoPieceOnBoard") (forget Value "Playable" All)))
                )
            )
            
            (end (if ("NoPieceOnBoard")
                    {
                    (if (> 7 (count at:(mapEntry P1))) (result P2 Win))
                    (if (> 7 (count at:(mapEntry P2))) (result P1 Win))
                    }
                )
            )
            (nextPhase ("NoPieceOnBoard") "BetweenRounds")
        )
        
        (phase "BetweenRounds"
            (play
                (if (not (all Sites (sites Mover) if:(is Occupied (site))))
                    (if (<= 7 (count at:(mapEntry Mover)))
                        (move
                            (from (mapEntry Mover))
                            (to "RightMostEmpty")
                            count:7
                            (then (remember Value "Playable" (last To)))
                        )
                    )
                )
            )
            (nextPhase (all Passed) "Sowing")
        )
        }
    )
)

