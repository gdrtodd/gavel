(define "PlayableSites" (sites (values Remembered "Playable")))
(define "NextHole" ("NextSiteOnTrack" 1 from:#1 "Track"))

(define "HomeP1"
    (if (> 3 (% (+ 1 (var "Round")) 9))
        (sites {0 1 7 8})
        (if (> 6 (% (+ 1 (var "Round")) 9))
            (sites {2 3 4 9 10 11})
            (sites {5 6 12 13})
        )
    )
)

(define "HomeP2" 
    (if (> 3 (% (+ 1 (var "Round")) 9))
        (sites {2 3 4 9 10 11})
        (if (> 6 (% (+ 1 (var "Round")) 9))
            (sites {5 6 12 13})
            (sites {0 1 7 8})
        )
    )
)

(define "HomeP3"
    (if (> 3 (% (+ 1 (var "Round")) 9))
        (sites {5 6 12 13})
        (if (> 6 (% (+ 1 (var "Round")) 9))
            (sites {0 1 7 8})
            (sites {2 3 4 9 10 11})
        )
    )
)

(define "HomeMover"
    (if (is Mover P1) 
        ("HomeP1")
        (if (is Mover P2)
            ("HomeP2")
            ("HomeP3")
        )
    )
)

(define "FourOrLessPieceOnBoard" (> 4 (count in:(difference (sites Board) (sites Row 1)))))

(game "Raja Pasu Mandiri"
    (players 3)
    (equipment {
        (board 
            (merge {
                (rectangle 1 7)
                (shift 0 2 (rectangle 1 7))
                (shift 3 1 (square 1))
                (shift 1 1 (square 1))
                (shift 5 1 (square 1))
            })
            {
            (track "Track" "6,W,7,E" loop:True)
            }
            use:Vertex
        )
        (piece "Seed" Shared)
        (map {(pair P1 15) (pair P2 14) (pair P3 16)}) 
    })
    (rules
        (start { 
            (set Count 7 to:(difference (sites Board) (sites Row 1)))
            (set RememberValue "Playable" (difference (sites Board) (sites Row 1)))
        })
        phases:{
        (phase "Sowing"
            (play
                (or {
                    (move Select
                        (from 
                            (if ("SameTurn") (sites {(var "Replay")}) ("HomeMover"))
                            if:(and (is Occupied (from)) (is In (from) ("PlayableSites")))
                        )
                        (then 
                            (do
                                (set Var "NumSowed" (count at:(last To)))
                                next:(sow
                                    apply:(if (< 1 (count at:(to)))
                                        (and
                                            (moveAgain)
                                            (set Var "Replay" (to))
                                        )
                                        (if (is Occupied ("NextHole" (to)))
                                            (fromTo
                                                (from (to))
                                                (to (mapEntry Mover))
                                                count:(count at:(to))
                                            )
                                        )
                                    )
                                    skipIf:(not (is In (to) ("PlayableSites")))
                                )
                                (then
                                    (and
                                        (forEach Site (sites Track from:(last From) to:("NextSiteOnTrack" (var "NumSowed") from:(last From) "Track"))
                                            (if (= 4 (count at:(site)))
                                                (fromTo
                                                    (from (site))
                                                    (to (mapEntry Mover))
                                                    count:4
                                                )
                                            )
                                        )
                                        (set Var "NumSowed" 0)
                                    )
                                )
                            )
                        )
                    )
                    }
                    (then 
                        (if ("FourOrLessPieceOnBoard")
                            (and { 
                                (forEach Site (difference (sites Board) (sites Row 1))
                                    (if (is Occupied (site))
                                        (fromTo
                                            (from (site))
                                            (to (mapEntry Mover))
                                            count:(count at:(site))
                                        )
                                    )
                                )
                                (if (and (= 6 (count Sites in:("HomeP1"))) (< 2 (count at:(mapEntry P1))))
                                    (and
                                        (fromTo
                                            (from (mapEntry P1))
                                            (to (mapEntry P2))
                                            count:1
                                        )
                                        (fromTo
                                            (from (mapEntry P1))
                                            (to (mapEntry P3))
                                            count:1
                                        )
                                    )
                                    (if (and (= 6 (count Sites in:("HomeP2"))) (< 2 (count at:(mapEntry P2))))
                                        (and
                                            (fromTo
                                                (from (mapEntry P2))
                                                (to (mapEntry P1))
                                                count:1
                                            )
                                            (fromTo
                                                (from (mapEntry P2))
                                                (to (mapEntry P3))
                                                count:1
                                            )
                                        )
                                        (if (and (= 6 (count Sites in:("HomeP3"))) (< 2 (count at:(mapEntry P3))))
                                            (and
                                                (fromTo
                                                    (from (mapEntry P3))
                                                    (to (mapEntry P1))
                                                    count:1
                                                )
                                                (fromTo
                                                    (from (mapEntry P3))
                                                    (to (mapEntry P2))
                                                    count:1
                                                )
                                            )
                                        )
                                    )
                                )
                                (set Var "Round" (+ 1 (var "Round")))
                                (forget Value "Playable" All)
                            })
                        )
                    )
                )
            )
            
            (end {
                (if ("FourOrLessPieceOnBoard")
                    {
                    (if (> 7 (count at:(mapEntry P1))) (result P1 Loss))
                    (if (> 7 (count at:(mapEntry P2))) (result P2 Loss))
                    (if (> 7 (count at:(mapEntry P3))) (result P3 Loss))
                    }
                )
            })
            
            (nextPhase ("FourOrLessPieceOnBoard") "BetweenRounds")
        )
        
        (phase "BetweenRounds"
            (play
                (if (not (all Sites ("HomeMover") if:(is Occupied (site))))
                    (if (<= 7 (count at:(mapEntry Mover)))
                        (move
                            (from (mapEntry Mover))
                            (to ("HomeMover"))
                            count:7
                            (then (remember Value "Playable" (last To)))
                        )
                    )
                )
            )
            (nextPhase (all Passed) "Sowing")
        )
        }
    )
)

