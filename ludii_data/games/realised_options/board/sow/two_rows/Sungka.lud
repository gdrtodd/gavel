(define "Columns" 7)
(define "PiecesCaptured" (count at:(mapEntry #1)))
(define "WasInStore" (is Pending))
(define "LastCounterInTheStore" (set Pending))
(define "SowingEndInMyStore" (= (to) (mapEntry Mover)))
(define "LastHoleSowed" (sites {(var)}))
(define "StoreLastHoleSowed" (set Var (to)))
(define "OppositePit" (if (is Mover P1) (+ (to) "Columns") (- (to) "Columns")))

(game "Sungka" 
    (players 2) 
    (equipment { 
        (mancalaBoard 2 "Columns"
            (track "Track" "7,W,WNW,ENE,E,ESE" loop:True)
        )
        (regions P1 (sites Bottom))      
        (regions P2 (sites Top))      
        (map {(pair P1 FirstSite) (pair P2 LastSite)}) 
        (piece "Seed" Shared)
    }) 
    
    (rules 
        (start (set Count "Columns" to:(union (sites P1) (sites P2))))		
        
        phases:{
        (phase "Sowing"
            (play 
                (move Select 
                    (from 
                        (if 
                            (and 
                                ("SameTurn") 
                                (not ("WasInStore"))
                            ) 
                            "LastHoleSowed" 
                            (sites Mover)
                        )
                        if:(< 0 (count at:(from)))
                    )
                    (then 
                        (sow 
                            apply:(if ("SowingEndInMyStore")
                                (and
                                    (moveAgain)
                                    ("LastCounterInTheStore")
                                )
                                (if (and {(is In (to) (sites Mover)) (= (count at:(to)) 1) (< 0 (count at:"OppositePit"))})
                                    (fromTo 
                                        (from "OppositePit") 
                                        (to (mapEntry (mover))) 
                                        count:(count at:"OppositePit")
                                    )
                                    (if (> (count at:(to)) 1)
                                        (and
                                            (moveAgain)
                                            ("StoreLastHoleSowed")
                                        )
                                    )
                                )
                            )
                            skipIf:(= (to) (mapEntry Next))
                        )
                    )
                )
            )
            (end (if (all Passed)
                    {
                    (if (> 7 (count at:(mapEntry P1))) (result P2 Win))
                    (if (> 7 (count at:(mapEntry P2))) (result P1 Win))
                    }
                )
            )
            (nextPhase (all Passed) "BetweenRounds")
        )
        (phase "BetweenRounds"
            (play
                (if (<= 7 (count at:(mapEntry Mover)))
                    (move
                        (from (mapEntry Mover))
                        (to (intersection (sites Empty) (sites Mover)))
                        count:7
                    )
                )
            )
            (nextPhase (all Passed) "Sowing")
        )
        }
    )
)

