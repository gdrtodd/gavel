(define "Columns" 9)

(define "Tuz" (value Player #1))

(define "CaptureFromTuzOf" 
    (if (and (> ("Tuz" #1) 0) (> (count at:("Tuz" #1)) 0))
        (fromTo (from ("Tuz" #1)) (to (mapEntry #1)) count:(count at:("Tuz" #1)))
    )
)

(define "PiecesOwnedBy" (+ (count at:(mapEntry #1)) (count in:(sites #1))))

(game "Toguz Kumalak" 
    (players 2) 
    
    (equipment { 
        (board 
            (merge {
                (rectangle 1 9)
                (shift 2.5 1 (rectangle 1 1))
                (shift 5.5 1 (rectangle 1 1))
                (shift 0 2 (rectangle 1 9))
            })
            (track "Track" "0,E,19,W" loop:True)
            use:Vertex
        )
        (regions P1 (sites Bottom))    
        (regions P2 (sites Top))       
        (map {(pair P1 9) (pair P2 10)}) 
        (piece "Seed" Shared)
    }) 
    (rules 
        
        (start (set Count 9 to:(sites Track)))
        
        (play 
            (move Select 
                (from 
                    (sites Mover) 
                    if:(> (count at:(from)) 0)
                )
                (then 
                    (sow 
                        apply:(if 
                            (and 
                                (is In (to) (sites Next)) 
                                (is Even (count at:(to)))
                            ) 
                            (fromTo 
                                (from (to)) 
                                (to (mapEntry (mover))) 
                                count:(count at:(to))
                            )
                            (if (and { 
                                    (is In (to) (sites Next)) 
                                    (= (count at:(to)) 3) 
                                    (< ("Tuz" Mover) 0) 
                                    (if (< ("Tuz" Next) 0)
                                        True
                                        (!= (+ (to) ("Tuz" Next)) 19)
                                    )
                                }) 
                                (and
                                    (set Value Mover (to))
                                    (fromTo 
                                        (from (to)) 
                                        (to (mapEntry (mover))) 
                                        count:(count at:(to))
                                    )
                                )
                            )
                        )
                        origin:(!= (count at:(last From)) 1)
                        (then
                            (and
                                ("CaptureFromTuzOf" P1)
                                ("CaptureFromTuzOf" P2)
                            )
                        )
                    )
                )
            )
        )
        
        (end ("MancalaByScoreWhen" (no Moves Mover)))
    )
)

