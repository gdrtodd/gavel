(define "OwnedHoles" 
    (if (is Mover P1)
        (sites (values Remembered "OwnedP1"))
        (sites (values Remembered "OwnedP2"))
    )
)

(define "OnlyPiecesInMarked" 
    (all Sites (forEach (sites Board) if:(= 0 (state at:(site)))) if:(= 0 (count at:(site))))
)

(define "SitesMarkedBy" 
    (forEach (sites Board) if:(= #1 (state at:(site))))
)

(define "NumCapturedPieces" 
    (+ 
        (count Cell at:(handSite #1))
        (count in:("SitesMarkedBy" #1))
    )
)

(define "LeftMostEmpty" 
    (trackSite FirstSite 
        from:(mapEntry "LeftMost" Mover)
        if:(is Empty (to))
    )
)

(define "RemmemberOwnedHoles" 
    (if (is Mover P1)
        (remember Value "OwnedP1" #1)
        (remember Value "OwnedP2" #1)
    )
)

(game "Um el Banat"
    (players 2) 
    
    (equipment { 
        (mancalaBoard 2 6 store:None
            (track "Track" "0,E,N,W" loop:True)
        )
        (regions "Home" P1 (sites Bottom)) 
        (regions "Home" P2 (sites Top)) 
        (piece "Seed" Shared)
        (hand Each)
        (map "LeftMost" {(pair P1 0) (pair P2 11)})
    }) 
    (rules 
        (start { 
            (set Count 4 to:(sites Track)) 
            (set RememberValue "OwnedP1" (sites Bottom))
            (set RememberValue "OwnedP2" (sites Top))
        })
        
        phases:{
        (phase "Sowing"
            (play 
                (or {
                    (move Select
                        (from 
                            (if (and ("SameTurn") (= 1 (var "ContinueSowing")))
                                ("LastHoleSowed") 
                                ("OwnedHoles") 
                            )
                            if:(and (< 0 (count at:(from))) (= 0 (state at:(from))))
                        )
                        (then
                            (sow
                                apply:
                                (if (= (next) (state at:(to)))
                                    (and {
                                        (move
                                            (from (to))
                                            (to (handSite Mover))
                                            count:(min 2 (count at:(to)))
                                        )
                                        (moveAgain)
                                        (set Var "ContinueSowing" 0)
                                    })
                                    (if (= (mover) (state at:(to)))
                                        (set Var "ContinueSowing" 0)
                                        (if (and (< 1 (count at:(to))) (!= 4 (count at:(to))))
                                            (and
                                                (moveAgain)
                                                (set Var "ContinueSowing" 1)
                                            )
                                            (if (and (= 4 (count at:(to))) (not (is In (sites Mover "Home"))))
                                                (and
                                                    (set State at:(to) (mover))
                                                    (set Var "ContinueSowing" 0)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    }
                    (then
                        (if ("OnlyPiecesInMarked")
                            (and { 
                                (forEach Site ("SitesMarkedBy" 1)
                                    (fromTo
                                        (from (site))
                                        (to (handSite P1))
                                        count:(count at:(site))
                                    )
                                )
                                (forEach Site ("SitesMarkedBy" 2)
                                    (fromTo
                                        (from (site))
                                        (to (handSite P2))
                                        count:(count at:(site))
                                    )
                                )
                                (forget Value "OwnedP1" All)
                                (forget Value "OwnedP2" All)
                                (if (>= ("NumCapturedPieces" 1) ("NumCapturedPieces" 2))
                                    (set NextPlayer (player 1))
                                    (set NextPlayer (player 2))
                                )
                            })
                        )
                    )
                )
            )
            (end (if ("NoPieceOnBoard")
                    {
                    (if (= 0 (count Cell at:(handSite P1))) (result P2 Win))
                    (if (= 0 (count Cell at:(handSite P2))) (result P1 Win))
                    }
                )
            )
            
            (nextPhase ("NoPieceOnBoard") "BetweenRounds")
        )
        
        (phase "BetweenRounds"
            (play
                (if (<= 4 (count Cell at:(handSite Mover)))
                    (move
                        (from (handSite Mover))
                        (to ("LeftMostEmpty"))
                        count:4
                        (then
                            (and {
                                ("RemmemberOwnedHoles" (last To))
                                (if (<= 4 (count Cell at:(handSite Mover)))
                                    (moveAgain)
                                    (if (= 3 (count Cell at:(handSite Mover)))
                                        (and {
                                            (fromTo 
                                                (from (handSite Mover))
                                                (to ("LeftMostEmpty"))
                                                count:3
                                            )
                                            (fromTo 
                                                (from (handSite Next))
                                                (to ("LeftMostEmpty"))
                                                count:1
                                            )
                                            ("RemmemberOwnedHoles" ("LeftMostEmpty"))
                                        })
                                        (fromTo 
                                            (from (handSite Mover))
                                            (to (handSite Next))
                                            count:(count Cell at:(handSite Mover))
                                        )
                                    )
                                )
                            })
                        )
                    )
                )
            )
            (nextPhase (and (is Empty (handSite P1)) (is Empty (handSite P2))) "Sowing")
        )
        }
    )
)

