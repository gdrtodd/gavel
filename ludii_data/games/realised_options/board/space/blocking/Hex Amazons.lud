(define "NumPiecesBetweenDiagonalStep"
    (count Sites 
        in:(forEach 
            (intersection 
                (sites Incident Cell of:Cell at:(if (!= (between) Off) (between) (from))) 
                (sites Incident Cell of:Cell at:(to))
            )
            if:(is Occupied (site))
        )
    )
)

(define "ToEmptyAndBlocked"
    (and 
        (is Empty (to))
        (= 2 ("NumPiecesBetweenDiagonalStep"))
    )
)

(define "NotBlockedOrNotMaxSlide"
    (or
        (= (between) (to)) 
        (!= 2 ("NumPiecesBetweenDiagonalStep"))
    )
)

(define "ToEmptyAndNotBlocked"
    (and 
        (is Empty (to))
        (!= 2 ("NumPiecesBetweenDiagonalStep"))
    )
)

(define "QueenMove"
    (or
        (move Slide)
        (move Slide Diagonal
            (between if:(is Empty (between)))
            (to 
                if:("ToEmptyAndBlocked")
                (apply if:("NotBlockedOrNotMaxSlide"))
            )
        )
        #1
    )
)

(game "Hex Amazons" 
    (players 2) 
    (equipment { 
        (board (hex 7)) 
        (piece "Queen" Each ("QueenMove" (then (moveAgain))))
        (piece "Dot" Neutral)
    }) 
    (rules 
        (start { 
            (place "Queen1" {"B2" "G2" "E5" "B7"})
            (place "Queen2" {"L12" "G12" "L7" "I9"})
        })
        
        phases:{
        (phase "Opening" P1
            (play (forEach Piece "QueenMove"))
            (nextPhase Mover "Playing")
        )
        (phase "Playing" 
            (play 
                (if ("SameTurn")
                    (or
                        (move Shoot (piece "Dot0"))
                        (move Shoot (piece "Dot0") Diagonal
                            (between if:(is Empty (between)))
                            (to if:("ToEmptyAndNotBlocked"))
                        )
                    )
                    (forEach Piece)
                )
            )
        )
        }
        
        (end ("BlockWin")) 
    )
)

