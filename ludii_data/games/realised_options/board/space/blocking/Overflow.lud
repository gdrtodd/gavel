(define "OverflowMove"
    (move Select
        (from (sites Occupied by:P1))
        (to 
            (sites Around (from))
            if:(and
                (not ("EnoughSpaceInDirection" (to)))
                (not ("ZeroEmptyInRangeInDirection" (to)))
            )
        )
        (then
            (forEach Site
                (sites Direction 
                    from:(last From)
                    ("LastDirection" Cell)
                    distance:(size Stack at:(last From))
                )
                (add (piece "Disc1") (to (site)) stack:True)
            )
        )
    )
)

(define "ContainedMove"
    (move Select
        (from (sites Occupied by:P1))
        (to
            (sites Around (from) NotEmpty)
            if:(and 
                (or
                    ("EnoughSpaceInDirection" (to))
                    ("ZeroEmptyInRangeInDirection" (to))
                )
                (all Sites
                    (sites Around (from) NotEmpty)
                    if:(not
                        (and
                            (<
                                (count Sites 
                                    in:(sites Direction
                                        from:(from)
                                        (directions Cell from:(from) to:(to))
                                        stop:(is Empty (to))
                                        distance:(size Stack at:(from))
                                    )
                                )
                                (count Sites 
                                    in:(sites Direction
                                        from:(from)
                                        (directions Cell from:(from) to:(site))
                                        stop:(is Empty (to))
                                        distance:(size Stack at:(from))
                                    )
                                )
                            )
                            (or
                                ("EnoughSpaceInDirection" (site))
                                ("ZeroEmptyInRangeInDirection" (site))
                            )
                        )
                    )
                )
            )
        )
        (then
            (forEach Site
                (sites Direction
                    from:(last From)
                    ("LastDirection" Cell)
                    stop:(is Empty (to))
                    distance:(size Stack at:(last From))
                )
                (if
                    (= 
                        ("DistanceToEndSquare") 
                        (count Steps (last From) (site))
                    )
                    (add (piece "Disc1")
                        (to (site)) 
                        count:(- 
                            (size Stack at:(last From))
                            (- ("DistanceToEndSquare") 1)
                        )
                        stack:True
                    )
                    (add (piece "Disc1")
                        (to (site)) 
                        stack:True
                    )
                )
            )
        )
    )
)

(define "ZeroEmptyInRangeInDirection"
    (= 0
        (count Sites
            in:(intersection
                (sites Empty)
                (sites Direction
                    from:(from)
                    (directions Cell from:(from) to:#1)
                    distance:(size Stack at:(from))
                )
            )
        )
    )
)

(define "EnoughSpaceInDirection"
    (<=
        (size Stack at:(from))
        (count Sites 
            in:(sites Direction
                from:(from)
                (directions Cell from:(from) to:#1)
                distance:(size Stack at:(from))
            )
        )
    )
)

(define "DistanceToEndSquare"
    (count Sites
        in:(sites Direction
            from:(last From)
            ("LastDirection" Cell)
            stop:(is Empty (to))
            distance:(size Stack at:(last From))
        )
    )
)

(define "UpdateScores"
    (and
        (set Score P1 
            (count Sites 
                in:(forEach 
                    (sites Phase 1) 
                    if:(is Occupied (site))
                )
            )
        )
        (set Score P2 
            (count Sites 
                in:(forEach 
                    (sites Phase 0) 
                    if:(is Occupied (site))
                )
            )
        )
    )
)

(game "Overflow"
    (players 2)
    (equipment {
        (board (square 6))
        (piece "Disc" P1)
    })
    (rules
        (start {
            (place "Disc1" (sites Board))
            (set Score P1 (count Sites in:(sites Phase 1)))
            (set Score P2 (count Sites in:(sites Phase 0)))
        })
        (play
            (do
                (or
                    ("ContainedMove")
                    ("OverflowMove")
                    (then (remove (last From) count:(size Stack at:(last From))))
                )
                ifAfterwards:(= 1 (count Groups))
                (then 
                    ("UpdateScores")
                )
            )
        )
        (end 
            (if 
                (= 0
                    (* (score P1) (score P2))
                )
                (byScore)
            )
        )
    )
)

