
(define "Side1" (union (sites Side NE) (sites Side N)))
(define "Side2" (union (sites Side SE) (sites Side S)))
(define "Side3" (union (sites Side NW) (sites Side SW)))

(define "MoverLimit"
    (count Pieces Mover in:(sites Around (to) Orthogonal))
)

(define "AddToEmpty"
    (move Add 
        (to (sites Empty))
        #1
))

(define "DefectorMove"
    (priority
        (move Add 
            (to 
                (sites Occupied by:Next)
                if:(< "MoverLimit" (count Pieces Next in:(sites Around (to) Orthogonal)))
                (apply (remove (to)))
            )
            (then
                (moveAgain)
        ))
        ("AddToEmpty" ~)
))

(game "Defector Y"
    (players 2)
    (equipment
        {
        (board (tri Limping 4) use:Vertex)
        (piece "Disc" Each )
        (piece "Counter" Neutral maxState:2)
        }
    )
    (rules
        (play
            (if
                True
                ("DefectorMove")
                (priority
                    ("AddToEmpty" (then (moveAgain)))
                    ("DefectorMove")
        )))
        (end 
            {
            (if
                ("IsConnectedPlayer")
                (result Mover Win)
            )
            }
)))

(define "IsConnectedPlayer"
    (is Connected 3 {"Side1" "Side2" "Side3"})
)

(define "P1Colour" (colour DarkGreen))
(define "P2Colour" (colour White))
(define "BoardColour" (colour 215 203 170))
(define "EdgesOfSide"
    (intersection
        (sites Outer Edge) 
        (forEach of:(difference #1 (sites Corners Vertex))
            (sites Incident Edge of:Vertex at:(site))
)))

