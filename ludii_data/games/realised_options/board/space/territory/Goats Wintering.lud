(define "Capture" 
    (forEach Site
        (sites Board)
        (apply 
            if:(and
                (is Next (who at:(site)))
                (= 0 
                    (count Sites 
                        in:(intersection 
                            (sites Empty) 
                            (sites Around (site) includeSelf:True)
                        )
                    )
                )
            )
            (remove (site))
        )
    )
)

(define "PlaceOutOfSight"
    (move Add
        (to (sites Empty) 
            if:(not "TooClose")
        )
        (then 
            (do ("Capture") next:("UpdateScore"))
        )
    )
)

(define "TooClose"
    (is 
        Within (id "Disc" Mover) 
        in:(intersection
            (sites LineOfSight Piece at:(to))
            (sites Direction from:(to) distance:3)
        )
    )
)

(define "Move2Friends"
    (move Step
        (to 
            if:(and
                (is Empty (to))
                (< (count Pieces Mover in:(sites Around (from)))
                    (- (count Pieces Mover in:(sites Around (to))) 1)
                )
            )
        )
        (then 
            (do ("Capture") next:("UpdateScore"))
        )
    )
)

(define "MoveFromEnemies"
    (move Step
        (to
            if:(and
                (is Empty (to))
                (> (count Pieces Next in:(sites Around (from)))
                    (count Pieces Next in:(sites Around (to)))
                )
            )
        )
        (then 
            (do ("Capture") next:("UpdateScore"))
        )
    )
)

(define "UpdateScore"
    (and 
        (set Score Mover 
            (/ 
                (+ (results 
                        from:(sites Occupied by:Mover)
                        to:(sites Around (from) if:(is Mover (who at:(to))))
                        1
                    )
                )
                2
            )
        )
        (set Score Next 
            (/ 
                (+ (results 
                        from:(sites Occupied by:Next)
                        to:(sites Around (from) if:(is Next (who at:(to))))
                        1
                    )
                )
                2
            )
        )
    )
)

(define "Goats"
    (piece Foreground P1 "Disc" image:"mountainGoat-alt3" fillColour:(colour 255 255 255))
    (piece Colour P1 "Disc" fillColour:(colour 255 255 255 120) strokeColour:(colour 62 72 55))
    (piece Foreground P2 "Disc" image:"mountainGoat-alt3" fillColour:(colour 60 60 60))
    (piece Colour P2 "Disc" fillColour:(colour 0 0 0 110) strokeColour:(colour 40 48 36))
    (piece Rotate P2 degrees:180)
)

(define "GoatsNeg"
    (piece Foreground P1 "Disc" image:"mountainGoat-alt3" fillColour:(colour 255 255 255))
    (piece Colour P1 "Disc" fillColour:(colour 255 255 255 120) strokeColour:(colour 62 72 55))
    (piece Foreground P2 "Disc" image:"mountainGoat-alt3" fillColour:(colour 30 30 30) edgeColour:(colour 240 240 240))
    (piece Colour P2 "Disc" fillColour:(colour 0 0 0 110) strokeColour:(colour 40 48 36))
    (piece Rotate P2 degrees:180)
)

(game "Goats Wintering"
    (players 2)
    (equipment {
        (board (hex Limping 3) use:Cell)
        (piece "Disc" P1)
        (piece "Disc" P2)
    })
    (rules
        (start (set Score Each 0))
        (play
            (or {
                (move Pass)
                ("PlaceOutOfSight")   
                (forEach Piece 
                    (or
                        ("Move2Friends") 
                        (if 
                            (and 
                                (not (was Pass))
                                (not (can Move ("Move2Friends")))
                            ) 
                            ("MoveFromEnemies")
                        )
                    )
                )
                }
            )
        )
        (end 
            {
            (if 
                (and
                    (all Passed)
                    (> (score Mover) (score Next))
                )
                (result Mover Win)
            )
            (if 
                (and
                    (all Passed)
                    (<= (score Mover) (score Next))
                )
                (result Next Win)
            )
            }
        )
    )
)

