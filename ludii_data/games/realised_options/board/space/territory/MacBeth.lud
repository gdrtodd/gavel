(define "ReverseBoundedPieces" 
    (custodial
        (from (site))
        (between 
            if:(is Enemy (state at:(between))) 
            (apply 
                (allCombinations 
                    (add (piece "Disc0" state:(mover)) (to (site))) 
                    (flip (between)) 
                )
            )
        )
        (to if:(is Friend (state at:(to))))
    )
)

(game "MacBeth" 
    (players 2) 
    (equipment { 
        (board 
            (remove
                (hex 6)
                cells:{7 9 11 22 24 26 28 41 43 45 47 49 62 64 66 68 79 81 83}
            )
        )
        (piece "Disc" Neutral (flips 1 2))
    }) 
    (rules 
        
        phases:{ 
        
        (phase "Placement"
            (play
                (move Add
                    (piece
                        "Disc0" 
                        state:(mover)
                    )
                    (to 
                        (intersection 
                            (sites Empty) 
                            (sites Centre)
                        )
                    )
                )
            ) 
            (nextPhase Mover (>= (count Moves) 5) "Playing")
        )
        
        (phase "Playing" 
            (play (forEach Site 
                    (sites Empty)
                    (append 
                        "ReverseBoundedPieces" 
                        (then
                            (and
                                (set Score 
                                    P1 
                                    (count Sites in:(sites State 1))
                                )
                                (set Score 
                                    P2 
                                    (count Sites in:(sites State 2))
                                )
                            )
                        )
                    )
                )
            )
        )
        }
        
        (end
            (if (all Passed)
                (byScore)
            )
        )
    )
)

