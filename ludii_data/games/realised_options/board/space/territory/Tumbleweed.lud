(define "FriendlyInSight" 
    (count Sites in:(intersection (sites Occupied by:Mover) (sites LineOfSight at:(last From))))
)

(define "PlayableSites" 
    (forEach
        (sites Board)
        if:(>
            (count Sites in:(intersection (sites Occupied by:Mover) (sites LineOfSight at:(site))))
            (size Stack at:(site))
        )
    )
)

(define "TerritoryP1"
    (+ 
        (count Sites 
            in:(sites Occupied by:P1)
        )
        (count Sites
            in:(forEach
                (sites Empty)
                if:(>
                    (count Sites in:(intersection (sites Occupied by:P1) (sites LineOfSight at:(site))))
                    (count Sites in:(intersection (sites Occupied by:P2) (sites LineOfSight at:(site))))
                )
            )
        )
    )
)

(define "TerritoryP2"
    (+ 
        (count Sites 
            in:(sites Occupied by:P2)
        )
        (count Sites
            in:(forEach
                (sites Empty)
                if:(>
                    (count Sites in:(intersection (sites Occupied by:P2) (sites LineOfSight at:(site))))
                    (count Sites in:(intersection (sites Occupied by:P1) (sites LineOfSight at:(site))))
                )
            )
        )
    )
)

(game "Tumbleweed"
    (players 2)
    (equipment {
        (board (hex 8))
        (piece "Disc" Each)
        (piece "Disc" Neutral)
    })
    (rules
        (start (place Stack "Disc0" (centrePoint) count:2))
        phases:{
        (phase "Opening" 
            (play
                (if (= 0 (count Moves))
                    (move Add (piece "Disc1") (to (sites Empty)) (then (moveAgain)))
                    (if (= 1 (count Moves))
                        (move Add (piece "Disc2") (to (sites Empty)))
                        (move Select (from (union (sites Occupied by:P1) (sites Occupied by:P2)))
                            (then 
                                (if (= 1 (who at:(last From)))
                                    (do (swap Players 1 2) next:(set NextPlayer (player 1)))
                                    (pass)
                                )
                            )
                        )
                    )
                )
            )
            (nextPhase (= 3 (count Moves)) "Play")
        )
        (phase "Play"
            (play
                (or 
                    (move Select (from "PlayableSites")
                        (then
                            (add (to (last From)) count:(- "FriendlyInSight" ((size Stack at:(last From)))) stack:True)
                        )
                    )
                    (move Pass)
                )
            )
        )
        }
        (end
            (if
                (all Passed)
                (byScore {
                    (score P1 "TerritoryP1")
                    (score P2 "TerritoryP2")
                })
            )
        )
    )
)

