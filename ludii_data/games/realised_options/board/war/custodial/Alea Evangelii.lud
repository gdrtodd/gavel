(define "Custodial"
    (custodial 
        (from (last To)) 
        Orthogonal
        (between 
            (max 1) 
            if:("IsPieceAt" #1 Next (between))
            (apply (remove (between))) 
        )
        (to 
            if:(or {
                ("IsFriendAt" (to)) 
                (is In (to) (sites "Fortresses")) 
                (and 
                    (is In (to) (sites Centre)) 
                    (is Empty (to))
                )
            })
        ) 
    )
)

(define "CaptureJarl" (apply (trigger "Surrounded" P2)))

(define "JarlWasCaptured" (is Triggered "Surrounded" P2))

(define "EmptyButNotFortress" 
    (and 
        (not (is In (between) (sites "Fortresses"))) 
        (is Empty (between))
    )
)

(define "AFriendOrTheCentre" 
    (or 
        ("IsFriendAt" (to)) 
        (is In (to) (sites Centre))
    )
)

(define "JarlAndExpandedCentre" (and ("IsPieceAt" "Jarl" P2 (between)) (is In (between) (expand origin:(centrePoint) Orthogonal))))

(define "JarlButNotTheExpandedCentre" (and ("IsPieceAt" "Jarl" P2 (between)) (not (is In (between) (expand origin:(centrePoint) Orthogonal)))))

(game "Alea Evangelii" 
    (players 2) 
    (equipment { 
        (board (square 19)) 
        (regions "Fortresses" (expand (sites Corners)))
        
        (piece "Thrall" P1 
            (move Slide
                Orthogonal 
                (between if:"EmptyButNotFortress") 
                (to (apply if:(!= (to) (centrePoint))))
                (then 
                    (or {
                        ("Custodial" "Thrall2")
                        (surround 
                            (from (last To)) 
                            Orthogonal
                            (between 
                                if:"JarlAndExpandedCentre" 
                                "CaptureJarl"
                            )
                            (to if:"AFriendOrTheCentre")
                        )
                        (custodial 
                            (from (last To)) 
                            Orthogonal
                            (between 
                                if:"JarlButNotTheExpandedCentre" 
                                "CaptureJarl"
                            )
                            (to if:("IsFriendAt" (to))) 
                        )
                    })
                )
            )
        )
        (piece "Thrall" P2 
            (move Slide
                Orthogonal 
                (between if:"EmptyButNotFortress") 
                (to (apply if:(!= (to) (centrePoint)))) 
                (then ("Custodial" "Thrall1")) 
            ) 
        )
        (piece "Jarl" P2 
            (move Slide
                Orthogonal 
                (to (apply if:(!= (to) (centrePoint))))
            )
        )
    }) 
    (rules 
        (start { 
            (place "Thrall1" {"C1" "F1" "N1" "Q1" "A3" "F3" "N3" "S3" "H4" "L4" "G5" "I5" "K5" "M5"
                "A6" "C6" "Q6" "S6" "E7" "O7" "D8" "P8" "E9" "O9" "E11" "O11" "D12"
                "P12" "E13" "O13" "A14" "C14" "Q14" "S14" "G15" "I15" "K15" "M15" "H16" "L16"
                "A17" "F17" "N17" "S17" "C19" "F19" "N19" "Q19"
            })
            (place "Thrall2" {"J4" "F6" "N6" "J7" "I8" "K8" "H9" "J9" "L9" "D10" "G10" "I10" "K10" "M10" "P10"
                "H11" "J11" "L11" "I12" "K12" "J13" "F14" "N14" "J16"
            })
            (place "Jarl2" (centrePoint))
        })
        
        (play (forEach Piece))
        
        (end {
            ("PieceTypeReachWin" "Jarl2" (sites "Fortresses") P2)
            (if "JarlWasCaptured" (result P1 Win))
        })
    )
)

