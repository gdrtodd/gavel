(define "CaptureAgainIn"
    (move Select
        (from #1) 
        (to 
            (sites Around #1) 
            if:(and { 
                (not (is Visited (to))) 
                (is Empty (to)) 
                ("IsEnemyAt" (ahead #2 #3))
            })
        )
    )
)

(define "EmptyButNotVisitedWithEnemyIn"
    (and { 
        (not (is Visited (to))) 
        (is Empty (to)) 
        ("IsEnemyAt" (ahead #1 #2))
    })
)

(define "EmptyWithEnemyIn"
    (and 
        (is Empty (to)) 
        ("IsEnemyAt" (ahead #1 #2))
    )
)

(define "RemoveEnemyPiece"
    (to 
        if:("IsEnemyAt" (to)) 
        (apply (remove (to)))
    )
)

(define "MoveThePiece"
    (fromTo 
        (from (last From)) 
        (to (last To))
    ) 
)

(define "MoveAgainIn"
    (move Select
        (from #1) 
        (to 
            (sites Around #1) 
            if:("EmptyButNotVisitedWithEnemyIn" #2 #3)
        ) 
        (then 
            (and {
                "MoveThePiece" 
                (directional 
                    (from #4) 
                    #5
                    "RemoveEnemyPiece"
                ) 
                (if 
                    (can Move
                        (or 
                            ("CaptureAgainIn" #1 (to) SameDirection)
                            ("CaptureAgainIn" #1 (from) OppositeDirection)
                        )
                    )
                    (moveAgain)
                )
            })
        )
    )
)

(define "CaptureFromLast" 		
    (or 
        ("MoveAgainIn" #1 (to) SameDirection (last To) ("LastDirection" Vertex))
        ("MoveAgainIn" #1 (from) OppositeDirection (last From) (directions Vertex from:(last To) to:(last From)))
    )
)

(define "MoveIn"
    (forEach Piece 
        (move Select
            (from) 
            (to 
                (sites Around (from)) 
                if:("EmptyWithEnemyIn" #1 #2)
            ) 
            (then 
                (and 
                    "MoveThePiece" 
                    (directional
                        (from #3) 
                        #4
                        "RemoveEnemyPiece"
                    )
                ) 
            )
        ) 
        (then 
            (if 
                (can Move ("CaptureFromLast" (last To))) 
                (moveAgain)
            )
        ) 
    )
)

(game "Fanorona" 
    (players 2) 
    (equipment { 
        ("AlquerqueBoard" 5 9)
        (piece "Marker" Each)
    }) 
    
    (rules 
        (start { 
            (place "Marker1" (union { (union (expand (sites Bottom)) (sites {"B3" "D3" "G3" "I3"}))}))
            (place "Marker2" (union { (union (sites {"A3" "C3" "F3" "H3"}) (expand (sites Top)))}))
        })
        
        (play
            (if "SameTurn"
                (or 
                    (if (is Occupied (last To)) 
                        ("CaptureFromLast" (last To)) 
                        ("CaptureFromLast" (last From))
                    )
                    (move Pass)
                )
                (priority {
                    (or 
                        ("MoveIn" (to) SameDirection (last To) ("LastDirection" Vertex))
                        ("MoveIn" (from) OppositeDirection (last From) (directions Vertex from:(last To) to:(last From)))
                    )
                    (forEach Piece "StepToEmpty")
                })
            )
        )
        
        (end (if (no Pieces Mover) (result Next Win)))
    )
)

