(define "Hop" 
    ("HopCapture" ~ ~
        (then
            (and 
                ("PromoteIfReach" (sites Next) "DoubleCounter")
                ("HasCaptured")
            )
        )
    ) 
)

(define "HasCaptured" (set Value Mover 0))
(define "HasNotCaptured" (set Value Mover 1))
(define "DidNotCaptured" (= (value Player Prev) 1))
(define "RememberSiteWithPossibleCapture" 
    (set Pending 
        (sites From
            (or 
                (forEach Piece "Counter" 
                    ("Hop")
                ) 
                (forEach Piece "DoubleCounter" 
                    ("Hop")
                )
            )
        )
    )
)

(define "SitesWithPossibleCaptureInPreviousTurn" (sites Pending))

(define "ShouldCapturedButMoved" 
    (and 
        (is In (last From) ("SitesWithPossibleCaptureInPreviousTurn")) 
        (is In (last From) (sites Empty))
    )
)

(define "HuffOnePieceOf" 
    (move
        Select 
        (from #1
            if:(is Occupied (from))
        )
        (then 
            (and {
                (remove (last To)) 
                (moveAgain) 
                (set Value Prev 0)
            })
        )
    )
)

(game "Kharberg"
    (players 2)
    (equipment {
        ("AlquerqueBoard" 5 5)
        (regions P1 (sites Bottom))
        (regions P2 (sites Top))
        (piece "Counter" Each
            (or
                ("Hop") 
                ("StepToEmpty" ~ (then ("HasNotCaptured")))
                (then ("PromoteIfReach" (sites Next) "DoubleCounter"))
            )
        )
        (piece "DoubleCounter" Each
            (or
                ("Hop") 
                (move Slide (then ("HasNotCaptured")))
            )
        )
    })
    (rules 
        (start { 
            (place "Counter1" (union {(expand (sites Bottom)) (sites {"D3" "E3"}) }))
            (place "Counter2" (union {(sites {"A3" "B3"}) (expand (sites Top)) }))
        })
        (play 
            (or
                (if ("DidNotCaptured")
                    (or
                        (if ("ShouldCapturedButMoved") 
                            ("HuffOnePieceOf" (last To))
                        )
                        ("HuffOnePieceOf" ("SitesWithPossibleCaptureInPreviousTurn"))
                    )
                )
                (do 
                    ("RememberSiteWithPossibleCapture") 
                    next:(forEach Piece)
                )
            )
        )
        (end ("BlockWin"))
    )
)

