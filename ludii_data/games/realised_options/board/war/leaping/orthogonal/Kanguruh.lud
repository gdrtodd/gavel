(define "ConnectedEdges"
    (!= 0 (count Sites in:(forEach (sites Occupied by:#1) if:(is Connected at:(site) Orthogonal #1))))
)

(game "Kanguruh"
    (players 2)
    (equipment {
        (board (square 8))
        (piece "Kangaroo" Each
            (move Hop
                (between if:(is Occupied (between)))
                (to
                    if:(is Empty (to))
                    (apply
                        (and {
                            (if ("IsEnemyAt" (between))
                                (remove (between))
                            )
                            (remember Value (from))
                            (remember Value (to))
                        })
                    )
                )
                (then
                    ("ReplayIfCanMove" 
                        (hop
                            (from (last To))
                            (between if:(is Occupied (between)))
                            (to if:(and (is Empty (to)) (not (is In (to) (values Remembered)))))
                        )
                        (forget Value All)
                    )
                )
            )
        )
    })
    (rules
        (start {
            (place "Kangaroo1" (expand (sites Bottom)))
            (place "Kangaroo2" (expand (sites Top)))
        })
        
        (play 
            (if ("SameTurn")
                (or
                    (move Pass
                        (then (forget Value All))
                    )
                    (move Hop
                        (from (last To))
                        (between if:(is Occupied (between)))
                        (to 
                            if:(and (is Empty (to)) (not (is In (to) (values Remembered))))
                            (apply
                                (and
                                    (if ("IsEnemyAt" (between))
                                        (remove (between))
                                    )
                                    (remember Value (to))
                                )
                            )
                        )
                        (then
                            ("ReplayIfCanMove"
                                (hop
                                    (from (last To))
                                    (between if:(is Occupied (between)))
                                    (to if:(and (is Empty (to)) (not (is In (to) (values Remembered)))))
                                )
                                (forget Value All)
                            )
                        )
                    )
                )
                (forEach Piece)
            )
        )
        
        (end (if (no Moves Next) 
                (byScore {
                    (score P1 (count Pieces P1))
                    (score P2 (count Pieces P2))
                })
            )
        )
    )
)

