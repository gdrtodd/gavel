(define "HasNeverMoved"
    (= (state at:#1) 1) 
)

(define "PieceHasMoved"
    (set State at:#1 0) 
)

(define "RememberPieceHasMoved"
    (then 
        (if 
            (= (state at:(last To)) 1) 
            ("PieceHasMoved" (last To))
        ) 
    ) 
)

(define "SetEnPassantLocation"
    (then 
        (set Pending (ahead (last To) Backward))
    )
)

(define "InLocationEnPassant"
    (and 
        (is Pending) 
        (= (to) (value Pending)) 
    )
)

(define "EnPassant"
    (move Step 
        (directions {FR FL}) 
        (to 
            if:(and 
                ("InLocationEnPassant")
                (= (id "Pawn" Next) (what at:(ahead (from) Forward)))
            )
        ) 
        (then 
            (remove 
                (ahead (last To) Backward)
            )
        )
    )
)

(game "Main Chator (Selangor)"
    ("TwoPlayersNorthSouth") 
    (equipment { 
        (board (square 8)) 
        
        (piece "Pawn" Each 
            (if (= 0 (state at:(from)))
                (or {
                    (if (is In (from) (sites Start (piece (what at:(from)))))
                        ("DoubleStepForwardToEmpty" "SetEnPassantLocation")
                    )
                    "StepForwardToEmpty" 
                    ("StepToEnemy" (directions {FR FL}))
                    "EnPassant"
                    (move Step 
                        (directions {FR FL}) 
                        (to 
                            if:(and
                                ("InLocationEnPassant")
                                (= (id "Pawn" Next) (what at:(ahead (from) Forward)))
                            )
                        ) 
                        (then 
                            (remove 
                                (ahead (last From) (if (is Mover P1) N S))
                            )
                        )
                    )
                    }
                    (then
                        (if (is In (last To) (sites Mover "Promotion")) 
                            (if (is In (last To) (sites Corners))
                                (moveAgain)
                                (if (is In (last To) (intersection (sites Mover "Promotion") (expand (sites Corners))))
                                    (set State at:(last To) 1)
                                    (if (is In (last To) (intersection (sites Mover "Promotion") (expand (sites Corners) steps:2)))
                                        (set State at:(last To) 2)
                                        (set State at:(last To) 3)
                                    )
                                )
                            )
                        )
                    )
                )
                ("StepToEmpty" 
                    (directions {BR BL}) 
                    (then
                        (and
                            (if (= 1 (state at:(last To)))
                                (moveAgain)
                            )
                            (set State at:(last To) (- (state at:(last To)) 1))
                        )
                    )
                )
            )
        )
        ("ChessRook" "Rook")
        (piece "King_noCross" Each 
            (if (= (count Pieces Mover) 1)
                (or
                    ("LeapCapture" "KnightWalk")
                    ("SlideCapture")
                )
                (or {
                    ("StepToNotFriend")
                    (if (and ("HasNeverMoved" (from)) (!= (value Player Mover) (mover)))
                        ("LeapToEmpty" "KnightWalk"
                            (then (set Value Mover (mover)))
                        )
                    )
                    (if ("HasNeverMoved" (from))
                        (move Hop 
                            (directions {E W})
                            (between if:True)
                            (to if:(is Empty (to)))
                        )
                    )
                    }
                    "RememberPieceHasMoved"
                )
            )
        )
        ("ChessBishop" "Elephant")
        ("ChessKnight" "Knight")
        ("ChessQueen" "Ferz_noCross")
        (regions "Promotion" P1 (sites Top))
        (regions "Promotion" P2 (sites Bottom))
    })
    (rules 
        (start { 
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 6))
            (place "Rook1" {"A1" "H1"}) (place "Knight1" {"B1" "G1"}) (place "Elephant1" {"C1" "F1"}) (place "King_noCross1" coord:"D1" state:1) (place "Ferz_noCross1" coord:"E1") 
            (place "Rook2" {"A8" "H8"}) (place "Knight2" {"B8" "G8"}) (place "Elephant2" {"C8" "F8"}) (place "King_noCross2" coord:"E8" state:1) (place "Ferz_noCross2" coord:"D8") 
        })
        
        (play 
            (if "SameTurn"
                (move Promote (last To) (piece {"Knight" "Elephant" "Rook" "Ferz_noCross"}) Mover)
                (do 
                    (forEach Piece) 
                    ifAfterwards:(not ("IsInCheck" "King_noCross" Mover))
                    (then
                        (if (!= (next) (value Player Next))
                            (if ("IsInCheck" "King_noCross" Next)
                                (set Value Next (next))
                            )
                        )
                    )		
                )
            )
        )
        
        (end {
            ("Checkmate" "King_noCross") 
            ("MisereBlockWin")
            (if (= (count Pieces Next) 1) (result Mover Win)) 
        })
    )
)

