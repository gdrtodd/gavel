(game "Mak Ruk" 
    ("TwoPlayersNorthSouth") 
    (equipment { 
        (board (square 8)) 
        ("ChessPawn" "Pawn" ~ (then ("PromoteIfReach" (sites Mover "Promotion") "Ferz_noCross")))
        ("ChessRook" "Rook")
        (piece "King_noCross" Each ("StepToNotFriend" Orthogonal))
        (piece "Bishop_noCross" Each 
            (or
                ("StepToNotFriend" (directions {FL FR Forward}))
                ("StepToEmpty" (directions {BL BR}))
            )
        )
        ("ChessKnight" "Knight")
        (piece "Ferz_noCross" Each 
            (or
                (if (= (state at:(from)) 1)
                    (move (from) (to (ahead (ahead (from) N) N) if:(is Empty (to))))
                    (then (set State at:(last To) 0))
                )
                ("StepToNotFriend" (directions {BL BR FL FR Forward}))
            )
        )
        (regions "Promotion" P1 (sites Top))
        (regions "Promotion" P2 (sites Bottom))
    }) 
    (rules 
        (start { 
            (place "Pawn1" (sites Row 2))
            (place "Pawn2" (sites Row 5))
            (place "Rook1" {"A1" "H1"}) (place "Knight1" {"B1" "G1"}) (place "Bishop_noCross1" {"C1" "F1"}) (place "Ferz_noCross1" coord:"E1" state:1) (place "King_noCross1" coord:"D1") 
            (place "Rook2" {"A8" "H8"}) (place "Knight2" {"B8" "G8"}) (place "Bishop_noCross2" {"C8" "F8"}) (place "Ferz_noCross2" coord:"D8" state:1) (place "King_noCross2" coord:"E8") 
        })
        
        (play 
            (do (forEach Piece) ifAfterwards:(not ("IsInCheck" "King_noCross" Mover)))
        )
        
        (end {
            ("Checkmate" "King_noCross")
            ("DrawIfNoMoves" Next)
            (if (and {(= (count Pieces Next) 1) (= (count Pieces Mover) 2) ("IsNotOffBoard" (where "Ferz_noCross" Mover))})
                (result Mover Draw)
            )
        })
    )
)

