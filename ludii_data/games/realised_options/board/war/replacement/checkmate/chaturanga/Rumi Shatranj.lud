(game "Rumi Shatranj"
    ("TwoPlayersNorthSouth") 
    (equipment {
        (board (square 8))
        (hand Each size:5)
        ("ChessKing" "King_noCross")
        ("ChessRook" "Rook")
        (piece "Elephant" Each
            (move Hop Diagonal 
                (between if:True) 
                (to 
                    if:(or 
                        (is Empty (to)) 
                        (and ("IsEnemyAt" (to)) (not ("IsPieceAt" "Elephant" Next (to))))
                    ) 
                    (apply (remove (to)))
                ) 
            )
        )
        ("ChessKnight" "Knight")
        ("ChessPawn" "Pawn" ~ (then ("ReplayInMovingOn" (sites Mover "Promotion"))))
        (piece "Ferz_noCross" Each ("StepToNotFriend" Diagonal))
        (regions "Promotion" P1 (sites Top))
        (regions "Promotion" P2 (sites Bottom))
    })
    (rules 
        (start { 
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 6))
            (place "Rook1" {"A1" "H1"}) (place "Knight1" {"B1" "G1"}) (place "Elephant1" {"C1" "F1"}) (place "Ferz_noCross1" coord:"D1") (place "King_noCross1" coord:"E1") 
            (place "Rook2" {"A8" "H8"}) (place "Knight2" {"B8" "G8"}) (place "Elephant2" {"C8" "F8"}) (place "Ferz_noCross2" coord:"D8") (place "King_noCross2" coord:"E8") 
        })
        
        phases:{
        (phase "OpeningCounselor" 
            (play 
                (forEach Piece "Ferz_noCross"
                    (move Hop Forward 
                        (between if:True) 
                        (to 
                            if:(is Empty (to)) 
                            (apply (remove (to)))
                        ) 
                    )
                )
            )
            (nextPhase Mover "OpeningSoldier")
        )
        (phase "OpeningSoldier" 
            (play 
                (forEach Piece "Pawn"
                    (if 
                        (is In (from) (sites {"D2" "D7"}))
                        (move Hop Forward 
                            (between if:True) 
                            (to 
                                if:(is Empty (to)) 
                                (apply (remove (to)))
                            ) 
                        )
                    )
                )
            )
            (nextPhase Mover "Playing")
        )
        (phase "Playing" 
            (play 
                (if "SameTurn"
                    (move Promote (last To) (piece "Ferz_noCross") Mover)
                    (do (forEach Piece) ifAfterwards:(not ("IsInCheck" "King_noCross" Mover)))
                )
            )
        )
        }
        (end {
            ("Checkmate" "King_noCross")
            ("BlockWin")
        })
    )
)

