
(game "Santaraj"
    ("TwoPlayersNorthSouth") 
    (equipment {
        (board (square 8))
        (hand Each size:5)
        ("ChessKing" "King_noCross")
        ("ChessRook" "Castle")
        (piece "Ferz_noCross" Each
            (move Hop Diagonal 
                (between (exact 2) if:True) 
                (to
                    if:(not ("IsFriendAt" (to))) 
                    (apply (if ("IsEnemyAt" (to)) (remove (to)))) 
                ) 
            )		
        )
        ("ChessKnight" "Knight")
        ("ChessPawn" "Pawn" ~ (then ("PromoteIfReach" (sites Mover "Promotion") "Queen")))
        (piece "Queen" Each ("StepToNotFriend" Diagonal))
        (regions "Promotion" P1 (sites Top))
        (regions "Promotion" P2 (sites Bottom))
    })
    (rules 
        (start { 
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 6))
            (place "Castle1" {"A1" "H1"}) (place "Knight1" {"B1" "G1"}) (place "Ferz_noCross1" {"C1" "F1"}) (place "Queen1" coord:"D1") (place "King_noCross1" coord:"E1") 
            (place "Castle2" {"A8" "H8"}) (place "Knight2" {"B8" "G8"}) (place "Ferz_noCross2" {"C8" "F8"}) (place "Queen2" coord:"D8") (place "King_noCross2" coord:"E8") 
        })
        (play 
            (do
                (forEach Piece)
                ifAfterwards:(not ("IsInCheck" "King_noCross" Mover))
                (then 
                    (if
                        (and
                            (> (count Pieces P1) 1) 
                            (> (count Pieces P2) 1) 
                        )	
                        (set Counter)
                    )
                )
            )		
        )
        (end {
            ("Checkmate" "King_noCross")
            (if 
                (and 
                    (or
                        (= (count Pieces P1) 1) 
                        (= (count Pieces P2) 1) 
                    )	
                    (= (counter) 20)
                ) 
                (result Mover Draw)
            ) 
        })
    )
)

