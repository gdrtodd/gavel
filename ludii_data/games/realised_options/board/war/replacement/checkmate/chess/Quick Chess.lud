(define "CaptureToPieceAndResetCounter"
    (apply 
        (if ("IsEnemyAt" (to))
            (and
                (remove 
                    (to) 
                    (then (set Counter))
                )
                (remember Value "CapturedPieces" (what at:(to)))
            )
        )
    ) 
)

(define "CaptureForwardDiagonal"
    (move Step 
        (directions {FR FL}) 
        (to 
            if:("IsEnemyAt" (to)) 
            (apply 
                (and
                    (remove (to))
                    (remember Value "CapturedPieces" (what at:(to)))
                )
            )
        )
    )
)

(define "WasCaptured" (is In #1 (values Remembered "CapturedPieces")))

(define "PromoteMove" 
    (or {
        (if ("WasCaptured" (id "Queen" Mover))
            (move Promote #1 (piece {"Queen"}) Mover)
        )
        (if ("WasCaptured" (id "Knight" Mover))
            (move Promote #1 (piece {"Knight"}) Mover)
        )
        (if ("WasCaptured" (id "Rook" Mover))
            (move Promote #1 (piece {"Rook"}) Mover)
        )
        (if ("WasCaptured" (id "Bishop" Mover))
            (move Promote #1 (piece {"Bishop"}) Mover)
        )
        }
        #2		
    )		
)

(game "Quick Chess" 
    ("TwoPlayersNorthSouth") 
    (equipment { 
        (board (rectangle 6 5)) 
        
        (piece "Pawn" Each 
            (or {
                "StepForwardToEmpty" 
                "CaptureForwardDiagonal"
                }
                (then
                    (and
                        (if (and (is In (last To) (sites Mover "Promotion")) (can Move ("PromoteMove" (last To))))
                            (moveAgain)
                        )
                        (set Counter)
                    )
                )
            )
        )
        
        (piece "Rook" Each 
            (move Slide 
                Orthogonal 
                (to 
                    if:("IsEnemyAt" (to)) 
                    "CaptureToPieceAndResetCounter"
                ) 
            )
        )
        (piece "King" Each 
            (move Step 
                (to 
                    if:(not ("IsFriendAt" (to))) 
                    "CaptureToPieceAndResetCounter"
                ) 
            )
        )
        (piece "Bishop" Each 
            (move Slide 
                Diagonal 
                (to 
                    if:("IsEnemyAt" (to)) 
                    "CaptureToPieceAndResetCounter"
                ) 
            )
        )
        (piece "Knight" Each 
            (move Leap 
                "KnightWalk" 
                (to 
                    if:(not ("IsFriendAt" (to))) 
                    "CaptureToPieceAndResetCounter"
                ) 
            )
        )
        (piece "Queen" Each 
            (move Slide 
                (to 
                    if:("IsEnemyAt" (to)) 
                    "CaptureToPieceAndResetCounter"
                ) 
            ) 
        )
        
        (regions "Promotion" P1 (sites Top))
        (regions "Promotion" P2 (sites Bottom))
    }) 
    (rules 
        (start { 
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 4))
            
            (place "Rook1" {"E1"}) (place "Knight1" {"A1"}) (place "Bishop1" {"D1"}) (place "Queen1" coord:"C1") (place "King1" coord:"B1") 
            (place "Rook2" {"E6"}) (place "Knight2" {"A6"}) (place "Bishop2" {"D6"}) (place "Queen2" coord:"C6") (place "King2" coord:"B6") 
            
        })
        
        (play 
            (if "SameTurn"
                ("PromoteMove" (last To))
                (do 
                    (forEach Piece)
                    ifAfterwards:(not ("IsInCheck" "King" Mover))
                )
                (then
                    (if
                        (= 19 (counter))
                        (and
                            (forEach Player
                                (forEach Site (sites Occupied by:Player)
                                    (if (= (what at:(site)) (id "Pawn" Player))
                                        (addScore Player 1)
                                        (if (= (what at:(site)) (id "Rook" Player))
                                            (addScore Player 5)
                                            (if (= (what at:(site)) (id "Queen" Player))
                                                (addScore Player 9)
                                                (if (!= (what at:(site)) (id "King" Player))
                                                    (addScore Player 3)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                            (set Var "NoEnoughCapture" 1)
                        )
                    )
                )
            )
        )
        
        (end {
            ("Checkmate" "King")
            (if (no Moves Mover) (result Mover Draw))
            (if (= (var "NoEnoughCapture") 1) (byScore)) 
        })
    )
)

