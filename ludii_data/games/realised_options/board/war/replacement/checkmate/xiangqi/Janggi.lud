(define "StepMoveOnThePlace" 
    (move Step
        (if 
            (is In (from) (sites Mover "PalaceOrtho")) 
            Orthogonal 
            All
        ) 
        (to 
            if:(and 
                (is In (to) (sites Mover "Palace")) 
                (not ("IsFriendAt" (to)))
            ) 
            (apply (remove (to)))
        )
    ) 
) 

(define "ThePalaces" 
    (union (sites P1 "Palace") (sites P2 "Palace"))
)

(define "GeneralNotCheck"
    (not (is Threatened (if (is Mover P2) (id "Cho2") (id "Han1")))) 
)

(define "GeneralSameColumnWithNoPieceBetween"
    (if (= (column of:(where "Han" P1)) (column of:(where "Cho" P2))) 
        ("NoSites" (forEach (sites Direction from:(where "Han" P1) N stop:(= (to) (where "Cho" P2))) if:(is Occupied (site))))
        False
    )
)

(define "InitCounter"
    (if (!= (var) 1) (set Var 1) (set Var 0))
)

(define "ResetCounter"
    (set Var 0)
)

(define "SinceOnTurn"
    (= (var) 0) 
)

(define "GeneralEnemyCheck"
    (is Threatened (if (is Next P2) (id "Cho2") (id "Han1"))) 
)

(define "EnemyCannotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not "GeneralEnemyCheck"))))
)

(define "NotEmptyAndNotAnotherPo" 
    (and {
        (not ("IsPieceAt" "Po" P1 (between))) 
        (not ("IsPieceAt" "Po" P2 (between)))  
        (is Occupied (between))
    })
)

(define "NotAFriendAndNotNextPo" 
    (and 
        (not ("IsPieceAt" "Po" Next (to))) 
        (not ("IsFriendAt" (to)))
    )
)

(define "PawnMove" 
    (move Step
        (directions {Forward Rightward Leftward}) 
        (to 
            if:(not ("IsFriendAt" (to)))
            (apply (remove (to))) 
        )
    )
)

(game "Janggi" 
    (players 2) 
    (equipment { 
        (board (rectangle 10 9) use:Vertex)
        
        (piece "Han" P1 "StepMoveOnThePlace") 
        (piece "Cho" P2 "StepMoveOnThePlace") 
        
        (piece "Sa" Each "StepMoveOnThePlace") 
        
        (piece "Sang" Each 
            (forEach Direction 
                Orthogonal 
                (to if:(is Empty (to)) 
                    (apply 
                        (forEach Direction 
                            (from (to)) 
                            (directions {FR FL} of:All)
                            (between (exact 2) if:(is Empty (between)))
                            (if (not ("IsFriendAt" (to)))
                                (move 
                                    (from)
                                    (to 
                                        (apply 
                                            if:("IsEnemyAt" (to))
                                            (remove (to))
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            ) 
        )
        
        (piece "Ma" Each 
            (forEach Direction 
                Orthogonal 
                (to 
                    if:(is Empty (to)) 
                    (apply 
                        (forEach Direction 
                            (from (to)) 
                            (directions {FR FL} of:All) 
                            (if (not ("IsFriendAt" (to))) 
                                (move 
                                    (from) 
                                    (to 
                                        (apply 
                                            if:("IsEnemyAt" (to))
                                            (remove (to))
                                        )
                                    )
                                )
                            )
                        ) 
                    )
                )
            ) 
        )
        
        (piece "Cha" Each (or {
                ("SlideCapture" Orthogonal) 
                
                (if 
                    (is In (from) "ThePalaces") 
                    (move Slide
                        Diagonal 
                        (between 
                            (max 2) 
                            if:(and 
                                (is Empty (between)) 
                                (is In (between) "ThePalaces")
                            )
                        )
                        (to 
                            if:("IsEnemyAt" (to)) 
                            (apply (remove (to))) 
                        )
                    )
                )
            })
        )
        
        (piece "Po" Each 
            (or {
                (move Hop
                    Orthogonal 
                    (between 
                        before:(count Rows) 
                        after:(count Rows) 
                        if:"NotEmptyAndNotAnotherPo"
                    ) 
                    (to 
                        if:(is Empty (to)) 
                        (apply 
                            if:"NotAFriendAndNotNextPo" 
                            (remove (to))
                        )
                    ) 
                )
                (move Hop
                    Orthogonal
                    (between 
                        before:(count Rows) 
                        after:(count Rows) 
                        if:"NotEmptyAndNotAnotherPo"
                    ) 
                    (to if:(is Empty (to)))
                )
                
                (if 
                    (is In (from) "ThePalaces")
                    (move Hop
                        Diagonal 
                        (between if:"NotEmptyAndNotAnotherPo") 
                        (to 
                            if:(and 
                                "NotAFriendAndNotNextPo" 
                                (is In (to) "ThePalaces")
                            ) 
                            (apply (remove (to)))
                        ) 
                    )
                )
            })
        )
        
        (piece "Byeong" P1 N "PawnMove")
        (piece "Jol" P2 S "PawnMove") 
        
        (regions "PalaceP1" P1 { 3..5 12..14 21..23 })
        (regions "PalaceOrthoP1" P1 { 4 12 14 22 })
        (regions "PalaceP2" P2 { 66..68 75..77 84..86 })
        (regions "PalaceOrthoP2" P2 { 67 75 77 85 })
    }) 
    
    (rules 
        (start { 
            (place "Han1" coord:"E2") (place "Sa1" {"D1" "F1"}) (place "Sang1" {"C1" "G1"}) (place "Ma1" {"B1" "H1"}) (place "Cha1" {"A1" "I1"}) (place "Po1" {"B3" "H3"}) (place "Byeong1" {"A4" "C4" "E4" "G4" "I4"})
            (place "Cho2" coord:"E9") (place "Sa2" {"D10" "F10"}) (place "Sang2" {"C10" "G10"}) (place "Ma2" {"B10" "H10"}) (place "Cha2" {"A10" "I10"}) (place "Po2" {"B8" "H8"}) (place "Jol2" {"A7" "C7" "E7" "G7" "I7"})
        })
        
        (play (do (forEach Piece) ifAfterwards:"GeneralNotCheck" 
                (then 
                    (if 
                        "GeneralSameColumnWithNoPieceBetween"
                        "InitCounter"
                        "ResetCounter"
                    )
                )
            )
        )
        
        (end {
            (if (and 
                    ("GeneralEnemyCheck")
                    ("EnemyCannotMove")
                ) 
                (result Mover Win)
            )
            (if (and 
                    ("GeneralSameColumnWithNoPieceBetween")
                    ("SinceOnTurn") 
                )
                (result Mover Draw)
            )
        })
    )
)

