(define "JiangSameColumnWithNoPieceBetween"
    (if (= (column of:(where "Jiang" P1)) (column of:(where "Jiang" P2)))
        (not ("NoSites" (forEach (sites Direction from:(where "Jiang" P1) N stop:(= (to) (where "Jiang" P2))) if:(is Occupied (site)))))
        True
    )
)

(define "StepMoveOnThePalace" 
    (move Step
        #1 
        (to 
            if:(and 
                (is In (to) (sites Mover "Palace")) 
                (not ("IsFriendAt" (to)))
            ) 
            (apply (remove (to)))
        )
    ) 
)

(game "Xiang Hex" 
    ("TwoPlayersNorthSouth") 
    (equipment { 
        (board (renumber Cell (rotate 90 (remove (hex Rectangle 9 11) cells:{0 1 11 21 63 74 85 84 94 93 83 73 31 20 9 10}))))
        
        (piece "Jiang" Each ("StepMoveOnThePalace" Orthogonal)) 
        
        (piece "Shi" Each ("StepMoveOnThePalace" Diagonal)) 
        
        (piece "Xiang" Each 
            (move Slide
                Diagonal 
                (between 
                    (exact 2) 
                    if:(and { 
                        (is In (between) (sites Mover "Home")) 
                        (is Empty (between)) 
                    })
                )
                (to 
                    if:("IsEnemyAt" (to)) 
                    (apply (remove (to)))
                ) 
            )
        ) 
        
        (piece "Ma" Each 
            (forEach Direction 
                Orthogonal 
                (to 
                    if:(is Empty (to)) 
                    (apply 
                        (forEach Direction 
                            (from (to)) 
                            (directions {FR FL} of:All) 
                            (if (not ("IsFriendAt" (to))) 
                                (move 
                                    (from) 
                                    (to 
                                        (apply 
                                            if:("IsEnemyAt" (to))
                                            (remove (to))
                                        )
                                    )
                                )
                            )
                        ) 
                    )
                )
            ) 
        )
        
        (piece "Ju" Each ("SlideCapture" Orthogonal))
        
        (piece "Pao" Each 
            (or 
                (move Slide Orthogonal) 
                (move Hop
                    Orthogonal 
                    (between 
                        before:(count Rows) 
                        after:(count Rows) 
                        if:(is Occupied (between))
                    )
                    (to 
                        if:(is Empty (to)) 
                        (apply 
                            if:("IsEnemyAt" (to)) 
                            (remove (to))
                        )
                    ) 
                ) 
            )
        )
        
        (piece "Zu" Each
            ("StepToNotFriend"
                (if 
                    (is In (from) (sites Mover "Home")) 
                    Forward 
                    (union (directions {Forward FL FR}) (directions {W E}))
                ) 
            )
        )
        
        (regions "PalaceP1" P1 { 0 1 2 4 7 8 12 })
        (regions "PalaceP2" P2 { 66 70 71 74 76 77 78 })
        (regions "Home" P1 (forEach (sites Board) if:(< (site) 37)))
        (regions "Home" P2 (forEach (sites Board) if:(> (site) 41)))
    }) 
    
    (rules 
        (start { 
            (place "Jiang1" coord:"A1") (place "Shi1" {"A2" "B1"}) (place "Xiang1" {"A3" "C1"}) (place "Ma1" {"A4" "D1"}) (place "Ju1" {"A5" "E1"}) (place "Pao1" {"B5" "E2"}) (place "Zu1" {"B6" "C5" "D4" "E3" "F2"})
            (place "Jiang2" coord:"K11") (place "Shi2" {"J11" "K10"}) (place "Xiang2" {"I11" "K9"}) (place "Ma2" {"H11" "K8"}) (place "Ju2" {"G11" "K7"}) (place "Pao2" {"G10" "J7"}) (place "Zu2" {"F10" "G9" "H8" "I7" "J6"})
        })
        
        (play (do 
                (forEach Piece) 
                ifAfterwards:(and 
                    ("JiangSameColumnWithNoPieceBetween")
                    (not ("IsInCheck" "Jiang" Mover))
                )
            )
        )
        
        (end {
            ("Checkmate" "Jiang")
            ("BlockWin")
        })
    )
)

