(define "RemainingMove"
    (if (= Undefined (value Player Mover)) 
        1
        (value Player Mover)
    )
)

(define "PieceMovement"
    (move Slide
        #1
        (between 
            (max ("RemainingMove"))
            if:(not ("IsEnemyAt" (between)))
        )
        (to
            if:("IsEnemyAt" (to))
            (apply
                if:(not ("IsFriendAt" (to)))
                (if ("IsEnemyAt" (to))
                    (remove (to)
                        (then (set Value Next (+ (value Player Next) 1)))
                    )
                )
            )
        )
        (then
            (if (<= (- ("RemainingMove") (count Steps (last From) (last To))) 0)
                (set Value Mover (- 7 (count Pieces Mover)))
                (and
                    (set Value Mover (- ("RemainingMove") (count Steps (last From) (last To))))
                    (moveAgain)
                )
            )
        )
    )		
)

(game "Annuvin"
    (players 2)
    (equipment {
        (board (rotate 30 (hex 4)))
        (piece "Ball" Each ("PieceMovement"))
        (hand Each)
    })
    (rules
        (start {
            (place "Ball1" (difference (union {(sites Side NW) (sites Side NE) (expand (sites Side N))}) (union (sites Left) (sites Right))))
            (place "Ball2" (difference (union {(sites Side SW) (sites Side SE) (expand (sites Side S))}) (union (sites Left) (sites Right))))
        })
        (play
            (if ("SameTurn")
                ("PieceMovement" (from (last To)))
                (forEach Piece)
            )
        )
        (end 
            (if 
                (or 
                    (and (= 1 (count Pieces Next)) (= 6 (count Pieces Mover))) 
                    (no Pieces Next)
                )
                (result Mover Win)
            )
        )
    )
)

