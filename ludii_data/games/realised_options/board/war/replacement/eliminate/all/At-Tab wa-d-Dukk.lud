(define "ThrowValue" (mapEntry (count Pips)))

(define "CaptureEnemyPiece" 
    (apply 
        if:("IsEnemyAt" (to)) 
        (remove (to) (then (addScore Mover 1)))
    ) 
)

(define "ActivatePiece" (set State at:(last To) 0))

(define "ActivatedPiece" (= (state at:(from)) 0))

(define "InactivePiece" (= (state at:(from)) 1))

(define "InOpponentHome" (is In (from) (sites Next)))

(define "OpponentPieceAtHome" (= (count Sites in:(intersection (sites Occupied by:Next) (sites Next))) 0))

(define "ThrowEqualSizeKingMinusOne" (= (+ ("ThrowValue") 1) (count at:(from))))

(define "Move" 
    (move 
        (from)
        (to 
            ("NextSiteOnTrack" ("ThrowValue"))
            "CaptureEnemyPiece"
        )
        count:#1
    )
)

(define "KingMove" ("Move" (count at:(from))))
(define "UncoupledKing" ("Move" ("ThrowValue")))
(define "CreateAKing" 
    (move 
        (from)
        (to ("NextSiteOnTrack" ("ThrowValue")))
    )		
)

(define "AllPieceInOpponentHome" 
    (and
        (= (count Sites in:(difference (sites Occupied by:P1) (sites P2))) 0)
        (= (count Sites in:(difference (sites Occupied by:P2) (sites P1))) 0)
    )		
)

(game "At-Tab wa-d-Dukk"
    (players 2)
    (equipment {
        (board
            (rectangle 4 13)
            {
            (track "Track1" "0,E,N1,W,N1,E,N1,W" P1 directed:True)
            (track "Track2" "51,W,S1,E,S1,W,S1,E" P2 directed:True)
            }
        )
        ("StickDice" 4)
        (map {(pair 0 6) (pair 1 1) (pair 2 2) (pair 3 3) (pair 4 4)})
        (piece "Marker" Each
            (if (or ("ActivatedPiece") (and (= 1 ("ThrowValue")) ("InactivePiece")))
                (if ("IsNotOffBoard" ("NextSiteOnTrack" ("ThrowValue")))
                    (if (or 
                            (not ("InOpponentHome")) 
                            (and
                                ("InOpponentHome")
                                ("OpponentPieceAtHome")
                            )
                        )
                        (if (or
                                (is In ("NextSiteOnTrack" ("ThrowValue")) (sites Empty))
                                ("IsEnemyAt" ("NextSiteOnTrack" ("ThrowValue")))
                            )
                            (or 
                                (if ("ThrowEqualSizeKingMinusOne")
                                    ("UncoupledKing")
                                )
                                ("KingMove")
                            )
                            (if (and 
                                    (is In ("NextSiteOnTrack" ("ThrowValue")) (sites "CentralRows"))
                                    ("IsFriendAt" ("NextSiteOnTrack" ("ThrowValue")))
                                )
                                ("CreateAKing")
                            )
                        )
                    )
                    (then ("ActivatePiece"))
                )
            )
        )
        (regions "AnotherThrow" (sites {1 4 6}))
        (regions "CentralRows" (union (sites Row 1) (sites Row 2)))
        (regions P1 (sites Bottom))
        (regions P2 (sites Top))
    })
    (rules 
        (start { 
            (place "Marker1" (sites Bottom) state:1)
            (place "Marker2" (sites Top) state:1)
        })
        (play 
            ("RollMove"
                (if (can Move (forEach Piece))
                    (forEach Piece (then (if (is In ("ThrowValue") (sites "AnotherThrow")) (moveAgain))))
                    (move Pass (then (if (is In ("ThrowValue") (sites "AnotherThrow")) (moveAgain))))
                )
            )
        )
        (end 
            (if (or ("AllPieceInOpponentHome") (no Pieces Mover))
                (byScore)
            )
        )
    )
)

