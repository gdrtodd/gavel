(define "Move"
    ("StepToEmpty" ~ (then "PostActionUpdate"))
)

(define "Shoot"
    (move Select
        (from)
        (to
            (intersection 
                (sites Occupied by:Enemy container:"Board")
                (sites Distance from:(from) (range 1 (state at:(from))))
            )
        )
        (then 
            (and
                (if	(= (value Piece at:(last To)) 1)
                    (remove (last To))
                    (set Value at:(last To) (- (value Piece at:(last To)) 1))
                )
                "PostActionUpdate"
            )
        )
    )
)

(define "Trade"
    (move Select
        (from)
        (to
            (intersection 
                (sites Occupied by:Enemy container:"Board")
                (sites Distance from:(from) (range 1 (state at:(from))))
            )
        )
        (then 
            (and
                (addScore (player (who at:(last To))) 1)
                "PostActionUpdate"
            )
        )
    )
)

(define "Upgrade"
    (move Select
        (from)
        (to)
        (then 
            (and
                (if (< (state at:(last To)) 100)
                    (set State at:(last To) (+ 1 (state at:(last To))))
                )
                "PostActionUpdate"
            )
        )
    )
)

(define "Pass"
    (move Pass
        (then
            (addScore
                Mover
                1
            )
        )
    )
)

(define "PostActionUpdate"
    (if (> (score Mover) 1)
        (and 
            (addScore
                Mover
                -1
            )
            (moveAgain)
        )
    )
)

(game "Tank Tactics" 
    (players 2) 
    (equipment { 
        (board (rectangle 5 10)) 
        (hand Each)
        (piece "Tank" Each (or {"Move" "Shoot" "Trade" "Upgrade"}) maxState:100)
    }) 
    (rules 
        (meta (passEnd NoEnd))
        (start { 
            (set Score Each 1)
            
            (place "Tank1" (handSite P1) state:2 value:3) 
            (place "Tank2" (handSite P2) state:2 value:3)
            
        })
        phases:{
        (phase "Placement"
            (play
                (move 
                    (from (handSite Mover)) 
                    (to (sites Empty)) 
                ) 
            ) 
            (nextPhase Mover ("HandEmpty" Mover) "Movement")
        )
        (phase "Movement" 
            (play 
                (or 
                    (forEach Piece)
                    "Pass"
                )
            )
        )}
        (end 
            (forEach NonMover 
                if:(no Pieces Player) (result Player Loss)
            )
        )
    )
)

