(define "ReachedTarget" (is In (last To) (sites Mover)))

(define "LastMoveWasKnight"
    ("IsPieceAt" "Knight" Mover (last To))
)

(define "LastMoveWasPawn"
    ("IsPieceAt" "Pawn" Mover (last To))
)

(game "Breakthrough Chess" 
    ("TwoPlayersNorthSouth")
    (equipment { 
        (board (square 8)) 
        
        ("ChessPawn" "Pawn")
        ("ChessRook" "Rook")
        ("ChessKing" "King")
        ("ChessBishop" "Bishop")
        ("ChessKnight" "Knight")
        ("ChessQueen" "Queen")
        (regions P1 (sites Top))
        (regions P2 (sites Bottom))
    }) 
    (rules 
        (start { 
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 6))
            (place "Rook1" {"A1" "H1"} state:1) (place "Knight1" {"B1" "G1"}) (place "Bishop1" {"C1" "F1"}) (place "Queen1" coord:"D1") (place "King1" coord:"E1" state:1) 
            (place "Rook2" {"A8" "H8"} state:1) (place "Knight2" {"B8" "G8"}) (place "Bishop2" {"C8" "F8"}) (place "Queen2" coord:"D8") (place "King2" coord:"E8" state:1) 
        })
        
        (play (forEach Piece))
        (end (if (and "ReachedTarget" (or "LastMoveWasKnight" "LastMoveWasPawn")) (result Mover Win))) 
    )
)

