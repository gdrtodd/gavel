
(define "GroupCount"
    (max 0
        (max
            (sizes Group "ScoreConnectionDirection" #1) 
        )
    )
)

(define "CascadeScore" 
    (max 0
        (max
            (difference
                (sizes Group "ScoreConnectionDirection" #1)
                (sizes Group "ScoreConnectionDirection" #2)
            )
        )
    )
)

(define "CascadeTie"
    (and
        (set Score Mover (var "MoverScore")) 
        (set Score Next (var "NextScore")) 
    )
)

(define "CascadeTiebreaker"
    (if 
        (= (var "MoverScore") (var "NextScore")) 
        (and
            (set Score Mover (* -1 ("CascadeScore" Mover Next)))
            (set Score Next (* -1 ("CascadeScore" Next Mover)))
        )
        ("CascadeTie")
    )
)

(define "Scoring" 
    (set Var "MoverScore"
        (+
            (value Piece at:(handSite Mover))
            ("GroupCount" Mover)
        )
        (then
            (set Var "NextScore"
                (+
                    (value Piece at:(handSite Next))
                    ("GroupCount" Next)
                )
                (then 
                    ("CascadeTiebreaker")
                )
            )
        )
    )
)

(define "CapturingAtScoreWhat4Who" 
    (forEach Value
        (array #1)
        (if 
            (> 2 (count Sites in:(sites Around (value) "ConnectionDirection" if:(is Empty (to)))))
            (if
                (is #2 (who at:(value))) 
                (remove (value)
                    (then
                        (if
                            (is Empty (handSite #3))
                            (add (piece (id "Disc" #2)) (to (handSite #3))
                                (then
                                    (set Value at:(handSite #3) (+ 1 (value Piece at:(handSite #3))))
                            ))
                            (set Value at:(handSite #3) (+ 1 (value Piece at:(handSite #3))))
                        )
                    )
                )
                (remove (value))
            )
        )
    )
)

(define "AllHave1Connection2Edge"
    (all Sites
        #1
        if:(or
            (and 
                (is Empty (site))
                (is In (site) (sites Outer))
            )
            (!= Infinity
                (count Steps
                    (step "ConnectionDirection"
                        (to if:(is Empty (to)))
                    )
                    (site)
                    (difference (sites Outer) (site))
                )
            )
        )
    )
)

(game "Watershed"
    (players 2)
    (equipment {
        "BoardUsed"
        (piece "Ball" Each)
        (piece "Disc" Each)
        (hand Each size:1)
    })
    (rules
        (start (set Score Each 0))
        (play
            (do
                (move 
                    Add
                    (to 
                        (sites Empty) 
                        if:(< 1 
                            (count Sites 
                                in:(intersection
                                    (sites Around (to) "ConnectionDirection")
                                    (sites Empty)
                                )
                            )
                        )
                    )
                )
                ifAfterwards:("AllHave1Connection2Edge" 
                    (intersection 
                        (sites Around (last To) "ConnectionDirection")
                        (sites Empty)
                    )
                ) 
                (then
                    (do
                        ("CapturingAtScoreWhat4Who" 
                            (intersection 
                                (sites Occupied by:All) 
                                (sites Around (last To) "ConnectionDirection") 
                            )
                            Next 
                            Mover 
                        )
                        next:("Scoring")
                    )
                )
            )
        )
        (end 
            (if 
                (no Moves Next)
                {
                (if 
                    (= (score Mover) (score Next))
                    (result Mover Win)
                )
                (if 
                    (!= (score Mover) (score Next))
                    (byScore)
                )
                }
            )
        )
    )
)
/-----------------------------------------

(define "ScoreConnectionDirection" Orthogonal)
(define "ConnectionDirection" All)
(define "BoardUsed" "SquareDiagonal")

(define "SquareGrid" (board (square 9) use:Cell))
(define "SquareDiagonal" (board (square 9) use:Vertex))

(define "ColourBackground1" (colour 126 130 156)) 
(define "ColourBackground2" (colour 156 130 126)) 
(define "ColourBackground" (colour 156 130 126))

