(define "Rimau-Rimau (Two Tigers)_ai"
    (useFor { "Ruleset/Rimau-Rimau (Two Tigers) (Observed)" }
        
        (bestAgent "AlphaBeta")
        trainedHeuristics:(heuristics {
            (material)
        })
        
        trainedFeatures:(features {
            (featureSet P1 selectionFeatures:{
                (pair "rel:last_to=<{0,0,-1/2}>:from=<{0,0}>:pat=<els=[e{0,0,-1/2,0,1/2}]>" -0.40575677)
                (pair "rel:last_to=<{0}>:to=<{0,0}>:pat=<els=[N4{}]>" -0.40575677)
                (pair "rel:last_to=<{0}>:from=<{}>:pat=<els=[N4{}]>" -0.09037847)
                (pair "rel:to=<{}>:pat=<els=[f{0,1/4}]>" 0.033696573)
                (pair "rel:from=<{0,0}>:to=<{}>:pat=<els=[-{3/8}, !e{0,0,3/8}]>" -0.9000936)
                }
            )
            (featureSet P2 selectionFeatures:{
                (pair "rel:from=<{}>:pat=<els=[-{0,1/4,1/4}]>" 0.021245753)
                (pair "rel:from=<{}>:to=<{0}>:pat=<els=[N8{0,-1/8,-3/8}, e{0,1/4,3/8}]>" 1.7765844)
                (pair "rel:to=<{}>:pat=<els=[e{0,3/8}, -{3/8,1/4}]>" 0.9831367)
                (pair "rel:to=<{0}>:pat=<els=[-{0,1/4,1/4}]>" -5.6832347)
                (pair "rel:from=<{}>:pat=<els=[e{1/2,1/4}, -{3/8,-1/4}, -{0,3/8}, e{0,-1/8}]>" 0.6842174)
                (pair "rel:from=<{}>:to=<{0}>:pat=<els=[-{1/4,0,0,0}, N8{0,-1/8,-3/8}, e{0,1/4,3/8}]>" 2.4006848)
                }
            )
        })
        
    )
    (useFor { "Ruleset/Tigers on Central Point (Observed)" }
        
        (bestAgent "AlphaBeta")
        trainedHeuristics:(heuristics {
            (material)
        })
        
        trainedFeatures:(features {
            (featureSet P1 selectionFeatures:{
                (pair "rel:to=<{}>:pat=<els=[e{0,0,1/4,-1/4}]>" 0.009122211)
                (pair "rel:last_from=<{1/2,-3/8}>:to=<{}>:pat=<els=[!-{0,3/8}]>" -0.027399432)
                }
            )
            (featureSet P2 selectionFeatures:{
                (pair "rel:last_to=<{0,0,0,0}>:to=<{}>:pat=<els=[N2{0,3/8}]>" 0.113818154)
                }
            )
        })
        
    )
)
