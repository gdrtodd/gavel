(define "NoPieces" (all Sites (sites #1) if:(= 0 (count at:(site)))))

//------------------------------------------------------------------------------

(game "Owana"
    <Variant>
)

//------------------------------------------------------------------------------

(option "Variant" <Variant> args:{ <variant> }
    {
    (item "Owana (Ludii 1)" <
        
        (players 2)
        
        (equipment { 
            (mancalaBoard 2 4 
                (track "Track" "1,E,N,W" loop:True)
            )
            
            (regions P1 
                (sites Bottom)
            )
            
            (regions P2 
                (sites Top)
            )
            
            (piece "Seed" Shared)
            
            (hand Each)
            }
        )
        
        (rules 
            (start 
                (set Count 4 to:
                    (sites Track)
                )
            )
            
            (play 
                (if 
                    (is Proposed "End")
                    
                    (or 
                        (move Vote "End")
                        
                        (move Vote "No")
                    )
                    
                    (or 
                        (if 
                            (is Cycle)
                            
                            (move Propose "End")
                        )
                        
                        (move Select 
                            (from 
                                (if 
                                    (is Prev Mover)
                                    
                                    (sites { 
                                        (last To afterConsequence:True)
                                        }
                                    )
                                    
                                    (sites Mover)
                                )
                                if:
                                (< 0 
                                    (count at:
                                        (from)
                                    )
                                )
                            )
                            
                            (then 
                                (sow apply:
                                    (if 
                                        (and 
                                            (is In 
                                                (to)
                                                
                                                (sites Next)
                                            )
                                            
                                            (or 
                                                (= 
                                                    (count at:
                                                        (to)
                                                    )
                                                2)
                                                
                                                (= 
                                                    (count at:
                                                        (to)
                                                    )
                                                3)
                                            )
                                        )
                                        
                                        (fromTo 
                                            (from 
                                                (to)
                                            )
                                            
                                            (to 
                                                (handSite Mover)
                                            )
                                            count:
                                            (count at:
                                                (to)
                                            )
                                        )
                                        
                                        (if 
                                            (< 1 
                                                (count at:
                                                    (to)
                                                )
                                            )
                                            
                                            (moveAgain)
                                            
                                            (if 
                                                (and 
                                                    (is In 
                                                        (to)
                                                        
                                                        (sites Mover)
                                                    )
                                                    
                                                    (< 1 
                                                        (count at:
                                                            (if 
                                                                (is Mover P1)
                                                                
                                                                (+ 
                                                                    (to)
                                                                6)
                                                                
                                                                (- 
                                                                    (to)
                                                                6)
                                                            )
                                                        )
                                                    )
                                                )
                                                
                                                (fromTo 
                                                    (from 
                                                        (if 
                                                            (is Mover P1)
                                                            
                                                            (+ 
                                                                (to)
                                                            6)
                                                            
                                                            (- 
                                                                (to)
                                                            6)
                                                        )
                                                    )
                                                    
                                                    (to 
                                                        (handSite Mover)
                                                    )
                                                    count:
                                                    (count at:
                                                        (if 
                                                            (is Mover P1)
                                                            
                                                            (+ 
                                                                (to)
                                                            6)
                                                            
                                                            (- 
                                                                (to)
                                                            6)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                    includeSelf:False backtracking:
                                    (and 
                                        (is In 
                                            (from)
                                            
                                            (sites Next)
                                        )
                                        
                                        (or 
                                            (= 
                                                (count at:
                                                    (from)
                                                )
                                            2)
                                            
                                            (= 
                                                (count at:
                                                    (from)
                                                )
                                            3)
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (all Sites 
                        (sites P1)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P2 Win)
                )
                
                (if 
                    (all Sites 
                        (sites P2)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Owana (Ludii 1) ruleset.")
    
    (item "Owana (Ludii 2)" <
        
        (players 2)
        
        (equipment { 
            (mancalaBoard 2 4 
                (track "Track" "1,E,N,W" loop:True)
            )
            
            (regions P1 
                (sites Bottom)
            )
            
            (regions P2 
                (sites Top)
            )
            
            (piece "Seed" Shared)
            
            (hand Each)
            }
        )
        
        (rules 
            (start 
                (set Count 4 to:
                    (sites Track)
                )
            )
            
            (play 
                (if 
                    (is Proposed "End")
                    
                    (or 
                        (move Vote "End")
                        
                        (move Vote "No")
                    )
                    
                    (or 
                        (if 
                            (is Cycle)
                            
                            (move Propose "End")
                        )
                        
                        (do 
                            (move Select 
                                (from 
                                    (sites Mover)
                                    if:
                                    (< 0 
                                        (count at:
                                            (from)
                                        )
                                    )
                                )
                                
                                (then 
                                    (sow if:
                                        (and 
                                            (is In 
                                                (to)
                                                
                                                (sites Next)
                                            )
                                            
                                            (or 
                                                (= 
                                                    (count at:
                                                        (to)
                                                    )
                                                2)
                                                
                                                (= 
                                                    (count at:
                                                        (to)
                                                    )
                                                3)
                                            )
                                        )
                                        apply:
                                        (fromTo 
                                            (from 
                                                (to)
                                            )
                                            
                                            (to 
                                                (handSite Mover)
                                            )
                                            count:
                                            (count at:
                                                (to)
                                            )
                                        )
                                    includeSelf:False backtracking:True )
                                )
                            )
                            ifAfterwards:
                            (< 0 
                                (count in:
                                    (sites Next)
                                )
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (all Sites 
                        (sites P1)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P2 Win)
                )
                
                (if 
                    (all Sites 
                        (sites P2)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Owana (Ludii 2) ruleset.")
    
    (item "Owana (Ludii 3)" <
        
        (players 2)
        
        (equipment { 
            (mancalaBoard 2 4 
                (track "Track" "1,E,N,W" loop:True)
            )
            
            (regions P1 
                (sites Bottom)
            )
            
            (regions P2 
                (sites Top)
            )
            
            (piece "Seed" Shared)
            
            (hand Each)
            }
        )
        
        (rules 
            (start 
                (set Count 4 to:
                    (sites Track)
                )
            )
            
            (play 
                (if 
                    (is Proposed "End")
                    
                    (or 
                        (move Vote "End")
                        
                        (move Vote "No")
                    )
                    
                    (or 
                        (if 
                            (is Cycle)
                            
                            (move Propose "End")
                        )
                        
                        (if 
                            (is Prev Mover)
                            
                            (move Select 
                                (from 
                                    (sites { 
                                        (last To afterConsequence:True)
                                        }
                                    )
                                )
                                
                                (then 
                                    (sow apply:
                                        (if 
                                            (< 1 
                                                (count at:
                                                    (to)
                                                )
                                            )
                                            
                                            (moveAgain)
                                            
                                            (if 
                                                (is In 
                                                    (to)
                                                    
                                                    (sites Mover)
                                                )
                                                
                                                (if 
                                                    (is Occupied 
                                                        (if 
                                                            (is Mover P1)
                                                            
                                                            (+ 
                                                                (to)
                                                            6)
                                                            
                                                            (- 
                                                                (to)
                                                            6)
                                                        )
                                                    )
                                                    
                                                    (fromTo 
                                                        (from 
                                                            (if 
                                                                (is Mover P1)
                                                                
                                                                (+ 
                                                                    (to)
                                                                6)
                                                                
                                                                (- 
                                                                    (to)
                                                                6)
                                                            )
                                                        )
                                                        
                                                        (to 
                                                            (handSite Mover)
                                                        )
                                                        count:
                                                        (count at:
                                                            (if 
                                                                (is Mover P1)
                                                                
                                                                (+ 
                                                                    (to)
                                                                6)
                                                                
                                                                (- 
                                                                    (to)
                                                                6)
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    includeSelf:False )
                                )
                            )
                            
                            (do 
                                (move Select 
                                    (from 
                                        (sites Mover)
                                        if:
                                        (is Occupied 
                                            (from)
                                        )
                                    )
                                    
                                    (then 
                                        (sow apply:
                                            (if 
                                                (< 1 
                                                    (count at:
                                                        (to)
                                                    )
                                                )
                                                
                                                (moveAgain)
                                                
                                                (if 
                                                    (is In 
                                                        (to)
                                                        
                                                        (sites Mover)
                                                    )
                                                    
                                                    (if 
                                                        (is Occupied 
                                                            (if 
                                                                (is Mover P1)
                                                                
                                                                (+ 
                                                                    (to)
                                                                6)
                                                                
                                                                (- 
                                                                    (to)
                                                                6)
                                                            )
                                                        )
                                                        
                                                        (fromTo 
                                                            (from 
                                                                (if 
                                                                    (is Mover P1)
                                                                    
                                                                    (+ 
                                                                        (to)
                                                                    6)
                                                                    
                                                                    (- 
                                                                        (to)
                                                                    6)
                                                                )
                                                            )
                                                            
                                                            (to 
                                                                (handSite Mover)
                                                            )
                                                            count:
                                                            (count at:
                                                                (if 
                                                                    (is Mover P1)
                                                                    
                                                                    (+ 
                                                                        (to)
                                                                    6)
                                                                    
                                                                    (- 
                                                                        (to)
                                                                    6)
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        includeSelf:False )
                                    )
                                )
                                ifAfterwards:
                                (if 
                                    (is Mover P1)
                                    
                                    (< 0 
                                        (count in:
                                            (sites P2)
                                        )
                                    )
                                    
                                    (< 0 
                                        (count in:
                                            (sites P1)
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (all Sites 
                        (sites P1)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P2 Win)
                )
                
                (if 
                    (all Sites 
                        (sites P2)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Owana (Ludii 3) ruleset.")
    
    (item "Owana (Ludii 4)" <
        
        (players 2)
        
        (equipment { 
            (mancalaBoard 2 4 
                (track "Track" "1,E,N,W" loop:True)
            )
            
            (regions P1 
                (sites Bottom)
            )
            
            (regions P2 
                (sites Top)
            )
            
            (piece "Seed" Shared)
            
            (hand Each)
            }
        )
        
        (rules 
            (start 
                (set Count 4 to:
                    (sites Track)
                )
            )
            
            (play 
                (or { 
                    (move Select 
                        (from 
                            (if 
                                (= 0 
                                    (count Moves)
                                )
                                
                                (sites { 5}
                                )
                                
                                (if 
                                    (is Prev Mover)
                                    
                                    (sites { 
                                        (var "Replay")
                                        }
                                    )
                                    
                                    (sites Mover)
                                )
                            )
                            if:
                            (and 
                                (is Occupied 
                                    (from)
                                )
                                
                                (= 0 
                                    (state at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (then 
                            (sow apply:
                                (if 
                                    (< 1 
                                        (count at:
                                            (to)
                                        )
                                    )
                                    
                                    (if 
                                        (= 0 
                                            (state at:
                                                (to)
                                            )
                                        )
                                        
                                        (and 
                                            (moveAgain)
                                            
                                            (set Var "Replay" 
                                                (to)
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (is In 
                                            (to)
                                            
                                            (sites Mover)
                                        )
                                        
                                        (if 
                                            (!= 3 
                                                (count at:
                                                    (if 
                                                        (is In 
                                                            (to)
                                                            
                                                            (sites Bottom)
                                                        )
                                                        
                                                        (+ 
                                                            (to)
                                                        6)
                                                        
                                                        (- 
                                                            (to)
                                                        6)
                                                    )
                                                )
                                            )
                                            
                                            (if 
                                                (!= 0 
                                                    (count at:
                                                        (if 
                                                            (is In 
                                                                (to)
                                                                
                                                                (sites Bottom)
                                                            )
                                                            
                                                            (+ 
                                                                (to)
                                                            6)
                                                            
                                                            (- 
                                                                (to)
                                                            6)
                                                        )
                                                    )
                                                )
                                                
                                                (fromTo 
                                                    (from 
                                                        (if 
                                                            (is In 
                                                                (to)
                                                                
                                                                (sites Bottom)
                                                            )
                                                            
                                                            (+ 
                                                                (to)
                                                            6)
                                                            
                                                            (- 
                                                                (to)
                                                            6)
                                                        )
                                                    )
                                                    
                                                    (to 
                                                        (handSite Mover)
                                                    )
                                                    count:
                                                    (count at:
                                                        (if 
                                                            (is In 
                                                                (to)
                                                                
                                                                (sites Bottom)
                                                            )
                                                            
                                                            (+ 
                                                                (to)
                                                            6)
                                                            
                                                            (- 
                                                                (to)
                                                            6)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (and { 
                                                (fromTo 
                                                    (from 
                                                        (if 
                                                            (is In 
                                                                (to)
                                                                
                                                                (sites Bottom )
                                                            )
                                                            
                                                            (+ 
                                                                (to)
                                                            6)
                                                            
                                                            (- 
                                                                (to)
                                                            6)
                                                        )
                                                    )
                                                    
                                                    (to 
                                                        (to)
                                                    )
                                                count:1 )
                                                
                                                (set State at:
                                                    (to)
                                                    
                                                    (mover)
                                                )
                                                
                                                (set State at:
                                                    (if 
                                                        (is In 
                                                            (to)
                                                            
                                                            (sites Bottom)
                                                        )
                                                        
                                                        (+ 
                                                            (to)
                                                        6)
                                                        
                                                        (- 
                                                            (to)
                                                        6)
                                                    )
                                                    
                                                    (mover)
                                                )
                                                }
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (and 
                                (not 
                                    (is Next Mover)
                                )
                                
                                (or 
                                    (all Sites 
                                        (sites P1)
                                        if:
                                        (or 
                                            (!= 0 
                                                (state at:
                                                    (site)
                                                )
                                            )
                                            
                                            (is Empty 
                                                (site)
                                            )
                                        )
                                    )
                                    
                                    (all Sites 
                                        (sites P2)
                                        if:
                                        (or 
                                            (!= 0 
                                                (state at:
                                                    (site)
                                                )
                                            )
                                            
                                            (is Empty 
                                                (site)
                                            )
                                        )
                                    )
                                )
                            )
                            
                            (and { 
                                (forEach Site 
                                    (sites P1)
                                    
                                    (if 
                                        (= 0 
                                            (state at:
                                                (site)
                                            )
                                        )
                                        
                                        (fromTo 
                                            (from 
                                                (site)
                                            )
                                            
                                            (to 
                                                (handSite P1)
                                            )
                                            count:
                                            (count at:
                                                (site)
                                            )
                                        )
                                    )
                                )
                                
                                (forEach Site 
                                    (sites P2)
                                    
                                    (if 
                                        (= 0 
                                            (state at:
                                                (site)
                                            )
                                        )
                                        
                                        (fromTo 
                                            (from 
                                                (site)
                                            )
                                            
                                            (to 
                                                (handSite P2)
                                            )
                                            count:
                                            (count at:
                                                (site)
                                            )
                                        )
                                    )
                                )
                                
                                (forEach Site 
                                    (sites Board)
                                    
                                    (if 
                                        (= 
                                            (state at:
                                                (site)
                                            )
                                        P1)
                                        
                                        (fromTo 
                                            (from 
                                                (site)
                                            )
                                            
                                            (to 
                                                (handSite P1)
                                            )
                                            count:
                                            (count at:
                                                (site)
                                            )
                                        )
                                        
                                        (if 
                                            (= 
                                                (state at:
                                                    (site)
                                                )
                                            P2)
                                            
                                            (fromTo 
                                                (from 
                                                    (site)
                                                )
                                                
                                                (to 
                                                    (handSite P2)
                                                )
                                                count:
                                                (count at:
                                                    (site)
                                                )
                                            )
                                        )
                                    )
                                )
                                }
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (all Sites 
                        (sites P1)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P2 Win)
                )
                
                (if 
                    (all Sites 
                        (sites P2)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Owana (Ludii 4) ruleset.")
    
    (item "Owana (Ludii 5)" <
        
        (players 2)
        
        (equipment { 
            (mancalaBoard 2 4 
                (track "Track" "1,E,N,W" loop:True)
            )
            
            (regions P1 
                (sites Bottom)
            )
            
            (regions P2 
                (sites Top)
            )
            
            (piece "Seed" Shared)
            
            (hand Each)
            }
        )
        
        (rules 
            (start 
                (set Count 4 to:
                    (sites Track)
                )
            )
            
            (play 
                (do 
                    (move Select 
                        (from 
                            (if 
                                (is Prev Mover)
                                
                                (sites { 
                                    (last To afterConsequence:True)
                                    }
                                )
                                
                                (sites Mover)
                            )
                            if:
                            (< 0 
                                (count at:
                                    (from)
                                )
                            )
                        )
                        
                        (then 
                            (sow apply:
                                (if 
                                    (and 
                                        (is In 
                                            (to)
                                            
                                            (sites Next)
                                        )
                                        
                                        (= 
                                            (count at:
                                                (to)
                                            )
                                        4)
                                    )
                                    
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite Mover)
                                        )
                                        count:
                                        (count at:
                                            (to)
                                        )
                                        
                                        (then 
                                            (forEach Site 
                                                (if 
                                                    (is Mover P1)
                                                    
                                                    (sites P2)
                                                    
                                                    (sites P1)
                                                )
                                                
                                                (if 
                                                    (= 
                                                        (count at:
                                                            (site)
                                                        )
                                                    4)
                                                    
                                                    (fromTo 
                                                        (from 
                                                            (site)
                                                        )
                                                        
                                                        (to 
                                                            (handSite Mover)
                                                        )
                                                        count:
                                                        (count at:
                                                            (site)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (< 1 
                                            (count at:
                                                (to)
                                            )
                                        )
                                        
                                        (moveAgain)
                                    )
                                )
                            includeSelf:False )
                        )
                    )
                    ifAfterwards:
                    (< 0 
                        (count in:
                            (if 
                                (is Mover P1)
                                
                                (sites P2)
                                
                                (sites P1)
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (all Sites 
                        (sites P1)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P2 Win)
                )
                
                (if 
                    (all Sites 
                        (sites P2)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Owana (Ludii 5) ruleset.")
    
    (item "Owana (Ludii 6)" <
        
        (players 2)
        
        (equipment { 
            (mancalaBoard 2 4 
                (track "Track" "1,E,N,W" loop:True)
            )
            
            (regions P1 
                (sites Bottom)
            )
            
            (regions P2 
                (sites Top)
            )
            
            (piece "Seed" Shared)
            
            (hand Each)
            }
        )
        
        (rules 
            (start 
                (set Count 4 to:
                    (sites Track)
                )
            )
            
            (play 
                (or { 
                    (move Select 
                        (from 
                            (if 
                                (is Prev Mover)
                                
                                (sites { 
                                    (var "Replay")
                                    }
                                )
                                
                                (sites Mover)
                            )
                            if:
                            (and 
                                (is Occupied 
                                    (from)
                                )
                                
                                (= 0 
                                    (state at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (then 
                            (sow apply:
                                (if 
                                    (!= 0 
                                        (state at:
                                            (to)
                                        )
                                    )
                                    
                                    (if 
                                        (= 
                                            (next)
                                            
                                            (state at:
                                                (to)
                                            )
                                        )
                                        
                                        (and 
                                            (fromTo 
                                                (from 
                                                    (to)
                                                )
                                                
                                                (to 
                                                    (handSite Mover)
                                                )
                                                count:
                                                (min 2 
                                                    (count at:
                                                        (to)
                                                    )
                                                )
                                            )
                                            
                                            (set State at:
                                                (to)
                                                
                                                (next)
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (and 
                                            (is In 
                                                (to)
                                                
                                                (sites Next)
                                            )
                                            
                                            (= 4 
                                                (count at:
                                                    (to)
                                                )
                                            )
                                        )
                                        
                                        (and 
                                            (set State at:
                                                (to)
                                                
                                                (mover)
                                            )
                                            
                                            (set State at:
                                                (if 
                                                    (is In 
                                                        (to)
                                                        
                                                        (sites Bottom)
                                                    )
                                                    
                                                    (+ 
                                                        (to)
                                                    6)
                                                    
                                                    (- 
                                                        (to)
                                                    6)
                                                )
                                                
                                                (mover)
                                            )
                                        )
                                        
                                        (if 
                                            (< 1 
                                                (count at:
                                                    (to)
                                                )
                                            )
                                            
                                            (and 
                                                (moveAgain)
                                                
                                                (set Var "Replay" 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (and 
                                (not 
                                    (is Next Mover)
                                )
                                
                                (or 
                                    (all Sites 
                                        (sites P1)
                                        if:
                                        (or 
                                            (!= 0 
                                                (state at:
                                                    (site)
                                                )
                                            )
                                            
                                            (is Empty 
                                                (site)
                                            )
                                        )
                                    )
                                    
                                    (all Sites 
                                        (sites P2)
                                        if:
                                        (or 
                                            (!= 0 
                                                (state at:
                                                    (site)
                                                )
                                            )
                                            
                                            (is Empty 
                                                (site)
                                            )
                                        )
                                    )
                                )
                            )
                            
                            (and { 
                                (forEach Site 
                                    (sites P1)
                                    
                                    (if 
                                        (= 0 
                                            (state at:
                                                (site)
                                            )
                                        )
                                        
                                        (fromTo 
                                            (from 
                                                (site)
                                            )
                                            
                                            (to 
                                                (handSite P1)
                                            )
                                            count:
                                            (count at:
                                                (site)
                                            )
                                        )
                                    )
                                )
                                
                                (forEach Site 
                                    (sites P2)
                                    
                                    (if 
                                        (= 0 
                                            (state at:
                                                (site)
                                            )
                                        )
                                        
                                        (fromTo 
                                            (from 
                                                (site)
                                            )
                                            
                                            (to 
                                                (handSite P2)
                                            )
                                            count:
                                            (count at:
                                                (site)
                                            )
                                        )
                                    )
                                )
                                
                                (forEach Site 
                                    (sites Board)
                                    
                                    (if 
                                        (= 
                                            (state at:
                                                (site)
                                            )
                                        P1)
                                        
                                        (and 
                                            (fromTo 
                                                (from 
                                                    (site)
                                                )
                                                
                                                (to 
                                                    (handSite P1)
                                                )
                                                count:
                                                (count at:
                                                    (site)
                                                )
                                            )
                                            
                                            (set State at:
                                                (site)
                                            0)
                                        )
                                        
                                        (if 
                                            (= 
                                                (state at:
                                                    (site)
                                                )
                                            P2)
                                            
                                            (and 
                                                (fromTo 
                                                    (from 
                                                        (site)
                                                    )
                                                    
                                                    (to 
                                                        (handSite P2)
                                                    )
                                                    count:
                                                    (count at:
                                                        (site)
                                                    )
                                                )
                                                
                                                (set State at:
                                                    (site)
                                                0 )
                                            )
                                        )
                                    )
                                )
                                }
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (all Sites 
                        (sites P1)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P2 Win)
                )
                
                (if 
                    (all Sites 
                        (sites P2)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Owana (Ludii 6) ruleset.")
    
    (item "Owana (Ludii 7)" <
        
        (players 2)
        
        (equipment { 
            (mancalaBoard 2 4 
                (track "Track" "1,E,N,W" loop:True)
            )
            
            (regions P1 
                (sites Bottom)
            )
            
            (regions P2 
                (sites Top)
            )
            
            (piece "Seed" Shared)
            
            (hand Each)
            }
        )
        
        (rules 
            (start 
                (set Count 4 to:
                    (sites Track)
                )
            )
            
            (play 
                (move Select 
                    (from 
                        (if 
                            (is Prev Mover)
                            
                            (sites { 
                                (trackSite Move from:
                                    (last To afterConsequence:True)
                                steps:1 )
                                }
                            )
                            
                            (sites Mover)
                        )
                        if:
                        (< 0 
                            (count at:
                                (from)
                            )
                        )
                    )
                    
                    (then 
                        (sow apply:
                            (if 
                                (> 
                                    (count at:
                                        (trackSite Move from:
                                            (to)
                                        steps:1)
                                    )
                                0 )
                                
                                (moveAgain)
                                
                                (if 
                                    (> 
                                        (count at:
                                            (if 
                                                (is In 
                                                    (trackSite Move from:
                                                        (to)
                                                    steps:1 )
                                                    
                                                    (sites Bottom)
                                                )
                                                
                                                (+ 
                                                    (trackSite Move from:
                                                        (to)
                                                    steps:1 )
                                                7 )
                                                
                                                (- 
                                                    (trackSite Move from:
                                                        (to)
                                                    steps:1 )
                                                7 )
                                            )
                                        )
                                    0 )
                                    
                                    (fromTo 
                                        (from 
                                            (if 
                                                (is In 
                                                    (trackSite Move from:
                                                        (to)
                                                    steps:1 )
                                                    
                                                    (sites Bottom)
                                                )
                                                
                                                (+ 
                                                    (trackSite Move from:
                                                        (to)
                                                    steps:1 )
                                                7 )
                                                
                                                (- 
                                                    (trackSite Move from:
                                                        (to)
                                                    steps:1 )
                                                7 )
                                            )
                                        )
                                        
                                        (to 
                                            (handSite Mover)
                                        )
                                        count:
                                        (count at:
                                            (if 
                                                (is In 
                                                    (trackSite Move from:
                                                        (to)
                                                    steps:1 )
                                                    
                                                    (sites Bottom)
                                                )
                                                
                                                (+ 
                                                    (trackSite Move from:
                                                        (to)
                                                    steps:1 )
                                                7 )
                                                
                                                (- 
                                                    (trackSite Move from:
                                                        (to)
                                                    steps:1 )
                                                7 )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (all Sites 
                        (sites P1)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P2 Win)
                )
                
                (if 
                    (all Sites 
                        (sites P2)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Owana (Ludii 7) ruleset.")
    
    (item "Owana (Ludii 8)" <
        
        (players 2)
        
        (equipment { 
            (mancalaBoard 2 4 
                (track "Track" "1,E,N,W" loop:True)
            )
            
            (regions P1 
                (sites Bottom)
            )
            
            (regions P2 
                (sites Top)
            )
            
            (piece "Seed" Shared)
            
            (hand Each)
            }
        )
        
        (rules 
            (start 
                (set Count 4 to:
                    (sites Track)
                )
            )
            
            (play 
                (or { 
                    (move Select 
                        (from 
                            (if 
                                (is Prev Mover)
                                
                                (sites { 
                                    (var "Replay")
                                    }
                                )
                                
                                (sites Mover)
                            )
                            if:
                            (is Occupied 
                                (from)
                            )
                        )
                        
                        (then 
                            (sow apply:
                                (if 
                                    (not 
                                        (and 
                                            (is In 
                                                (to)
                                                
                                                (sites Next)
                                            )
                                            
                                            (= 
                                                (next)
                                                
                                                (state at:
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (= 3 
                                            (count at:
                                                (to)
                                            )
                                        )
                                        
                                        (and { 
                                            (fromTo 
                                                (from 
                                                    (to)
                                                )
                                                
                                                (to 
                                                    (trackSite Move from:
                                                        (to)
                                                    steps:1 )
                                                )
                                            count:3 )
                                            
                                            (sow 
                                                (trackSite Move from:
                                                    (to)
                                                steps:1 )
                                                count:3 skipIf:
                                                (and 
                                                    (is In 
                                                        (to)
                                                        
                                                        (sites Mover)
                                                    )
                                                    
                                                    (= 1 
                                                        (state at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (set State at:
                                                (to)
                                            1)
                                            }
                                        )
                                        
                                        (if 
                                            (< 1 
                                                (count at:
                                                    (to)
                                                )
                                            )
                                            
                                            (and 
                                                (moveAgain)
                                                
                                                (set Var "Replay" 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                )
                                skipIf:
                                (and 
                                    (is In 
                                        (to)
                                        
                                        (sites Mover)
                                    )
                                    
                                    (= 
                                        (mover)
                                        
                                        (state at:
                                            (to)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    }
                    
                    (then 
                        (forEach Site 
                            (if 
                                (is Mover P1)
                                
                                (sites P2)
                                
                                (sites P1)
                            )
                            
                            (if 
                                (= 1 
                                    (state at:
                                        (site)
                                    )
                                )
                                
                                (and 
                                    (fromTo 
                                        (from 
                                            (site)
                                        )
                                        
                                        (to 
                                            (centrePoint)
                                        )
                                        count:
                                        (count at:
                                            (site)
                                        )
                                    )
                                    
                                    (set State at:
                                        (site)
                                    1)
                                )
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (all Sites 
                        (sites P1)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P2 Win)
                )
                
                (if 
                    (all Sites 
                        (sites P2)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Owana (Ludii 8) ruleset.")
    
    (item "Owana (Ludii 9)" <
        
        (players 2)
        
        (equipment { 
            (mancalaBoard 2 4 
                (track "Track" "1,E,N,W" loop:True)
            )
            
            (regions P1 
                (sites Bottom)
            )
            
            (regions P2 
                (sites Top)
            )
            
            (piece "Seed" Shared)
            
            (hand Each)
            }
        )
        
        (rules 
            (start 
                (set Count 4 to:
                    (sites Track)
                )
            )
            
            (play 
                (move Select 
                    (from 
                        (sites Mover)
                    )
                    
                    (then 
                        (sow "Track" owner:
                            (mover)
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (all Sites 
                        (sites P1)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P2 Win)
                )
                
                (if 
                    (all Sites 
                        (sites P2)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Owana (Ludii 9) ruleset.")
    
    (item "Owana (Ludii 10)" <
        
        (players 2)
        
        (equipment { 
            (mancalaBoard 2 4 
                (track "Track" "1,E,N,W" loop:True)
            )
            
            (regions P1 
                (sites Bottom)
            )
            
            (regions P2 
                (sites Top)
            )
            
            (piece "Seed" Shared)
            
            (hand Each)
            }
        )
        
        (rules 
            (start 
                (set Count 4 to:
                    (sites Track)
                )
            )
            
            (play 
                (move Select 
                    (from 
                        (sites Mover)
                        if:
                        (> 
                            (count at:
                                (from)
                            )
                        1)
                    )
                    
                    (then 
                        (sow apply:
                            (if 
                                (or 
                                    (= 2 
                                        (count at:
                                            (to)
                                        )
                                    )
                                    
                                    (= 3 
                                        (count at:
                                            (to)
                                        )
                                    )
                                )
                                
                                (and { 
                                    (fromTo 
                                        (from 
                                            (to)
                                        )
                                        
                                        (to 
                                            (handSite Mover)
                                        )
                                        count:
                                        (count at:
                                            (to)
                                        )
                                    )
                                    
                                    (if 
                                        (!= 
                                            (to)
                                            
                                            (ahead 
                                                (to)
                                            E)
                                        )
                                        
                                        (if 
                                            (or 
                                                (= 2 
                                                    (count at:
                                                        (ahead 
                                                            (to)
                                                        E)
                                                    )
                                                )
                                                
                                                (= 3 
                                                    (count at:
                                                        (ahead 
                                                            (to)
                                                        E)
                                                    )
                                                )
                                            )
                                            
                                            (fromTo 
                                                (from 
                                                    (ahead 
                                                        (to)
                                                    E)
                                                )
                                                
                                                (to 
                                                    (handSite Mover)
                                                )
                                                count:
                                                (count at:
                                                    (ahead 
                                                        (to)
                                                    E)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (!= 
                                            (to)
                                            
                                            (ahead 
                                                (to)
                                            W)
                                        )
                                        
                                        (if 
                                            (or 
                                                (= 2 
                                                    (count at:
                                                        (ahead 
                                                            (to)
                                                        W)
                                                    )
                                                )
                                                
                                                (= 3 
                                                    (count at:
                                                        (ahead 
                                                            (to)
                                                        W)
                                                    )
                                                )
                                            )
                                            
                                            (fromTo 
                                                (from 
                                                    (ahead 
                                                        (to)
                                                    W)
                                                )
                                                
                                                (to 
                                                    (handSite Mover)
                                                )
                                                count:
                                                (count at:
                                                    (ahead 
                                                        (to)
                                                    W)
                                                )
                                            )
                                        )
                                    )
                                    }
                                )
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (all Sites 
                        (sites P1)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P2 Win)
                )
                
                (if 
                    (all Sites 
                        (sites P2)
                        if:
                        (= 0 
                            (count at:
                                (site)
                            )
                        )
                    )
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Owana (Ludii 10) ruleset.")
    
    (item "Incomplete"
        <
        (players 2) 
        
        (equipment { 
            (mancalaBoard 2 4
                (track "Track" "1,E,N,W" loop:True)
            )  
            (regions P1 (sites Bottom))      // P1 home
            (regions P2 (sites Top))      // P2 home
            (piece "Seed" Shared)
            (hand Each)
        }) 
        (rules 
            (start (set Count 4 to:(sites Track)))
            
            (play [#])
            
            (end {
                (if ("NoPieces" P1) (result P2 Win)) 
                (if ("NoPieces" P2) (result P1 Win)) 
            })
        )
        >
        "The incomplete ruleset."
    )
    
})

//------------------------------------------------------------------------------

(rulesets {
    
    (ruleset "Ruleset/Owana (Ludii 1) (Reconstructed)" {
        "Variant/Owana (Ludii 1)"
    })
    (ruleset "Ruleset/Owana (Ludii 2) (Reconstructed)" {
        "Variant/Owana (Ludii 2)"
    })
    (ruleset "Ruleset/Owana (Ludii 3) (Reconstructed)" {
        "Variant/Owana (Ludii 3)"
    })
    (ruleset "Ruleset/Owana (Ludii 4) (Reconstructed)" {
        "Variant/Owana (Ludii 4)"
    })
    (ruleset "Ruleset/Owana (Ludii 5) (Reconstructed)" {
        "Variant/Owana (Ludii 5)"
    })
    (ruleset "Ruleset/Owana (Ludii 6) (Reconstructed)" {
        "Variant/Owana (Ludii 6)"
    })
    (ruleset "Ruleset/Owana (Ludii 7) (Reconstructed)" {
        "Variant/Owana (Ludii 7)"
    })
    (ruleset "Ruleset/Owana (Ludii 8) (Reconstructed)" {
        "Variant/Owana (Ludii 8)"
    })
    (ruleset "Ruleset/Owana (Ludii 9) (Reconstructed)" {
        "Variant/Owana (Ludii 9)"
    })
    (ruleset "Ruleset/Owana (Ludii 10) (Reconstructed)" {
        "Variant/Owana (Ludii 10)"
    })
    
    (ruleset "Ruleset/Historical Information (Incomplete)" {
        "Variant/Incomplete"
    })
    
})

//------------------------------------------------------------------------------

(metadata 
    (info
        {
        (description "Owana is a two-row mancala-style board game played by children in the Republic of Congo.")
        (useFor "Ruleset/Historical Information (Incomplete)" (rules "2x4 holes board with two stores. Four counters per hole. Players sow in an anti-clockwise direction. The player who captures all of the opponent's counters wins."))
        (useFor "Ruleset/Historical Information (Incomplete)" (source "DLP evidence."))
        (useFor "Ruleset/Historical Information (Incomplete)" (id "1349"))
        (useFor "Ruleset/Owana (Ludii 1) (Reconstructed)" (rules "The game Owana is played by two players on a 2 x 4 Mancala board with 2 outer stores.
                Regions:
                RegionP1: the bottom sites of the board for P1
                RegionP2: the top sites of the board for P2 
                All players play with null The following pieces are shared by all players: Seeds.
                Players take turns moving.
                Setup:
                Set the count of the vertexes in track of board to 4.
                Rules: 
                If The proposed is End, cast a vote with possible vote options [End] or cast a vote with possible vote options [No], else if we have repeated the same state three times, propose the following options [End] or select Vertex in if in the same turn if 0 is less than the total number of vertex in the location of the piece then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, captureRule: true, backtracking: the location of the piece is in RegionP1 or RegionP2 and the total number of vertex in the location of the piece is equal to 2 or the total number of vertex in the location of the piece is equal to 3, captureEffect: if to is in RegionP1 or RegionP2 and the total number of vertex in to is equal to 2 or the total number of vertex in to is equal to 3, from vertex in to to vertex Player the moving player's hand site 0 moveRule: true, else if 1 is less than the total number of vertex in to, move again, else if to is in RegionP1 or RegionP2 and 1 is less than the total number of vertex in if 1 is the mover then add the following values: [to,6] otherwise to minus 6, from vertex in if 1 is the mover then add the following values: [to,6] otherwise to minus 6 to vertex Player the moving player's hand site 0 moveRule: true, type: Vertex, includeSelf: false.
                Aim: 
                If all sites in [1,2,3,4] satisfy the condition 0 is equal to the total number of vertex in current site, player two wins If all sites in [5,6,7,8] satisfy the condition 0 is equal to the total number of vertex in current site, player one wins.
                
        "))
        (useFor "Ruleset/Owana (Ludii 1) (Reconstructed)" (id "3014"))
        (useFor "Ruleset/Owana (Ludii 2) (Reconstructed)" (rules "The game Owana is played by two players on a 2 x 4 Mancala board with 2 outer stores.
                Regions:
                RegionP1: the bottom sites of the board for P1
                RegionP2: the top sites of the board for P2 
                All players play with null The following pieces are shared by all players: Seeds.
                Players take turns moving.
                Setup:
                Set the count of the vertexes in track of board to 4.
                Rules: 
                If The proposed is End, cast a vote with possible vote options [End] or cast a vote with possible vote options [No], else if we have repeated the same state three times, propose the following options [End] or select Vertex in RegionP1 or RegionP2 if 0 is less than the total number of vertex in the location of the piece then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, captureRule: to is in RegionP1 or RegionP2 and the total number of vertex in to is equal to 2 or the total number of vertex in to is equal to 3, backtracking: true, captureEffect: from vertex in to to vertex Player the moving player's hand site 0 moveRule: true, type: Vertex, includeSelf: false.
                Aim: 
                If all sites in [1,2,3,4] satisfy the condition 0 is equal to the total number of vertex in current site, player two wins If all sites in [5,6,7,8] satisfy the condition 0 is equal to the total number of vertex in current site, player one wins.
                
        "))
        (useFor "Ruleset/Owana (Ludii 2) (Reconstructed)" (id "3015"))
        (useFor "Ruleset/Owana (Ludii 3) (Reconstructed)" (rules "The game Owana is played by two players on a 2 x 4 Mancala board with 2 outer stores.
                Regions:
                RegionP1: the bottom sites of the board for P1
                RegionP2: the top sites of the board for P2 
                All players play with null The following pieces are shared by all players: Seeds.
                Players take turns moving.
                Setup:
                Set the count of the vertexes in track of board to 4.
                Rules: 
                If The proposed is End, cast a vote with possible vote options [End] or cast a vote with possible vote options [No], else if we have repeated the same state three times, propose the following options [End] or if in the same turn, select Vertex in sites [the to location of the last move] if true then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, captureRule: true, captureEffect: if 1 is less than the total number of vertex in to, move again, else if to is in RegionP1 or RegionP2, if vertex if 1 is the mover then add the following values: [to,6] otherwise to minus 6 is occupied, from vertex in if 1 is the mover then add the following values: [to,6] otherwise to minus 6 to vertex Player the moving player's hand site 0 moveRule: true, type: Vertex, includeSelf: false, else select Vertex in RegionP1 or RegionP2 if vertex the location of the piece is occupied then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, captureRule: true, captureEffect: if 1 is less than the total number of vertex in to, move again, else if to is in RegionP1 or RegionP2, if vertex if 1 is the mover then add the following values: [to,6] otherwise to minus 6 is occupied, from vertex in if 1 is the mover then add the following values: [to,6] otherwise to minus 6 to vertex Player the moving player's hand site 0 moveRule: true, type: Vertex, includeSelf: false.
                Aim: 
                If all sites in [1,2,3,4] satisfy the condition 0 is equal to the total number of vertex in current site, player two wins If all sites in [5,6,7,8] satisfy the condition 0 is equal to the total number of vertex in current site, player one wins.
                
        "))
        (useFor "Ruleset/Owana (Ludii 3) (Reconstructed)" (id "3016"))
        (useFor "Ruleset/Owana (Ludii 4) (Reconstructed)" (rules "The game Owana is played by two players on a 2 x 4 Mancala board with 2 outer stores.
                Regions:
                RegionP1: the bottom sites of the board for P1
                RegionP2: the top sites of the board for P2 
                All players play with null The following pieces are shared by all players: Seeds.
                Players take turns moving.
                Setup:
                Set the count of the vertexes in track of board to 4.
                Rules: 
                Select Vertex in if 0 is equal to the number of moves if vertex the location of the piece is occupied and 0 is equal to State at the location of the piece then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, captureRule: true, captureEffect: if 1 is less than the total number of vertex in to, if 0 is equal to State at to, move again and set the variable Replay to to, else if to is in RegionP1 or RegionP2, if 3 is not equal to the total number of vertex in if to is in the bottom sites of the board then add the following values: [to,6] otherwise to minus 6, if 0 is not equal to the total number of vertex in if to is in the bottom sites of the board then add the following values: [to,6] otherwise to minus 6, from vertex in if to is in the bottom sites of the board then add the following values: [to,6] otherwise to minus 6 to vertex Player the moving player's hand site 0 moveRule: true, else from vertex in if to is in the bottom sites of the board then add the following values: [to,6] otherwise to minus 6 to vertex to moveRule: true and set the state of the Vertex to to current moving player and set the state of the Vertex if to is in the bottom sites of the board then add the following values: [to,6] otherwise to minus 6 to current moving player, type: Vertex, includeSelf: true if not Player the moving player is the next mover and all sites in [1,2,3,4] satisfy the condition 0 is not equal to State at current site or empty or all sites in [5,6,7,8] satisfy the condition 0 is not equal to State at current site or empty, Each turn, where the site is within [1,2,3,4], if 0 is equal to State at current site, from vertex in current site to vertex Player 1's hand site 0 moveRule: true and Each turn, where the site is within [5,6,7,8], if 0 is equal to State at current site, from vertex in current site to vertex Player 2's hand site 0 moveRule: true and Each turn, where the site is within the sites of the board, if State at current site is equal to 1, from vertex in current site to vertex Player 1's hand site 0 moveRule: true, else if State at current site is equal to 2, from vertex in current site to vertex Player 2's hand site 0 moveRule: true.
                Aim: 
                If all sites in [1,2,3,4] satisfy the condition 0 is equal to the total number of vertex in current site, player two wins If all sites in [5,6,7,8] satisfy the condition 0 is equal to the total number of vertex in current site, player one wins.
                
        "))
        (useFor "Ruleset/Owana (Ludii 4) (Reconstructed)" (id "3017"))
        (useFor "Ruleset/Owana (Ludii 5) (Reconstructed)" (rules "The game Owana is played by two players on a 2 x 4 Mancala board with 2 outer stores.
                Regions:
                RegionP1: the bottom sites of the board for P1
                RegionP2: the top sites of the board for P2 
                All players play with null The following pieces are shared by all players: Seeds.
                Players take turns moving.
                Setup:
                Set the count of the vertexes in track of board to 4.
                Rules: 
                Select Vertex in if in the same turn if 0 is less than the total number of vertex in the location of the piece then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, captureRule: true, captureEffect: if to is in RegionP1 or RegionP2 and the total number of vertex in to is equal to 4, from vertex in to to vertex Player the moving player's hand site 0 moveRule: true then Each turn, where the site is within if 1 is the mover, if the total number of vertex in current site is equal to 4, from vertex in current site to vertex Player the moving player's hand site 0 moveRule: true, else if 1 is less than the total number of vertex in to, move again, type: Vertex, includeSelf: false.
                Aim: 
                If all sites in [1,2,3,4] satisfy the condition 0 is equal to the total number of vertex in current site, player two wins If all sites in [5,6,7,8] satisfy the condition 0 is equal to the total number of vertex in current site, player one wins.
                
        "))
        (useFor "Ruleset/Owana (Ludii 5) (Reconstructed)" (id "3018"))
        (useFor "Ruleset/Owana (Ludii 6) (Reconstructed)" (rules "The game Owana is played by two players on a 2 x 4 Mancala board with 2 outer stores.
                Regions:
                RegionP1: the bottom sites of the board for P1
                RegionP2: the top sites of the board for P2 
                All players play with null The following pieces are shared by all players: Seeds.
                Players take turns moving.
                Setup:
                Set the count of the vertexes in track of board to 4.
                Rules: 
                Select Vertex in if in the same turn if vertex the location of the piece is occupied and 0 is equal to State at the location of the piece then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, captureRule: true, captureEffect: if 0 is not equal to State at to, if the next mover is equal to State at to, from vertex in to to vertex Player the moving player's hand site 0 moveRule: true and set the state of the Vertex to to the next mover, else if to is in RegionP1 or RegionP2 and 4 is equal to the total number of vertex in to, set the state of the Vertex to to current moving player and set the state of the Vertex if to is in the bottom sites of the board then add the following values: [to,6] otherwise to minus 6 to current moving player, else if 1 is less than the total number of vertex in to, move again and set the variable Replay to to, type: Vertex, includeSelf: true if not Player the moving player is the next mover and all sites in [1,2,3,4] satisfy the condition 0 is not equal to State at current site or empty or all sites in [5,6,7,8] satisfy the condition 0 is not equal to State at current site or empty, Each turn, where the site is within [1,2,3,4], if 0 is equal to State at current site, from vertex in current site to vertex Player 1's hand site 0 moveRule: true and Each turn, where the site is within [5,6,7,8], if 0 is equal to State at current site, from vertex in current site to vertex Player 2's hand site 0 moveRule: true and Each turn, where the site is within the sites of the board, if State at current site is equal to 1, from vertex in current site to vertex Player 1's hand site 0 moveRule: true and set the state of the Vertex current site to 0, else if State at current site is equal to 2, from vertex in current site to vertex Player 2's hand site 0 moveRule: true and set the state of the Vertex current site to 0.
                Aim: 
                If all sites in [1,2,3,4] satisfy the condition 0 is equal to the total number of vertex in current site, player two wins If all sites in [5,6,7,8] satisfy the condition 0 is equal to the total number of vertex in current site, player one wins.
                
        "))
        (useFor "Ruleset/Owana (Ludii 6) (Reconstructed)" (id "3019"))
        (useFor "Ruleset/Owana (Ludii 7) (Reconstructed)" (rules "The game Owana is played by two players on a 2 x 4 Mancala board with 2 outer stores.
                Regions:
                RegionP1: the bottom sites of the board for P1
                RegionP2: the top sites of the board for P2 
                All players play with null The following pieces are shared by all players: Seeds.
                Players take turns moving.
                Setup:
                Set the count of the vertexes in track of board to 4.
                Rules: 
                Select Vertex in if in the same turn if 0 is less than the total number of vertex in the location of the piece then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, captureRule: true, captureEffect: if the total number of vertex in 1 steps forward from site to on track null is greater than 0, move again, else if the total number of vertex in if 1 steps forward from site to on track null is in the bottom sites of the board then add the following values: [1 steps forward from site to on track null,7] otherwise 1 steps forward from site to on track null minus 7 is greater than 0, from vertex in if 1 steps forward from site to on track null is in the bottom sites of the board then add the following values: [1 steps forward from site to on track null,7] otherwise 1 steps forward from site to on track null minus 7 to vertex Player the moving player's hand site 0 moveRule: true, type: Vertex, includeSelf: true.
                Aim: 
                If all sites in [1,2,3,4] satisfy the condition 0 is equal to the total number of vertex in current site, player two wins If all sites in [5,6,7,8] satisfy the condition 0 is equal to the total number of vertex in current site, player one wins.
                
        "))
        (useFor "Ruleset/Owana (Ludii 7) (Reconstructed)" (id "3020"))
        (useFor "Ruleset/Owana (Ludii 8) (Reconstructed)" (rules "The game Owana is played by two players on a 2 x 4 Mancala board with 2 outer stores.
                Regions:
                RegionP1: the bottom sites of the board for P1
                RegionP2: the top sites of the board for P2 
                All players play with null The following pieces are shared by all players: Seeds.
                Players take turns moving.
                Setup:
                Set the count of the vertexes in track of board to 4.
                Rules: 
                Select Vertex in if in the same turn if vertex the location of the piece is occupied then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, skipFn: to is in RegionP1 or RegionP2 and current moving player is equal to State at to, captureRule: true, captureEffect: if not to is in RegionP1 or RegionP2 and the next mover is equal to State at to, if 3 is equal to the total number of vertex in to, from vertex in to to vertex 1 steps forward from site to on track null moveRule: true and Sow with the following rules, startLoc: 1 steps forward from site to on track null, countFn: 3, numPerHoleFn: 1, origin: false, skipFn: to is in RegionP1 or RegionP2 and 1 is equal to State at to, captureRule: true, type: Vertex, includeSelf: true and set the state of the Vertex to to 1, else if 1 is less than the total number of vertex in to, move again and set the variable Replay to to, type: Vertex, includeSelf: true Each turn, where the site is within if 1 is the mover, if 1 is equal to State at current site, from vertex in current site to vertex the centre point of the board moveRule: true and set the state of the Vertex current site to 1.
                Aim: 
                If all sites in [1,2,3,4] satisfy the condition 0 is equal to the total number of vertex in current site, player two wins If all sites in [5,6,7,8] satisfy the condition 0 is equal to the total number of vertex in current site, player one wins.
                
        "))
        (useFor "Ruleset/Owana (Ludii 8) (Reconstructed)" (id "3021"))
        (useFor "Ruleset/Owana (Ludii 9) (Reconstructed)" (rules "The game Owana is played by two players on a 2 x 4 Mancala board with 2 outer stores.
                Regions:
                RegionP1: the bottom sites of the board for P1
                RegionP2: the top sites of the board for P2 
                All players play with null The following pieces are shared by all players: Seeds.
                Players take turns moving.
                Setup:
                Set the count of the vertexes in track of board to 4.
                Rules: 
                Select Vertex in RegionP1 or RegionP2 if true then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, trackName: Track, ownerFn: current moving player, origin: false, captureRule: true, type: Vertex, includeSelf: true.
                Aim: 
                If all sites in [1,2,3,4] satisfy the condition 0 is equal to the total number of vertex in current site, player two wins If all sites in [5,6,7,8] satisfy the condition 0 is equal to the total number of vertex in current site, player one wins.
                
        "))
        (useFor "Ruleset/Owana (Ludii 9) (Reconstructed)" (id "3022"))
        (useFor "Ruleset/Owana (Ludii 10) (Reconstructed)" (rules "The game Owana is played by two players on a 2 x 4 Mancala board with 2 outer stores.
                Regions:
                RegionP1: the bottom sites of the board for P1
                RegionP2: the top sites of the board for P2 
                All players play with null The following pieces are shared by all players: Seeds.
                Players take turns moving.
                Setup:
                Set the count of the vertexes in track of board to 4.
                Rules: 
                Select Vertex in RegionP1 or RegionP2 if the total number of vertex in the location of the piece is greater than 1 then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, captureRule: true, captureEffect: if 2 is equal to the total number of vertex in to or 3 is equal to the total number of vertex in to, from vertex in to to vertex Player the moving player's hand site 0 moveRule: true and if to is not equal to  the Vertex 1 steps ahead of to in the direction east, if 2 is equal to the total number of vertex in  the Vertex 1 steps ahead of to in the direction east or 3 is equal to the total number of vertex in  the Vertex 1 steps ahead of to in the direction east, from vertex in  the Vertex 1 steps ahead of to in the direction east to vertex Player the moving player's hand site 0 moveRule: true and if to is not equal to  the Vertex 1 steps ahead of to in the direction west, if 2 is equal to the total number of vertex in  the Vertex 1 steps ahead of to in the direction west or 3 is equal to the total number of vertex in  the Vertex 1 steps ahead of to in the direction west, from vertex in  the Vertex 1 steps ahead of to in the direction west to vertex Player the moving player's hand site 0 moveRule: true, type: Vertex, includeSelf: true.
                Aim: 
                If all sites in [1,2,3,4] satisfy the condition 0 is equal to the total number of vertex in current site, player two wins If all sites in [5,6,7,8] satisfy the condition 0 is equal to the total number of vertex in current site, player one wins.
                
        "))
        (useFor "Ruleset/Owana (Ludii 10) (Reconstructed)" (id "3023"))
        (source "Klepzig 1972:186-187.")
        (version "1.3.10")
        (classification "board/sow/two rows/reconstruction/done")
        (credit "Eric Piette")
        (origin "This game was played in Republic of Congo, around 1971.")
        }
    )
    
    (graphics {
        (board Style Mancala)
    })
    
    (recon {
        (concept "Sow" True)
    })
)

