(define "Tennessee Waltz_ai"
    (useFor { "Ruleset/Square (Described)" }
        
        (heuristics {
            (score weight:0.3)
        })
        
        trainedFeatures:(features {
            (featureSet P1 selectionFeatures:{
                (pair "rel:to=<{}>:pat=<els=[#{0,1/4}]>" 0.5415561)
                (pair "rel:to=<{}>:pat=<els=[#{1/4}, #{0,0}]>" 0.59510106)
                (pair "rel:from=<{}>:pat=<els=[]>" -0.028541934)
                (pair "rel:to=<{}>:pat=<els=[!f{}, f{0,-1/4}, -{1/4}, !-{-1/4}]>" -0.33678263)
                (pair "rel:to=<{}>:pat=<els=[#{1/4,-1/4}, f{0,0,0}]>" 0.69641644)
                (pair "rel:last_to=<{0,-1/4}>:to=<{}>:pat=<els=[!f{}, f{0}, f{1/2,-1/4}, !-{1/4}]>" 1.1681159)
                (pair "rel:last_to=<{}>:from=<{0}>:to=<{}>:pat=<els=[e{0,-1/4,1/4}]>" 0.2838096)
                (pair "rel:to=<{}>:pat=<els=[#{1/4}, f{0,-1/4}]>" 0.50793695)
                }
            )
            (featureSet P2 selectionFeatures:{
                (pair "rel:from=<{}>:to=<{0}>:pat=<els=[#{0,0,1/4}]>" 1.0196381)
                (pair "rel:to=<{}>:pat=<els=[f{0}]>" -0.64077884)
                (pair "rel:from=<{}>:to=<{0}>:pat=<els=[!#{1/4,0,0}, #{0,0,1/4}]>" 1.9675491)
                (pair "rel:to=<{}>:pat=<els=[#{-1/4,0}, #{0,1/4}]>" 0.53254235)
                (pair "rel:to=<{}>:pat=<els=[!-{0,1/4,-1/2,-1/4}]>" 0.38258338)
                (pair "rel:to=<{}>:pat=<els=[!e{1/4,0}, #{0,1/4}]>" 0.43845937)
                (pair "rel:to=<{}>:pat=<els=[!-{0,-1/4}, !-{1/2,1/4,-1/2,-1/4}]>" 0.3876925)
                (pair "rel:to=<{}>:pat=<els=[!e{0,0}, !e{1/2,1/4}, f{0,1/4}, f{1/2,0}]>" -0.17097475)
                (pair "rel:to=<{}>:pat=<els=[f{1/4,-1/4}, f{0}]>" -0.6698572)
                (pair "rel:to=<{}>:pat=<els=[e{1/4,-1/4}, !-{0,1/4}]>" -0.35072893)
                (pair "rel:to=<{}>:pat=<els=[e{0}, !e{0,0}, f{0,1/4}, f{1/2,0}]>" -0.0816498)
                (pair "rel:to=<{}>:pat=<els=[-{1/4,0}, e{0,0,0}, #{-1/2,0}, f{0,-1/4}]>" -0.16929305)
                }
            )
        })
        
    )
    (useFor { "Ruleset/Hex (Described)" }
        
        (heuristics {
            (score weight:0.3)
        })
        
        trainedFeatures:(features {
            (featureSet P1 selectionFeatures:{
                (pair "rel:to=<{}>:pat=<els=[#{1/6,-1/3}, !-{0,0,0}, #{1/3,-1/6}, e{1/2,0,0}]>" 0.49533063)
                (pair "rel:to=<{}>:pat=<els=[!f{-1/6,0}, -{-1/3}, f{0}, #{1/6,1/6}]>" 0.080343716)
                (pair "rel:to=<{}>:pat=<els=[f{0}, -{1/2,-1/3}, !-{-1/3,0,0}, #{0,-1/6}]>" -0.043418348)
                (pair "rel:from=<{}>:to=<{0}>:pat=<els=[f{0,1/3}, e{0,-1/2,-1/2,-1/3}]>" -0.043349076)
                (pair "rel:to=<{}>:pat=<els=[e{-1/6,0}, -{-1/3,1/3}, !-{-1/2,0,0}, -{0,-1/3}, f{0}, #{1/6,1/6}]>" 0.20733649)
                }
            )
            (featureSet P2 selectionFeatures:{
                (pair "rel:to=<{}>:pat=<els=[#{0}]>" 0.29558542)
                (pair "rel:to=<{}>:pat=<els=[f{0,-1/6}, #{1/6,0,0}]>" -0.065461546)
                (pair "rel:to=<{}>:pat=<els=[f{0,1/3}, f{1/3,0}, f{1/6,1/6}]>" 0.02818234)
                (pair "rel:to=<{}>:pat=<els=[#{0}, !e{0,0}, f{1/6,1/3}]>" 0.39657703)
                (pair "rel:to=<{}>:pat=<els=[#{0}, f{1/2,0}, f{1/3,1/6}]>" 0.38919964)
                (pair "rel:to=<{}>:pat=<els=[f{0,-1/3}, !-{1/6,-1/3}, #{0,0,0}, e{1/3,-1/3}, !e{1/6,0}, !e{1/3,1/3}, !-{1/6,1/3}, e{0,1/3}, f{-1/6,1/3}]>" -0.06525698)
                (pair "rel:to=<{}>:pat=<els=[!-{0,1/6}, #{0,1/6}, -{1/3,0,0}]>" 0.2020097)
                (pair "rel:to=<{}>:pat=<els=[e{0,1/3}, f{-1/6,1/3}, f{1/2,-1/6}]>" -0.38559544)
                (pair "rel:to=<{}>:pat=<els=[#{0}, !e{0,0}, f{1/6,1/3}, f{1/3,1/6}]>" 0.50704855)
                (pair "rel:to=<{}>:pat=<els=[e{0,0,0}]>" -0.030670147)
                (pair "rel:last_to=<{0,1/6,0}>:from=<{}>:to=<{0}>:pat=<els=[!-{1/3,1/6}, e{0,1/6,1/3}]>" 0.3619526)
                (pair "rel:to=<{}>:pat=<els=[!#{-1/3,0,0,0}, !e{0,0}, f{1/6,1/3}]>" -0.25714767)
                }
            )
        })
        
    )
)
