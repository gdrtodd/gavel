(game "Cumisitha"
    <Variant>
)

//------------------------------------------------------------------------------

(option "Variant" <Variant> args:{ <variant> }
    {
    (item "Cumisitha (Ludii 1)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (add 
                    (rotate 180 
                        (merge 
                            (shift 0 2 
                                (square 5 diagonals:Alternating)
                            )
                            
                            (wedge 3)
                        )
                    )
                    edges:{ { 27 29}
                    { 29 25 }
                    }
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Dog2" 
                    (union 
                        (expand 
                            (sites Bottom)
                        steps:1)
                        
                        (sites { "A3" "E3"}
                        )
                    )
                )
                
                (place "Jaguar1" coord:"C7")
                }
            )
            
            (play 
                (forEach Piece)
            )
            
            (end { 
                (if 
                    (no Moves Next)
                    
                    (result Next Loss)
                )
                
                (if 
                    (<= 
                        (count Pieces P2)
                    6)
                    
                    (result P2 Loss)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 1) ruleset.")
    
    (item "Cumisitha (Ludii 2)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (merge 
                    (shift 0 2 
                        (square 5 diagonals:Alternating)
                    )
                    
                    (wedge 3)
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Dog2" 
                    (union 
                        (expand 
                            (sites Bottom)
                        steps:1)
                        
                        (sites { "A3" "E3"}
                        )
                    )
                )
                
                (place "Jaguar1" coord:"C7")
                }
            )
            
            (play 
                (forEach Piece)
            )
            
            (end { 
                (if 
                    (no Moves Next)
                    
                    (result Next Loss)
                )
                
                (if 
                    (<= 
                        (count Pieces P2)
                    6)
                    
                    (result P2 Loss)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 2) ruleset.")
    
    (item "Cumisitha (Ludii 3)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (add 
                    (rotate 180 
                        (merge 
                            (shift 0 2 
                                (square 5 diagonals:Alternating)
                            )
                            
                            (wedge 3)
                        )
                    )
                    edges:{ { 27 29}
                    { 29 25 }
                    }
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Dog2" 
                    (difference 
                        (expand 
                            (sites Top)
                        steps:2)
                        
                        (sites { "C5"}
                        )
                    )
                )
                
                (place "Jaguar1" coord:"C5")
                }
            )
            
            (play 
                (forEach Piece)
            )
            
            (end { 
                (if 
                    (no Moves Next)
                    
                    (result Next Loss)
                )
                
                (if 
                    (<= 
                        (count Pieces P2)
                    0)
                    
                    (result P2 Loss)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 3) ruleset.")
    
    (item "Cumisitha (Ludii 4)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (merge 
                    (shift 0 2 
                        (square 5 diagonals:Alternating)
                    )
                    
                    (wedge 3)
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Dog2" 
                    (difference 
                        (expand 
                            (sites Top)
                        steps:2)
                        
                        (sites { "C5"}
                        )
                    )
                )
                
                (place "Jaguar1" coord:"C5")
                }
            )
            
            (play 
                (forEach Piece)
            )
            
            (end { 
                (if 
                    (no Moves Next)
                    
                    (result Next Loss)
                )
                
                (if 
                    (<= 
                        (count Pieces P2)
                    0)
                    
                    (result P2 Loss)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 4) ruleset.")
    
    (item "Cumisitha (Ludii 5)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (add 
                    (rotate 180 
                        (merge 
                            (shift 0 2 
                                (square 5 diagonals:Alternating)
                            )
                            
                            (wedge 3)
                        )
                    )
                    edges:{ { 27 29}
                    { 29 25 }
                    }
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Jaguar1" coord:"C6")
                
                (place "Dog2" 
                    (expand 
                        (sites Bottom)
                    steps:2)
                )
                }
            )
            
            (play 
                (forEach Piece)
            )
            
            (end { 
                (if 
                    (no Moves P1)
                    
                    (result P1 Loss)
                )
                
                (if 
                    (<= 
                        (count Pieces P2)
                    6)
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 5) ruleset.")
    
    (item "Cumisitha (Ludii 6)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (rotate 180 
                    (merge 
                        (shift 0 2 
                            (square 5 diagonals:Alternating)
                        )
                        
                        (wedge 3)
                    )
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Dog2" 
                    (union 
                        (expand 
                            (sites Bottom)
                        steps:1)
                        
                        (sites { "A3" "E3"}
                        )
                    )
                )
                
                (place "Jaguar1" coord:"C7")
                }
            )
            
            (play 
                (forEach Piece)
            )
            
            (end { 
                (if 
                    (no Moves Next)
                    
                    (result Next Loss)
                )
                
                (if 
                    (<= 
                        (count Pieces P2)
                    6)
                    
                    (result P2 Loss)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 6) ruleset.")
    
    (item "Cumisitha (Ludii 7)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (rotate 180 
                    (merge 
                        (shift 0 2 
                            (square 5 diagonals:Alternating)
                        )
                        
                        (wedge 3)
                    )
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Dog2" 
                    (difference 
                        (expand 
                            (sites Top)
                        steps:2)
                        
                        (sites { "C5"}
                        )
                    )
                )
                
                (place "Jaguar1" coord:"C5")
                }
            )
            
            (play 
                (forEach Piece)
            )
            
            (end { 
                (if 
                    (no Moves Next)
                    
                    (result Next Loss)
                )
                
                (if 
                    (<= 
                        (count Pieces P2)
                    0)
                    
                    (result P2 Loss)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 7) ruleset.")
    
    (item "Cumisitha (Ludii 8)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (merge 
                    (shift 0 2 
                        (square 5 diagonals:Alternating)
                    )
                    
                    (wedge 3)
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Jaguar1" coord:"C6")
                
                (place "Dog2" 
                    (expand 
                        (sites Bottom)
                    steps:2)
                )
                }
            )
            
            (play 
                (forEach Piece)
            )
            
            (end { 
                (if 
                    (no Moves P1)
                    
                    (result P1 Loss)
                )
                
                (if 
                    (<= 
                        (count Pieces P2)
                    6)
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 8) ruleset.")
    
    (item "Cumisitha (Ludii 9)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (rotate 180 
                    (merge 
                        (shift 0 2 
                            (square 5 diagonals:Alternating)
                        )
                        
                        (wedge 3)
                    )
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Jaguar1" coord:"C6")
                
                (place "Dog2" 
                    (expand 
                        (sites Bottom)
                    steps:2)
                )
                }
            )
            
            (play 
                (forEach Piece)
            )
            
            (end { 
                (if 
                    (no Moves P1)
                    
                    (result P1 Loss)
                )
                
                (if 
                    (<= 
                        (count Pieces P2)
                    6)
                    
                    (result P1 Win)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 9) ruleset.")
    
    (item "Cumisitha (Ludii 10)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (rectangle 10 2)
            )
            
            (piece "Disc" Each)
            
            (dice d:7 from:0 num:1)
            
            (map { 
                (pair 0 -10)
                
                (pair 1 1)
                
                (pair 2 2)
                
                (pair 3 3)
                
                (pair 4 4)
                
                (pair 5 5)
                
                (pair 6 6)
                
                (pair 7 10)
                }
            )
            }
        )
        
        (rules 
            (play 
                (move Add 
                    (to 
                        (sites Empty)
                    )
                )
            )
            
            (end 
                (if 
                    (is Line 3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 10) ruleset.")
    
    (item "Cumisitha (Ludii 11)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (merge 
                    (scale 2 
                        (square 5 diagonals:Alternating)
                    )
                    
                    (graph vertices:{ { 4 8}
                        { 3 9}
                        { 4 9}
                        { 5 9}
                        { 2 10}
                        { 3 10}
                        { 4 10}
                        { 5 10}
                        { 6 10}
                        { 1 11}
                        { 3 11}
                        { 4 11}
                        { 5 11}
                        { 7 11}
                        }
                        edges:{ { 0 1}
                        { 0 2}
                        { 0 3}
                        { 1 4}
                        { 1 5}
                        { 1 2}
                        { 2 6}
                        { 2 3}
                        { 3 7}
                        { 3 8}
                        { 4 9}
                        { 4 5}
                        { 5 10}
                        { 5 6}
                        { 6 11}
                        { 6 7}
                        { 7 12}
                        { 7 8}
                        { 8 13}
                        { 9 10}
                        { 10 11}
                        { 11 12}
                        { 12 13}
                        }
                    )
                )
            use:Vertex )
            
            (piece "MountainLion" P1 
                (if 
                    (is Prev Mover)
                    
                    (or 
                        (move Pass)
                        
                        (move Hop 
                            (from 
                                (last To)
                            )
                            
                            (between if:
                                (and 
                                    (not 
                                        (is In 
                                            (between)
                                            
                                            (sites ToClear)
                                        )
                                    )
                                    
                                    (is Enemy 
                                        (who at:
                                            (between)
                                        )
                                    )
                                )
                                
                                (apply 
                                    (remove 
                                        (between)
                                    )
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (if 
                                    (can Move 
                                        (hop 
                                            (from 
                                                (last To)
                                            )
                                            
                                            (between if:
                                                (and 
                                                    (not 
                                                        (is In 
                                                            (between)
                                                            
                                                            (sites ToClear)
                                                        )
                                                    )
                                                    
                                                    (is Enemy 
                                                        (who at:
                                                            (between)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:
                                                (is Empty 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (moveAgain)
                                )
                            )
                        )
                    )
                    
                    (or 
                        (move Hop 
                            (between if:
                                (is Enemy 
                                    (who at:
                                        (between)
                                    )
                                )
                                
                                (apply 
                                    (remove 
                                        (between)
                                    )
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (if 
                                    (can Move 
                                        (hop 
                                            (from 
                                                (last To)
                                            )
                                            
                                            (between if:
                                                (and 
                                                    (not 
                                                        (is In 
                                                            (between)
                                                            
                                                            (sites ToClear)
                                                        )
                                                    )
                                                    
                                                    (is Enemy 
                                                        (who at:
                                                            (between)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:
                                                (is Empty 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (moveAgain)
                                )
                            )
                        )
                        
                        (move Step 
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 N 
                (move Step Forward 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Dog2" 
                    (union 
                        (expand 
                            (sites Bottom)
                        )
                        
                        (sites { "A3" "I3"}
                        )
                    )
                )
                
                (place "MountainLion1" 
                    (coord "E7")
                )
                }
            )
            
            (play 
                (forEach Piece)
            )
            
            (end { 
                (if 
                    (no Pieces P2)
                    
                    (result P1 Win)
                )
                
                (if 
                    (no Moves P1)
                    
                    (result P2 Win)
                )
                
                (if 
                    (no Moves P2)
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 11) ruleset.")
    
    (item "Cumisitha (Ludii 12)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (merge 
                    (scale 2 
                        (square 5 diagonals:Alternating)
                    )
                    
                    (graph vertices:{ { 4 8}
                        { 3 9}
                        { 4 9}
                        { 5 9}
                        { 2 10}
                        { 3 10}
                        { 4 10}
                        { 5 10}
                        { 6 10}
                        { 1 11}
                        { 3 11}
                        { 4 11}
                        { 5 11}
                        { 7 11}
                        }
                        edges:{ { 0 1}
                        { 0 2}
                        { 0 3}
                        { 1 4}
                        { 1 5}
                        { 1 2}
                        { 2 6}
                        { 2 3}
                        { 3 7}
                        { 3 8}
                        { 4 9}
                        { 4 5}
                        { 5 10}
                        { 5 6}
                        { 6 11}
                        { 6 7}
                        { 7 12}
                        { 7 8}
                        { 8 13}
                        { 9 10}
                        { 10 11}
                        { 11 12}
                        { 12 13}
                        }
                    )
                )
            use:Vertex )
            
            (piece "MountainLion" P1 
                (if 
                    (is Prev Mover)
                    
                    (or 
                        (move Pass)
                        
                        (move Hop 
                            (from 
                                (last To)
                            )
                            
                            (between if:
                                (and 
                                    (not 
                                        (is In 
                                            (between)
                                            
                                            (sites ToClear)
                                        )
                                    )
                                    
                                    (is Enemy 
                                        (who at:
                                            (between)
                                        )
                                    )
                                )
                                
                                (apply 
                                    (remove 
                                        (between)
                                    )
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (if 
                                    (can Move 
                                        (hop 
                                            (from 
                                                (last To)
                                            )
                                            
                                            (between if:
                                                (and 
                                                    (not 
                                                        (is In 
                                                            (between)
                                                            
                                                            (sites ToClear)
                                                        )
                                                    )
                                                    
                                                    (is Enemy 
                                                        (who at:
                                                            (between)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:
                                                (is Empty 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (moveAgain)
                                )
                            )
                        )
                    )
                    
                    (or 
                        (move Hop 
                            (between if:
                                (is Enemy 
                                    (who at:
                                        (between)
                                    )
                                )
                                
                                (apply 
                                    (remove 
                                        (between)
                                    )
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (if 
                                    (can Move 
                                        (hop 
                                            (from 
                                                (last To)
                                            )
                                            
                                            (between if:
                                                (and 
                                                    (not 
                                                        (is In 
                                                            (between)
                                                            
                                                            (sites ToClear)
                                                        )
                                                    )
                                                    
                                                    (is Enemy 
                                                        (who at:
                                                            (between)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:
                                                (is Empty 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (moveAgain)
                                )
                            )
                        )
                        
                        (move Step 
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 N 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Dog2" 
                    (union 
                        (expand 
                            (sites Bottom)
                        )
                        
                        (sites { "A3" "I3"}
                        )
                    )
                )
                
                (place "MountainLion1" 
                    (coord "E7")
                )
                }
            )
            
            (play 
                (forEach Piece)
            )
            
            (end { 
                (if 
                    (no Pieces P2)
                    
                    (result P1 Win)
                )
                
                (if 
                    (no Moves P1)
                    
                    (result P2 Win)
                )
                
                (if 
                    (no Moves P2)
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 12) ruleset.")
    
    (item "Cumisitha (Ludii 13)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (add 
                    (rotate 180 
                        (merge 
                            (shift 0 2 
                                (square 5 diagonals:Alternating)
                            )
                            
                            (wedge 3)
                        )
                    )
                    edges:{ { 27 29}
                    { 29 25 }
                    }
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (play 
                (move Add 
                    (to 
                        (sites Empty)
                    )
                )
            )
            
            (end 
                (if 
                    (is Line 3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 13) ruleset.")
    
    (item "Cumisitha (Ludii 14)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (merge 
                    (shift 0 2 
                        (square 5 diagonals:Alternating)
                    )
                    
                    (wedge 3)
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (play 
                (move Add 
                    (to 
                        (sites Empty)
                    )
                )
            )
            
            (end 
                (if 
                    (is Line 3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 14) ruleset.")
    
    (item "Cumisitha (Ludii 15)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 8)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (or 
                        (if 
                            (is In 
                                (from)
                                
                                (sites Start 
                                    (piece 
                                        (what at:
                                            (from)
                                        )
                                    )
                                )
                            )
                            
                            (move Slide Forward 
                                (between 
                                    (exact 2)
                                    if:
                                    (is Empty 
                                        (between)
                                    )
                                )
                                
                                (to if:
                                    (is Empty 
                                        (to)
                                    )
                                )
                                
                                (then 
                                    (set Pending 
                                        (ahead 
                                            (last To)
                                        Backward)
                                    )
                                )
                            )
                        )
                        
                        (move Step 
                            (directions { FR FL }
                            )
                            
                            (to if:
                                (and 
                                    (is Pending)
                                    
                                    (= 
                                        (to)
                                        
                                        (value Pending)
                                    )
                                )
                            )
                            
                            (then 
                                (remove 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    }
                    
                    (then 
                        (and 
                            (if 
                                (is In 
                                    (last To)
                                    
                                    (sites Mover "Promotion")
                                )
                                
                                (moveAgain)
                            )
                            
                            (set Counter)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                    
                                    (then 
                                        (set Counter)
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                    
                                    (then 
                                        (set Counter)
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E8")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A8")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "H1")
                
                (pair 2 "H8")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 6)
                )
                
                (place "Rook1" { "A1" "H1"}
                state:1)
                
                (place "Knight1" { "B1" "G1"}
                )
                
                (place "Bishop1" { "C1" "F1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1" state:1)
                
                (place "Rook2" { "A8" "H8"}
                state:1)
                
                (place "Knight2" { "B8" "G8"}
                )
                
                (place "Bishop2" { "C8" "F8"}
                )
                
                (place "Queen2" coord:"D8")
                
                (place "King2" coord:"E8" state:1)
                }
            )
            
            (play 
                (if 
                    (is Prev Mover)
                    
                    (move Promote 
                        (last To)
                        
                        (piece { "Queen" "Knight" "Bishop" "Rook"}
                        )
                    Mover )
                    
                    (do 
                        (or 
                            (forEach Piece)
                            
                            (if 
                                (and 
                                    (= 
                                        (state at:
                                            (mapEntry "King" 
                                                (mover)
                                            )
                                        )
                                    1)
                                    
                                    (not 
                                        (is Threatened 
                                            (id "King" Mover)
                                        )
                                    )
                                )
                                
                                (or 
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookLeft" 
                                                        (mover)
                                                    )
                                                )
                                            1 )
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            W 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookRight" 
                                                        (mover)
                                                    )
                                                )
                                            1 )
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            E 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        ifAfterwards:
                        (not 
                            (is Threatened 
                                (id "King" Mover)
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (or 
                        (no Moves Mover)
                        
                        (= 
                            (counter)
                        99)
                    )
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 15) ruleset.")
    
    (item "Cumisitha (Ludii 16)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (rotate 180 
                    (merge 
                        (shift 0 2 
                            (square 5 diagonals:Alternating)
                        )
                        
                        (wedge 3)
                    )
                )
            use:Vertex )
            
            (piece "Jaguar" P1 
                (or 
                    (move Step 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (play 
                (move Add 
                    (to 
                        (sites Empty)
                    )
                )
            )
            
            (end 
                (if 
                    (is Line 3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 16) ruleset.")
    
    (item "Cumisitha (Ludii 17)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (merge 
                    (scale 2 
                        (square 5 diagonals:Alternating)
                    )
                    
                    (graph vertices:{ { 4 8}
                        { 3 9}
                        { 4 9}
                        { 5 9}
                        { 2 10}
                        { 3 10}
                        { 4 10}
                        { 5 10}
                        { 6 10}
                        { 1 11}
                        { 3 11}
                        { 4 11}
                        { 5 11}
                        { 7 11}
                        }
                        edges:{ { 0 1}
                        { 0 2}
                        { 0 3}
                        { 1 4}
                        { 1 5}
                        { 1 2}
                        { 2 6}
                        { 2 3}
                        { 3 7}
                        { 3 8}
                        { 4 9}
                        { 4 5}
                        { 5 10}
                        { 5 6}
                        { 6 11}
                        { 6 7}
                        { 7 12}
                        { 7 8}
                        { 8 13}
                        { 9 10}
                        { 10 11}
                        { 11 12}
                        { 12 13}
                        }
                    )
                )
            use:Vertex )
            
            (piece "MountainLion" P1 
                (if 
                    (is Prev Mover)
                    
                    (or 
                        (move Pass)
                        
                        (move Hop 
                            (from 
                                (last To)
                            )
                            
                            (between if:
                                (and 
                                    (not 
                                        (is In 
                                            (between)
                                            
                                            (sites ToClear)
                                        )
                                    )
                                    
                                    (is Enemy 
                                        (who at:
                                            (between)
                                        )
                                    )
                                )
                                
                                (apply 
                                    (remove 
                                        (between)
                                    )
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (if 
                                    (can Move 
                                        (hop 
                                            (from 
                                                (last To)
                                            )
                                            
                                            (between if:
                                                (and 
                                                    (not 
                                                        (is In 
                                                            (between)
                                                            
                                                            (sites ToClear)
                                                        )
                                                    )
                                                    
                                                    (is Enemy 
                                                        (who at:
                                                            (between)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:
                                                (is Empty 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (moveAgain)
                                )
                            )
                        )
                    )
                    
                    (or 
                        (move Hop 
                            (between if:
                                (is Enemy 
                                    (who at:
                                        (between)
                                    )
                                )
                                
                                (apply 
                                    (remove 
                                        (between)
                                    )
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (if 
                                    (can Move 
                                        (hop 
                                            (from 
                                                (last To)
                                            )
                                            
                                            (between if:
                                                (and 
                                                    (not 
                                                        (is In 
                                                            (between)
                                                            
                                                            (sites ToClear)
                                                        )
                                                    )
                                                    
                                                    (is Enemy 
                                                        (who at:
                                                            (between)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:
                                                (is Empty 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (moveAgain)
                                )
                            )
                        )
                        
                        (move Step 
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 N 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (play 
                (move Add 
                    (to 
                        (sites Empty)
                    )
                )
            )
            
            (end 
                (if 
                    (is Line 3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 17) ruleset.")
    
    (item "Cumisitha (Ludii 18)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (merge 
                    (scale 2 
                        (square 5 diagonals:Alternating)
                    )
                    
                    (graph vertices:{ { 4 8}
                        { 3 9}
                        { 4 9}
                        { 5 9}
                        { 2 10}
                        { 3 10}
                        { 4 10}
                        { 5 10}
                        { 6 10}
                        { 1 11}
                        { 3 11}
                        { 4 11}
                        { 5 11}
                        { 7 11}
                        }
                        edges:{ { 0 1}
                        { 0 2}
                        { 0 3}
                        { 1 4}
                        { 1 5}
                        { 1 2}
                        { 2 6}
                        { 2 3}
                        { 3 7}
                        { 3 8}
                        { 4 9}
                        { 4 5}
                        { 5 10}
                        { 5 6}
                        { 6 11}
                        { 6 7}
                        { 7 12}
                        { 7 8}
                        { 8 13}
                        { 9 10}
                        { 10 11}
                        { 11 12}
                        { 12 13}
                        }
                    )
                )
            use:Vertex )
            
            (piece "MountainLion" P1 
                (if 
                    (is Prev Mover)
                    
                    (or 
                        (move Pass)
                        
                        (move Hop 
                            (from 
                                (last To)
                            )
                            
                            (between if:
                                (and 
                                    (not 
                                        (is In 
                                            (between)
                                            
                                            (sites ToClear)
                                        )
                                    )
                                    
                                    (is Enemy 
                                        (who at:
                                            (between)
                                        )
                                    )
                                )
                                
                                (apply 
                                    (remove 
                                        (between)
                                    )
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (if 
                                    (can Move 
                                        (hop 
                                            (from 
                                                (last To)
                                            )
                                            
                                            (between if:
                                                (and 
                                                    (not 
                                                        (is In 
                                                            (between)
                                                            
                                                            (sites ToClear)
                                                        )
                                                    )
                                                    
                                                    (is Enemy 
                                                        (who at:
                                                            (between)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:
                                                (is Empty 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (moveAgain)
                                )
                            )
                        )
                    )
                    
                    (or 
                        (move Hop 
                            (between if:
                                (is Enemy 
                                    (who at:
                                        (between)
                                    )
                                )
                                
                                (apply 
                                    (remove 
                                        (between)
                                    )
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (if 
                                    (can Move 
                                        (hop 
                                            (from 
                                                (last To)
                                            )
                                            
                                            (between if:
                                                (and 
                                                    (not 
                                                        (is In 
                                                            (between)
                                                            
                                                            (sites ToClear)
                                                        )
                                                    )
                                                    
                                                    (is Enemy 
                                                        (who at:
                                                            (between)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:
                                                (is Empty 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (moveAgain)
                                )
                            )
                        )
                        
                        (move Step 
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Dog" P2 N 
                (move Step Forward 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (play 
                (move Add 
                    (to 
                        (sites Empty)
                    )
                )
            )
            
            (end 
                (if 
                    (is Line 3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 18) ruleset.")
    
    (item "Cumisitha (Ludii 19)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (rectangle 1 25)
                { 
                (track "Track1" { 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 }
                loop:True P1 )
                
                (track "Track2" { 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 }
                loop:True P2 )
                }
            use:Edge )
            
            (dice d:2 from:0 num:4)
            
            (piece "Stick" Each 
                (move 
                    (from 
                        (from)
                        level:
                        (level)
                    )
                    
                    (to 
                        (trackSite Move from:
                            (from)
                            steps:
                            (mapEntry "Throw" 
                                (count Pips)
                            )
                        )
                        if:True 
                        (apply 
                            (and 
                                (if 
                                    (is Enemy 
                                        (who at:
                                            (to)
                                        )
                                    )
                                    
                                    (if 
                                        (= 
                                            (if 
                                                (= 
                                                    (who at:
                                                        (to)
                                                    )
                                                P1)
                                                
                                                (if 
                                                    (= 
                                                        (id "Stick" Neutral)
                                                        
                                                        (what at:1)
                                                    )
                                                    1 
                                                    (if 
                                                        (= 
                                                            (id "Stick" Neutral )
                                                            
                                                            (what at:2)
                                                        )
                                                        2 
                                                        (if 
                                                            (= 
                                                                (id "Stick" Neutral )
                                                                
                                                                (what at:3)
                                                            )
                                                            3 
                                                            (if 
                                                                (= 
                                                                    (id "Stick" Neutral )
                                                                    
                                                                    (what at:4 )
                                                                )
                                                                4 
                                                                (if 
                                                                    (= 
                                                                        (id "Stick" Neutral )
                                                                        
                                                                        (what at:5 )
                                                                    )
                                                                    5 
                                                                    (if 
                                                                        (= 
                                                                            (id "Stick" Neutral )
                                                                            
                                                                            (what at:6 )
                                                                        )
                                                                        6 
                                                                        (if 
                                                                            (= 
                                                                                (id "Stick" Neutral )
                                                                                
                                                                                (what at:7 )
                                                                            )
                                                                            7 
                                                                            (if 
                                                                                (= 
                                                                                    (id "Stick" Neutral )
                                                                                    
                                                                                    (what at:8 )
                                                                                )
                                                                                8 
                                                                                (if 
                                                                                    (= 
                                                                                        (id "Stick" Neutral )
                                                                                        
                                                                                        (what at:9 )
                                                                                    )
                                                                                    9 
                                                                                    (if 
                                                                                        (= 
                                                                                            (id "Stick" Neutral )
                                                                                            
                                                                                            (what at:10 )
                                                                                        )
                                                                                        10 
                                                                                        (if 
                                                                                            (= 
                                                                                                (id "Stick" Neutral )
                                                                                                
                                                                                                (what at:11 )
                                                                                            )
                                                                                        11 Off )
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                                
                                                (if 
                                                    (= 
                                                        (id "Stick" Neutral)
                                                        
                                                        (what at:22)
                                                    )
                                                    22 
                                                    (if 
                                                        (= 
                                                            (id "Stick" Neutral )
                                                            
                                                            (what at:21)
                                                        )
                                                        21 
                                                        (if 
                                                            (= 
                                                                (id "Stick" Neutral )
                                                                
                                                                (what at:20)
                                                            )
                                                            20 
                                                            (if 
                                                                (= 
                                                                    (id "Stick" Neutral )
                                                                    
                                                                    (what at:19 )
                                                                )
                                                                19 
                                                                (if 
                                                                    (= 
                                                                        (id "Stick" Neutral )
                                                                        
                                                                        (what at:18 )
                                                                    )
                                                                    18 
                                                                    (if 
                                                                        (= 
                                                                            (id "Stick" Neutral )
                                                                            
                                                                            (what at:17 )
                                                                        )
                                                                        17 
                                                                        (if 
                                                                            (= 
                                                                                (id "Stick" Neutral )
                                                                                
                                                                                (what at:16 )
                                                                            )
                                                                            16 
                                                                            (if 
                                                                                (= 
                                                                                    (id "Stick" Neutral )
                                                                                    
                                                                                    (what at:15 )
                                                                                )
                                                                                15 
                                                                                (if 
                                                                                    (= 
                                                                                        (id "Stick" Neutral )
                                                                                        
                                                                                        (what at:14 )
                                                                                    )
                                                                                    14 
                                                                                    (if 
                                                                                        (= 
                                                                                            (id "Stick" Neutral )
                                                                                            
                                                                                            (what at:13 )
                                                                                        )
                                                                                        13 
                                                                                        (if 
                                                                                            (= 
                                                                                                (id "Stick" Neutral )
                                                                                                
                                                                                                (what at:12 )
                                                                                            )
                                                                                        12 Off )
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        Off )
                                        
                                        (remove 
                                            (to)
                                        )
                                        
                                        (fromTo 
                                            (from 
                                                (to)
                                            )
                                            
                                            (to 
                                                (if 
                                                    (= 
                                                        (who at:
                                                            (to)
                                                        )
                                                    P1)
                                                    
                                                    (if 
                                                        (= 
                                                            (id "Stick" Neutral )
                                                            
                                                            (what at:1)
                                                        )
                                                        1 
                                                        (if 
                                                            (= 
                                                                (id "Stick" Neutral )
                                                                
                                                                (what at:2)
                                                            )
                                                            2 
                                                            (if 
                                                                (= 
                                                                    (id "Stick" Neutral )
                                                                    
                                                                    (what at:3 )
                                                                )
                                                                3 
                                                                (if 
                                                                    (= 
                                                                        (id "Stick" Neutral )
                                                                        
                                                                        (what at:4 )
                                                                    )
                                                                    4 
                                                                    (if 
                                                                        (= 
                                                                            (id "Stick" Neutral )
                                                                            
                                                                            (what at:5 )
                                                                        )
                                                                        5 
                                                                        (if 
                                                                            (= 
                                                                                (id "Stick" Neutral )
                                                                                
                                                                                (what at:6 )
                                                                            )
                                                                            6 
                                                                            (if 
                                                                                (= 
                                                                                    (id "Stick" Neutral )
                                                                                    
                                                                                    (what at:7 )
                                                                                )
                                                                                7 
                                                                                (if 
                                                                                    (= 
                                                                                        (id "Stick" Neutral )
                                                                                        
                                                                                        (what at:8 )
                                                                                    )
                                                                                    8 
                                                                                    (if 
                                                                                        (= 
                                                                                            (id "Stick" Neutral )
                                                                                            
                                                                                            (what at:9 )
                                                                                        )
                                                                                        9 
                                                                                        (if 
                                                                                            (= 
                                                                                                (id "Stick" Neutral )
                                                                                                
                                                                                                (what at:10 )
                                                                                            )
                                                                                            10 
                                                                                            (if 
                                                                                                (= 
                                                                                                    (id "Stick" Neutral )
                                                                                                    
                                                                                                    (what at:11 )
                                                                                                )
                                                                                            11 Off )
                                                                                        )
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                    
                                                    (if 
                                                        (= 
                                                            (id "Stick" Neutral )
                                                            
                                                            (what at:22)
                                                        )
                                                        22 
                                                        (if 
                                                            (= 
                                                                (id "Stick" Neutral )
                                                                
                                                                (what at:21)
                                                            )
                                                            21 
                                                            (if 
                                                                (= 
                                                                    (id "Stick" Neutral )
                                                                    
                                                                    (what at:20 )
                                                                )
                                                                20 
                                                                (if 
                                                                    (= 
                                                                        (id "Stick" Neutral )
                                                                        
                                                                        (what at:19 )
                                                                    )
                                                                    19 
                                                                    (if 
                                                                        (= 
                                                                            (id "Stick" Neutral )
                                                                            
                                                                            (what at:18 )
                                                                        )
                                                                        18 
                                                                        (if 
                                                                            (= 
                                                                                (id "Stick" Neutral )
                                                                                
                                                                                (what at:17 )
                                                                            )
                                                                            17 
                                                                            (if 
                                                                                (= 
                                                                                    (id "Stick" Neutral )
                                                                                    
                                                                                    (what at:16 )
                                                                                )
                                                                                16 
                                                                                (if 
                                                                                    (= 
                                                                                        (id "Stick" Neutral )
                                                                                        
                                                                                        (what at:15 )
                                                                                    )
                                                                                    15 
                                                                                    (if 
                                                                                        (= 
                                                                                            (id "Stick" Neutral )
                                                                                            
                                                                                            (what at:14 )
                                                                                        )
                                                                                        14 
                                                                                        (if 
                                                                                            (= 
                                                                                                (id "Stick" Neutral )
                                                                                                
                                                                                                (what at:13 )
                                                                                            )
                                                                                            13 
                                                                                            (if 
                                                                                                (= 
                                                                                                    (id "Stick" Neutral )
                                                                                                    
                                                                                                    (what at:12 )
                                                                                                )
                                                                                            12 Off )
                                                                                        )
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                                
                                (if 
                                    (and { 
                                        (is Occupied 
                                            (to)
                                        )
                                        
                                        (= 
                                            (what at:
                                                (to)
                                            level:0)
                                            
                                            (id "Stick" Neutral)
                                        )
                                        
                                        (is In 
                                            (to)
                                            
                                            (sites Next "Side")
                                        )
                                        }
                                    )
                                    
                                    (remove 
                                        (to)
                                    level:0)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Stick" Neutral)
            
            (map "Throw" { 
                (pair 0 2)
                
                (pair 1 0)
                
                (pair 2 1)
                
                (pair 3 0)
                
                (pair 4 4)
                }
            )
            
            (regions "Side" P1 
                (sites { 0 1 2 3 4 5 6 7 8 9 10 11}
                )
            )
            
            (regions "Side" P2 
                (sites { 13 14 15 16 17 18 19 20 21 22 23}
                )
            )
            }
        )
        
        (rules 
            (play 
                (move Add 
                    (to 
                        (sites Empty)
                    )
                )
            )
            
            (end 
                (if 
                    (is Line 3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 19) ruleset.")
    
    (item "Cumisitha (Ludii 20)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (add 
                    (merge { 
                        (shift -1.25 -0.34 
                            (rotate 30 
                                (rectangle 6 1)
                            )
                        )
                        
                        (rectangle 1 5)
                        
                        (rectangle 5 1)
                        
                        (shift 0 6 
                            (rectangle 5 1)
                        )
                        
                        (shift 0 10 
                            (rectangle 1 5)
                        )
                        
                        (shift 7 0 
                            (rectangle 1 5)
                        )
                        
                        (shift 7 10 
                            (rectangle 1 5)
                        )
                        
                        (shift 11 0 
                            (rectangle 5 1)
                        )
                        
                        (shift 11 6 
                            (rectangle 5 1)
                        )
                        
                        (shift 12.25 5.33 
                            (rotate 30 
                                (rectangle 6 1)
                            )
                        )
                        }
                    )
                    edges:{ { 13 14}
                    { 22 28 }
                    { 37 36 }
                    { 9 23 }
                    }
                )
                { 
                (track "Track1" "46,5,SSE,N,E,S,W,NNW2,End" P1 directed:True )
                
                (track "Track2" "47,41,NNW,W,S,E,N,SSE2,End" P2 directed:True )
                }
            use:Vertex )
            
            (regions "AllSites" 
                (sites Board)
            )
            
            (regions "LastSide" P1 
                (sites { 6 7 8 9 23 24 25 26 27}
                )
            )
            
            (regions "LastSide" P2 
                (sites { 27 33 34 35 36 37 38 39 40}
                )
            )
            
            (dice d:2 facesByDie:{ { 0 4}
                { 0 6 }
                { 0 14 }
                { 0 15 }
                }
            num:4)
            
            (piece "Marker" Each 
                (if 
                    (if 
                        (not 
                            (is In 
                                (from)
                                
                                (sites Mover "LastSide")
                            )
                        )
                        True 
                        (or { 
                            (= 
                                (mapEntry "Throw" 
                                    (count Pips)
                                )
                            1)
                            
                            (= 
                                (mapEntry "Throw" 
                                    (count Pips)
                                )
                            2)
                            
                            (= 
                                (mapEntry "Throw" 
                                    (count Pips)
                                )
                            3)
                            }
                        )
                    )
                    
                    (or 
                        (if 
                            (= 14 
                                (mapEntry "Throw" 
                                    (count Pips)
                                )
                            )
                            
                            (if 
                                (= 
                                    (trackSite Move steps:1)
                                End)
                                
                                (move Remove 
                                    (from)
                                    level:
                                    (level)
                                )
                                
                                (move 
                                    (from 
                                        (from)
                                        level:
                                        (level)
                                    )
                                    
                                    (to 
                                        (trackSite Move steps:1)
                                        
                                        (apply 
                                            (if 
                                                (is Enemy 
                                                    (who at:
                                                        (to)
                                                    )
                                                )
                                                
                                                (forEach Level 
                                                    (to)
                                                    FromTop 
                                                    (fromTo 
                                                        (from 
                                                            (to)
                                                            level:
                                                            (level)
                                                        )
                                                        
                                                        (to 
                                                            (handSite 
                                                                (who at:
                                                                    (to)
                                                                    level:
                                                                    (level )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        
                        (if 
                            (= 
                                (trackSite Move steps:
                                    (mapEntry "Throw" 
                                        (count Pips)
                                    )
                                )
                            End )
                            
                            (move Remove 
                                (from)
                                level:
                                (level)
                            )
                            
                            (move 
                                (from 
                                    (from)
                                    level:
                                    (level)
                                )
                                
                                (to 
                                    (trackSite Move steps:
                                        (mapEntry "Throw" 
                                            (count Pips)
                                        )
                                    )
                                    
                                    (apply 
                                        (if 
                                            (is Enemy 
                                                (who at:
                                                    (to)
                                                )
                                            )
                                            
                                            (forEach Level 
                                                (to)
                                                FromTop 
                                                (fromTo 
                                                    (from 
                                                        (to)
                                                        level:
                                                        (level)
                                                    )
                                                    
                                                    (to 
                                                        (handSite 
                                                            (who at:
                                                                (to)
                                                                level:
                                                                (level)
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (map "Throw" { 
                (pair 0 10)
                
                (pair 39 5)
                
                (pair 24 3)
                
                (pair 25 3)
                
                (pair 35 3)
                
                (pair 33 3)
                
                (pair 10 2)
                
                (pair 18 2)
                
                (pair 19 2)
                
                (pair 20 2)
                
                (pair 21 2)
                
                (pair 29 2)
                }
            )
            }
        )
        
        (rules 
            (start { 
                (place Stack "Marker1" 
                    (handSite P1)
                count:4)
                
                (place Stack "Marker2" 
                    (handSite P2)
                count:4)
                }
            )
            
            (play 
                (do 
                    (roll)
                    next:
                    (or 
                        (forEach Piece)
                        
                        (forEach Piece container:
                            (mover)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Mover)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 20) ruleset.")
    
    (item "Cumisitha (Ludii 21)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 8)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (or 
                        (if 
                            (is In 
                                (from)
                                
                                (sites Start 
                                    (piece 
                                        (what at:
                                            (from)
                                        )
                                    )
                                )
                            )
                            
                            (move Slide Forward 
                                (between 
                                    (exact 2)
                                    if:
                                    (is Empty 
                                        (between)
                                    )
                                )
                                
                                (to if:
                                    (is Empty 
                                        (to)
                                    )
                                )
                                
                                (then 
                                    (set Pending 
                                        (ahead 
                                            (last To)
                                        Backward)
                                    )
                                )
                            )
                        )
                        
                        (move Step 
                            (directions { FR FL }
                            )
                            
                            (to if:
                                (and 
                                    (is Pending)
                                    
                                    (= 
                                        (to)
                                        
                                        (value Pending)
                                    )
                                )
                            )
                            
                            (then 
                                (remove 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    }
                    
                    (then 
                        (and 
                            (if 
                                (is In 
                                    (last To)
                                    
                                    (sites Mover "Promotion")
                                )
                                
                                (moveAgain)
                            )
                            
                            (set Counter)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                    
                                    (then 
                                        (set Counter)
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                    
                                    (then 
                                        (set Counter)
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E8")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A8")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "H1")
                
                (pair 2 "H8")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (play 
                (move Add 
                    (to 
                        (sites Empty)
                    )
                )
            )
            
            (end 
                (if 
                    (is Line 3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 21) ruleset.")
    
    (item "Cumisitha (Ludii 22)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 8)
            )
            
            (piece "Counter" P1 N)
            
            (piece "Counter" P2 S)
            
            (piece "DoubleCounter" Each)
            
            (regions P1 
                (sites Bottom)
            )
            
            (regions P2 
                (sites Top)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Counter1" 
                    (difference 
                        (expand 
                            (sites Bottom)
                            steps:
                            (- 3 1)
                        )
                        
                        (sites Phase 1)
                    )
                )
                
                (place "Counter2" 
                    (difference 
                        (expand 
                            (sites Top)
                            steps:
                            (- 3 1)
                        )
                        
                        (sites Phase 1)
                    )
                )
                }
            )
            
            (play 
                (if 
                    (is Prev Mover)
                    
                    (if 
                        (= 
                            (what at:
                                (last To)
                            )
                            
                            (id "Counter" Mover)
                        )
                        
                        (move Hop 
                            (from 
                                (last To)
                            )
                            Diagonal 
                            (between if:
                                (and 
                                    (not 
                                        (is In 
                                            (between)
                                            
                                            (sites ToClear)
                                        )
                                    )
                                    
                                    (is Enemy 
                                        (who at:
                                            (between)
                                        )
                                    )
                                )
                                
                                (apply 
                                    (remove 
                                        (between)
                                    at:EndOfTurn)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (if 
                                    (can Move 
                                        (move Hop 
                                            (from 
                                                (last To)
                                            )
                                            Diagonal 
                                            (between if:
                                                (and 
                                                    (not 
                                                        (is In 
                                                            (between)
                                                            
                                                            (sites ToClear)
                                                        )
                                                    )
                                                    
                                                    (is Enemy 
                                                        (who at:
                                                            (between)
                                                        )
                                                    )
                                                )
                                                
                                                (apply 
                                                    (remove 
                                                        (between)
                                                    at:EndOfTurn )
                                                )
                                            )
                                            
                                            (to if:
                                                (is Empty 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (moveAgain)
                                    
                                    (if 
                                        (is In 
                                            (last To)
                                            
                                            (sites Next)
                                        )
                                        
                                        (promote 
                                            (last To)
                                            
                                            (piece "DoubleCounter")
                                        Mover )
                                    )
                                )
                            )
                        )
                        
                        (max Moves 
                            (move Hop 
                                (from 
                                    (last To)
                                )
                                Diagonal 
                                (between before:
                                    (count Rows)
                                    after:
                                    (count Rows)
                                    if:
                                    (and 
                                        (not 
                                            (is In 
                                                (between)
                                                
                                                (sites ToClear)
                                            )
                                        )
                                        
                                        (is Enemy 
                                            (who at:
                                                (between)
                                            )
                                        )
                                    )
                                    
                                    (apply 
                                        (remove 
                                            (between)
                                        at:EndOfTurn)
                                    )
                                )
                                
                                (to if:
                                    (is Empty 
                                        (to)
                                    )
                                )
                                
                                (then 
                                    (if 
                                        (can Move 
                                            (hop 
                                                (from 
                                                    (last To)
                                                )
                                                Diagonal 
                                                (between before:
                                                    (count Rows)
                                                    after:
                                                    (count Rows)
                                                    if:
                                                    (and 
                                                        (not 
                                                            (is In 
                                                                (between)
                                                                
                                                                (sites ToClear)
                                                            )
                                                        )
                                                        
                                                        (is Enemy 
                                                            (who at:
                                                                (between)
                                                            )
                                                        )
                                                    )
                                                )
                                                
                                                (to if:
                                                    (is Empty 
                                                        (to)
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (moveAgain)
                                    )
                                )
                            )
                        )
                    )
                    
                    (priority { 
                        (or 
                            (forEach Piece "Counter" 
                                (move Hop 
                                    (from)
                                    Diagonal 
                                    (between if:
                                        (and 
                                            (not 
                                                (is In 
                                                    (between)
                                                    
                                                    (sites ToClear)
                                                )
                                            )
                                            
                                            (is Enemy 
                                                (who at:
                                                    (between)
                                                )
                                            )
                                        )
                                        
                                        (apply 
                                            (remove 
                                                (between)
                                            at:EndOfTurn)
                                        )
                                    )
                                    
                                    (to if:
                                        (is Empty 
                                            (to)
                                        )
                                    )
                                    
                                    (then 
                                        (if 
                                            (can Move 
                                                (move Hop 
                                                    (from 
                                                        (last To)
                                                    )
                                                    Diagonal 
                                                    (between if:
                                                        (and 
                                                            (not 
                                                                (is In 
                                                                    (between)
                                                                    
                                                                    (sites ToClear )
                                                                )
                                                            )
                                                            
                                                            (is Enemy 
                                                                (who at:
                                                                    (between )
                                                                )
                                                            )
                                                        )
                                                        
                                                        (apply 
                                                            (remove 
                                                                (between)
                                                            at:EndOfTurn )
                                                        )
                                                    )
                                                    
                                                    (to if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (moveAgain)
                                            
                                            (if 
                                                (is In 
                                                    (last To)
                                                    
                                                    (sites Next)
                                                )
                                                
                                                (promote 
                                                    (last To)
                                                    
                                                    (piece "DoubleCounter")
                                                Mover )
                                            )
                                        )
                                    )
                                )
                            )
                            
                            (max Moves 
                                (forEach Piece "DoubleCounter" 
                                    (move Hop Diagonal 
                                        (between before:
                                            (count Rows)
                                            after:
                                            (count Rows)
                                            if:
                                            (is Enemy 
                                                (who at:
                                                    (between)
                                                )
                                            )
                                            
                                            (apply 
                                                (remove 
                                                    (between)
                                                at:EndOfTurn )
                                            )
                                        )
                                        
                                        (to if:
                                            (is Empty 
                                                (to)
                                            )
                                        )
                                        
                                        (then 
                                            (if 
                                                (can Move 
                                                    (hop 
                                                        (from 
                                                            (last To)
                                                        )
                                                        Diagonal 
                                                        (between before:
                                                            (count Rows )
                                                            after:
                                                            (count Rows)
                                                            if:
                                                            (and 
                                                                (not 
                                                                    (is In 
                                                                        (between )
                                                                        
                                                                        (sites ToClear )
                                                                    )
                                                                )
                                                                
                                                                (is Enemy 
                                                                    (who at:
                                                                        (between )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                        
                                                        (to if:
                                                            (is Empty 
                                                                (to)
                                                            )
                                                        )
                                                    )
                                                )
                                                
                                                (moveAgain)
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        
                        (or 
                            (forEach Piece "Counter" 
                                (move Step 
                                    (directions { FR FL }
                                    )
                                    
                                    (to if:
                                        (is Empty 
                                            (to)
                                        )
                                    )
                                )
                                
                                (then 
                                    (if 
                                        (is In 
                                            (last To)
                                            
                                            (sites Next)
                                        )
                                        
                                        (promote 
                                            (last To)
                                            
                                            (piece "DoubleCounter")
                                        Mover )
                                    )
                                )
                            )
                            
                            (forEach Piece "DoubleCounter" 
                                (move Slide Diagonal)
                            )
                        )
                        }
                    )
                )
            )
            
            (end 
                (if 
                    (no Moves Next)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 22) ruleset.")
    
    (item "Cumisitha (Ludii 23)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 5)
            use:Vertex)
            
            (piece "Disc" Each 
                (or 
                    (move Hop 
                        (directions { Rightward Leftward Forwards }
                        of:All)
                        
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                        
                        (then 
                            (and 
                                (if 
                                    (is In 
                                        (last To)
                                        
                                        (sites Next)
                                    )
                                    
                                    (promote 
                                        (last To)
                                        
                                        (piece "DiscDouble")
                                    Mover )
                                )
                                
                                (set Value Mover 0)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { Rightward Leftward Forwards }
                        of:All)
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                        
                        (then 
                            (set Value Mover 1)
                        )
                    )
                    
                    (then 
                        (if 
                            (is In 
                                (last To)
                                
                                (sites Next)
                            )
                            
                            (promote 
                                (last To)
                                
                                (piece "DiscDouble")
                            Mover)
                        )
                    )
                )
            )
            
            (piece "DiscDouble" Each 
                (or 
                    (move Hop All 
                        (between before:
                            (count Rows)
                            after:
                            (count Rows)
                            if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                        
                        (then 
                            (set Value Mover 0)
                        )
                    )
                    
                    (move Slide All 
                        (then 
                            (set Value Mover 1)
                        )
                    )
                )
            )
            
            (regions P1 
                (intersection 
                    (sites Corners)
                    
                    (sites Bottom)
                )
            )
            
            (regions P2 
                (intersection 
                    (sites Corners)
                    
                    (sites Top)
                )
            )
            }
        )
        
        (rules 
            (start { 
                (place "Disc1" 
                    (union { 
                        (expand 
                            (sites Bottom)
                        )
                        
                        (sites { "D3" "E3"}
                        )
                        }
                    )
                )
                
                (place "Disc2" 
                    (union { 
                        (sites { "A3" "B3"}
                        )
                        
                        (expand 
                            (sites Top)
                        )
                        }
                    )
                )
                }
            )
            
            (play 
                (or 
                    (if 
                        (= 
                            (value Player Prev)
                        1)
                        
                        (or 
                            (if 
                                (and 
                                    (is In 
                                        (last From)
                                        
                                        (sites Pending)
                                    )
                                    
                                    (is In 
                                        (last From)
                                        
                                        (sites Empty)
                                    )
                                )
                                
                                (move Select 
                                    (from 
                                        (last To)
                                        if:
                                        (is Occupied 
                                            (from)
                                        )
                                    )
                                    
                                    (then 
                                        (and { 
                                            (remove 
                                                (last To)
                                            )
                                            
                                            (moveAgain)
                                            
                                            (set Value Prev 0)
                                            }
                                        )
                                    )
                                )
                            )
                            
                            (move Select 
                                (from 
                                    (sites Pending)
                                    if:
                                    (is Occupied 
                                        (from)
                                    )
                                )
                                
                                (then 
                                    (and { 
                                        (remove 
                                            (last To)
                                        )
                                        
                                        (moveAgain)
                                        
                                        (set Value Prev 0)
                                        }
                                    )
                                )
                            )
                        )
                    )
                    
                    (do 
                        (set Pending 
                            (sites From 
                                (or 
                                    (forEach Piece "Disc" 
                                        (move Hop 
                                            (directions { Rightward Leftward Forwards }
                                            of:All )
                                            
                                            (between if:
                                                (is Enemy 
                                                    (who at:
                                                        (between)
                                                    )
                                                )
                                                
                                                (apply 
                                                    (remove 
                                                        (between)
                                                    )
                                                )
                                            )
                                            
                                            (to if:
                                                (is Empty 
                                                    (to)
                                                )
                                            )
                                            
                                            (then 
                                                (and 
                                                    (if 
                                                        (is In 
                                                            (last To)
                                                            
                                                            (sites Next)
                                                        )
                                                        
                                                        (promote 
                                                            (last To)
                                                            
                                                            (piece "DiscDouble")
                                                        Mover )
                                                    )
                                                    
                                                    (set Value Mover 0)
                                                )
                                            )
                                        )
                                    )
                                    
                                    (forEach Piece "DiscDouble" 
                                        (move Hop All 
                                            (between before:
                                                (count Rows)
                                                after:
                                                (count Rows)
                                                if:
                                                (is Enemy 
                                                    (who at:
                                                        (between)
                                                    )
                                                )
                                                
                                                (apply 
                                                    (remove 
                                                        (between)
                                                    )
                                                )
                                            )
                                            
                                            (to if:
                                                (is Empty 
                                                    (to)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        next:
                        (forEach Piece)
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Mover)
                    
                    (result Mover Loss)
                )
            )
        )
        
    > "The Cumisitha (Ludii 23) ruleset.")
    
    (item "Cumisitha (Ludii 24)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (merge { 
                    (shift 11.3 -3.7 
                        (graph vertices:{ { 0 0}
                            { 1.3 -1}
                            { 2 0}
                            { 1.1 0.6}
                            }
                            edges:{ { 0 1}
                            { 1 2 }
                            { 2 3 }
                            { 3 0 }
                            }
                        )
                    )
                    
                    (shift 10.4 -2.4 
                        (graph vertices:{ { 0 0}
                            { 0.9 -1.3}
                            { 2 -0.7}
                            { 1 0.4}
                            }
                            edges:{ { 0 1}
                            { 1 2 }
                            { 2 3 }
                            { 3 0 }
                            }
                        )
                    )
                    
                    (shift 10.1 -1.1 
                        (graph vertices:{ { 0 0}
                            { 0.3 -1.3}
                            { 1.3 -0.9}
                            { 1 0.2}
                            }
                            edges:{ { 0 1}
                            { 1 2 }
                            { 2 3 }
                            { 3 0 }
                            }
                        )
                    )
                    
                    (shift 10 0 
                        (graph vertices:{ { 0 0}
                            { 0.1 -1.1}
                            { 1.1 -0.9}
                            { 1 0}
                            }
                            edges:{ { 0 1}
                            { 1 2 }
                            { 2 3 }
                            { 3 0 }
                            }
                        )
                    )
                    
                    (shift 11 1.87 
                        (graph vertices:{ { 0 0}
                            { 0.5 0.5 }
                            { 0 1 }
                            }
                            edges:{ { 0 1}
                            { 1 2 }
                            { 2 0 }
                            }
                        )
                    )
                    
                    (shift 10 1.87 
                        (graph vertices:{ { 0 0}
                            { -0.5 0.5 }
                            { 0 1 }
                            }
                            edges:{ { 0 1}
                            { 1 2 }
                            { 2 0 }
                            }
                        )
                    )
                    
                    (shift 10 1.87 
                        (square 1)
                    )
                    
                    (shift 10 1 
                        (tri 1)
                    )
                    
                    (shift 1 2 
                        (graph vertices:{ { 1 0}
                            { -0.5 0.87 }
                            { 0 0 }
                            }
                            edges:{ { 0 1}
                            { 1 2 }
                            { 2 0 }
                            }
                        )
                    )
                    
                    (shift 0 2 
                        (graph vertices:{ { -1 0}
                            { 0.5 0.87 }
                            { 0 0 }
                            }
                            edges:{ { 0 1}
                            { 1 2 }
                            { 2 0 }
                            }
                        )
                    )
                    
                    (shift 0 2 
                        (tri 1)
                    )
                    
                    (shift 0 1 
                        (square 1)
                    )
                    
                    (rectangle 1 11)
                    
                    (shift 0 -1 
                        (rectangle 1 4)
                    )
                    }
                )
                { 
                (track "Track1" "20,W,N1,E" P1 directed:True)
                
                (track "Track2" "11,12,S2,E" P2 directed:True)
                
                (track "Track3" "6,E1,9,S1,W" P3 directed:True)
                
                (track "Track4" "0,1,2,3,4,W" P4 directed:True)
                
                (track "TrackRight" "14,E,W" directed:True)
                
                (track "TrackLeft" "4,W,E" directed:True)
                }
            )
            
            (dice d:2 from:0 num:5)
            
            (piece "Marker" Each 
                (move 
                    (from 
                        (from)
                    )
                    
                    (to 
                        (if 
                            (= 
                                (state at:
                                    (from)
                                )
                            0)
                            
                            (trackSite Move "Track" steps:
                                (mapEntry "Throw" 
                                    (count Pips)
                                )
                            )
                            
                            (if 
                                (= 
                                    (state at:
                                        (from)
                                    )
                                1)
                                
                                (trackSite Move "TrackLeft" steps:
                                    (mapEntry "Throw" 
                                        (count Pips)
                                    )
                                )
                                
                                (trackSite Move "TrackRight" steps:
                                    (mapEntry "Throw" 
                                        (count Pips)
                                    )
                                )
                            )
                        )
                        if:
                        (or 
                            (and 
                                (not 
                                    (is In 
                                        (to)
                                        
                                        (sites "SafeSites")
                                    )
                                )
                                
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                            )
                            
                            (is Empty 
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (and 
                                (= 
                                    (state at:
                                        (last To)
                                    )
                                0)
                                
                                (is In 
                                    (last To)
                                    
                                    (sites "CentralTrack")
                                )
                            )
                            
                            (if 
                                (or 
                                    (is Mover P1)
                                    
                                    (is Mover P2)
                                )
                                
                                (set State at:
                                    (last To)
                                2)
                                
                                (set State at:
                                    (last To)
                                1)
                            )
                        )
                    )
                )
            )
            
            (map "Throw" { 
                (pair 0 5)
                
                (pair 1 1)
                
                (pair 2 2)
                
                (pair 3 3)
                
                (pair 4 4)
                
                (pair 5 5)
                }
            )
            
            (map "EntryPoint" { 
                (pair 1 20)
                
                (pair 2 11)
                
                (pair 3 6)
                
                (pair 4 0)
                }
            )
            
            (regions "SafeSites" 
                (sites { 4 14 23}
                )
            )
            
            (regions "CentralTrack" 
                (sites { 4 5 14 15 19 21 22 23 24 25 26}
                )
            )
            }
        )
        
        (rules 
            (play 
                (move Add 
                    (to 
                        (sites Empty)
                    )
                )
            )
            
            (end 
                (if 
                    (is Line 3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 24) ruleset.")
    
    (item "Cumisitha (Ludii 25)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (rectangle 1 10)
                { 
                (track "Track1" { 0 1 2 3 4 5 6 7 8}
                loop:True P1)
                
                (track "Track2" { 8 7 6 5 4 3 2 1 0}
                loop:True P2)
                
                (track "CaptureTrack1" { 8 7 6 5 4 3 2 1 0}
                P1 directed:True )
                
                (track "CaptureTrack2" { 0 1 2 3 4 5 6 7 8}
                P2 directed:True )
                }
            use:Edge )
            
            (piece "Marker" Each 
                (or 
                    (if 
                        (= 0 
                            (state at:
                                (from)
                                level:
                                (level)
                            )
                        )
                        
                        (move 
                            (from 
                                (from)
                                level:
                                (level)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    "Track" steps:
                                    (mapEntry "Throw" 
                                        (count Pips)
                                    )
                                )
                            )
                            
                            (then 
                                (if 
                                    (is In 
                                        (last To)
                                        
                                        (sites Occupied by:Enemy top:False)
                                    )
                                    
                                    (forEach Level 
                                        (last To)
                                        FromTop 
                                        (and 
                                            (if 
                                                (is Enemy 
                                                    (who at:
                                                        (last To)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (set State at:
                                                    (last To)
                                                    level:
                                                    (level)
                                                2 )
                                            )
                                            
                                            (if 
                                                (is Friend 
                                                    (who at:
                                                        (last To)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (set State at:
                                                    (last To)
                                                    level:
                                                    (level)
                                                1 )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (if 
                        (= 1 
                            (state at:
                                (from)
                                level:
                                (level)
                            )
                        )
                        
                        (if 
                            (!= 
                                (trackSite Move from:
                                    (from)
                                    "CaptureTrack" steps:
                                    (mapEntry "Throw" 
                                        (count Pips)
                                    )
                                )
                            Off )
                            
                            (move 
                                (from 
                                    (from)
                                    level:
                                    (level)
                                )
                                
                                (to 
                                    (trackSite Move from:
                                        (from)
                                        "CaptureTrack" steps:
                                        (mapEntry "Throw" 
                                            (count Pips)
                                        )
                                    )
                                )
                                
                                (then 
                                    (and 
                                        (forEach Level 
                                            (last From)
                                            FromTop 
                                            (if 
                                                (= 2 
                                                    (state at:
                                                        (last From)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (fromTo 
                                                    (from 
                                                        (last From)
                                                        level:
                                                        (level)
                                                    )
                                                    
                                                    (to 
                                                        (last To)
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (forEach Level 
                                            (last From)
                                            FromTop 
                                            (if 
                                                (is Friend 
                                                    (who at:
                                                        (last From)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (set State at:
                                                    (last From)
                                                    level:
                                                    (level)
                                                0 )
                                            )
                                        )
                                    )
                                )
                            )
                            
                            (move Remove 
                                (from)
                                level:
                                (level)
                                
                                (then 
                                    (and { 
                                        (forEach Level 
                                            (last From)
                                            FromTop 
                                            (if 
                                                (is Friend 
                                                    (who at:
                                                        (last From)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (set State at:
                                                    (last From)
                                                    level:
                                                    (level)
                                                0 )
                                            )
                                        )
                                        
                                        (forEach Level 
                                            (last From)
                                            FromTop 
                                            (if 
                                                (= 2 
                                                    (state at:
                                                        (last From)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (remove 
                                                    (last From)
                                                    level:
                                                    (level)
                                                )
                                            )
                                        )
                                        
                                        (add 
                                            (piece 
                                                (id "Marker" Mover)
                                            )
                                            
                                            (to 
                                                (handSite Mover)
                                            )
                                        )
                                        }
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (regions "AllSites" 
                (sites Board Vertex)
            )
            
            (map "Throw" { 
                (pair 0 5)
                
                (pair 1 3)
                
                (pair 2 2)
                
                (pair 3 3)
                
                (pair 4 4)
                }
            )
            
            (map "Entry" { 
                (pair 1 0)
                
                (pair 2 8)
                }
            )
            
            (dice d:2 from:0 num:4)
            
            (hand Each)
            }
        )
        
        (rules 
            (start { 
                (place Stack "Marker1" 
                    (handSite P1)
                count:4)
                
                (place Stack "Marker2" 
                    (handSite P2)
                count:4)
                }
            )
            
            (play 
                (do 
                    (roll)
                    next:
                    (or 
                        (forEach Piece)
                        
                        (forEach Piece container:
                            (mover)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Mover)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 25) ruleset.")
    
    (item "Cumisitha (Ludii 26)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (concentric Square rings:3)
            use:Vertex)
            
            (hand Each)
            
            (piece "Marker" Each 
                (move Step 
                    (to if:
                        (is Empty 
                            (to)
                        )
                    )
                    
                    (then 
                        (if 
                            (is Line 3 Orthogonal exact:True)
                            
                            (moveAgain)
                        )
                    )
                )
            )
            }
        )
        
        (rules 
            (play 
                (move Add 
                    (to 
                        (sites Empty)
                    )
                )
            )
            
            (end 
                (if 
                    (is Line 3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 26) ruleset.")
    
    (item "Cumisitha (Ludii 27)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 3)
            )
            
            (piece "Disc" P1)
            
            (piece "Cross" P2)
            }
        )
        
        (rules 
            (play 
                (move Add 
                    (to 
                        (sites Empty)
                    )
                )
            )
            
            (end 
                (if 
                    (is Line 3)
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Cumisitha (Ludii 27) ruleset.")
    
    (item "Cumisitha (Ludii 28)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (rectangle 1 10)
                { 
                (track "Track1" { 0 1 2 3 4 5 6 7 8}
                loop:True P1)
                
                (track "Track2" { 8 7 6 5 4 3 2 1 0}
                loop:True P2)
                
                (track "CaptureTrack1" { 8 7 6 5 4 3 2 1 0}
                P1 directed:True )
                
                (track "CaptureTrack2" { 0 1 2 3 4 5 6 7 8}
                P2 directed:True )
                }
            use:Edge )
            
            (piece "Marker" Each 
                (or 
                    (if 
                        (= 0 
                            (state at:
                                (from)
                                level:
                                (level)
                            )
                        )
                        
                        (move 
                            (from 
                                (from)
                                level:
                                (level)
                            )
                            
                            (to 
                                (trackSite Move from:
                                    (from)
                                    "Track" steps:
                                    (mapEntry "Throw" 
                                        (count Pips)
                                    )
                                )
                            )
                            
                            (then 
                                (if 
                                    (is In 
                                        (last To)
                                        
                                        (sites Occupied by:Enemy top:False)
                                    )
                                    
                                    (forEach Level 
                                        (last To)
                                        FromTop 
                                        (and 
                                            (if 
                                                (is Enemy 
                                                    (who at:
                                                        (last To)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (set State at:
                                                    (last To)
                                                    level:
                                                    (level)
                                                2 )
                                            )
                                            
                                            (if 
                                                (is Friend 
                                                    (who at:
                                                        (last To)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (set State at:
                                                    (last To)
                                                    level:
                                                    (level)
                                                1 )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (if 
                        (= 1 
                            (state at:
                                (from)
                                level:
                                (level)
                            )
                        )
                        
                        (if 
                            (!= 
                                (trackSite Move from:
                                    (from)
                                    "CaptureTrack" steps:
                                    (mapEntry "Throw" 
                                        (count Pips)
                                    )
                                )
                            Off )
                            
                            (move 
                                (from 
                                    (from)
                                    level:
                                    (level)
                                )
                                
                                (to 
                                    (trackSite Move from:
                                        (from)
                                        "CaptureTrack" steps:
                                        (mapEntry "Throw" 
                                            (count Pips)
                                        )
                                    )
                                )
                                
                                (then 
                                    (and 
                                        (forEach Level 
                                            (last From)
                                            FromTop 
                                            (if 
                                                (= 2 
                                                    (state at:
                                                        (last From)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (fromTo 
                                                    (from 
                                                        (last From)
                                                        level:
                                                        (level)
                                                    )
                                                    
                                                    (to 
                                                        (last To)
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (forEach Level 
                                            (last From)
                                            FromTop 
                                            (if 
                                                (is Friend 
                                                    (who at:
                                                        (last From)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (set State at:
                                                    (last From)
                                                    level:
                                                    (level)
                                                0 )
                                            )
                                        )
                                    )
                                )
                            )
                            
                            (move Remove 
                                (from)
                                level:
                                (level)
                                
                                (then 
                                    (and { 
                                        (forEach Level 
                                            (last From)
                                            FromTop 
                                            (if 
                                                (is Friend 
                                                    (who at:
                                                        (last From)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (set State at:
                                                    (last From)
                                                    level:
                                                    (level)
                                                0 )
                                            )
                                        )
                                        
                                        (forEach Level 
                                            (last From)
                                            FromTop 
                                            (if 
                                                (= 2 
                                                    (state at:
                                                        (last From)
                                                        level:
                                                        (level)
                                                    )
                                                )
                                                
                                                (remove 
                                                    (last From)
                                                    level:
                                                    (level)
                                                )
                                            )
                                        )
                                        
                                        (add 
                                            (piece 
                                                (id "Marker" Mover)
                                            )
                                            
                                            (to 
                                                (handSite Mover)
                                            )
                                        )
                                        }
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (regions "AllSites" 
                (sites Board Vertex)
            )
            
            (map "Throw" { 
                (pair 0 5)
                
                (pair 1 3)
                
                (pair 2 2)
                
                (pair 3 3)
                
                (pair 4 4)
                }
            )
            
            (map "Entry" { 
                (pair 1 0)
                
                (pair 2 8)
                }
            )
            
            (dice d:2 from:0 num:4)
            
            (hand Each)
            }
        )
        
        (rules 
            (start { 
                (place Stack "Marker1" 
                    (handSite P1)
                count:5)
                
                (place Stack "Marker2" 
                    (handSite P2)
                count:5)
                }
            )
            
            (play 
                (do 
                    (roll)
                    next:
                    (or { 
                        (if 
                            (is Occupied 
                                (handSite Mover)
                            )
                            
                            (move 
                                (from 
                                    (handSite Mover)
                                )
                                
                                (to 
                                    (trackSite Move from:
                                        (mapEntry "Entry" 
                                            (mover)
                                        )
                                        "Track" steps:
                                        (- 
                                            (mapEntry "Throw" 
                                                (count Pips)
                                            )
                                        1 )
                                    )
                                )
                            )
                        )
                        
                        (forEach Piece)
                        }
                    )
                    
                    (then 
                        (if 
                            (not 
                                (is Prev Mover)
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (no Pieces P2)
                    
                    (result P2 Loss)
                )
                
                (if 
                    (no Pieces P1)
                    
                    (result P1 Loss)
                )
                }
            )
        )
        
    > "The Cumisitha (Ludii 28) ruleset.")
    
    (item "Cumisitha (Ludii 29)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 5)
            use:Vertex)
            
            (piece "Stick" Each 
                (or 
                    (move Step Orthogonal 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Hop Orthogonal 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (hand Each)
            
            (regions "AllSites" 
                (sites Board)
            )
            }
        )
        
        (rules 
            (start 
                (place "Stick" "Hand" count:12)
            )
            
            (play 
                (if 
                    (is Pending)
                    
                    (move 
                        (from 
                            (handSite Mover)
                        )
                        
                        (to 
                            (sites Empty)
                        )
                    )
                    
                    (or 
                        (if 
                            (not 
                                (all Sites 
                                    (sites Hand Mover)
                                    if:
                                    (= 0 
                                        (count Cell at:
                                            (site)
                                        )
                                    )
                                )
                            )
                            
                            (move 
                                (from 
                                    (handSite Mover)
                                )
                                
                                (to 
                                    (sites Empty)
                                )
                                
                                (then 
                                    (set Pending)
                                )
                            )
                        )
                        
                        (forEach Piece)
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Next)
                    
                    (result Next Loss)
                )
            )
        )
        
    > "The Cumisitha (Ludii 29) ruleset.")
    
    (item "Cumisitha (Ludii 30)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 5)
            )
            
            (piece "Marker" Each 
                (or 
                    (move Step Orthogonal 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Hop 
                        (between if:
                            (is Enemy 
                                (who at:
                                    (between)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (between)
                                )
                            )
                        )
                        
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                        
                        (then 
                            (moveAgain)
                        )
                    )
                )
            )
            
            (hand Each)
            }
        )
        
        (rules 
            (start 
                (place "Marker" "Hand" count:12)
            )
            
            (play 
                (if 
                    (is Prev Mover)
                    
                    (move Remove 
                        (sites Occupied by:Next container:"Board")
                    )
                    
                    (or 
                        (if 
                            (not 
                                (all Sites 
                                    (sites Hand Mover)
                                    if:
                                    (= 0 
                                        (count Cell at:
                                            (site)
                                        )
                                    )
                                )
                            )
                            
                            (move 
                                (from 
                                    (handSite Mover)
                                )
                                
                                (to 
                                    (sites Empty)
                                )
                            )
                        )
                        
                        (forEach Piece)
                    )
                )
            )
            
            (end 
                (if 
                    (no Pieces Next)
                    
                    (result Next Loss)
                )
            )
        )
        
    > "The Cumisitha (Ludii 30) ruleset.")
    
    (item "Incomplete"
        <
        ("TwoPlayersNorthSouth") 
        (equipment [#])
        (rules [#])
        >
        "The incomplete ruleset."
    )
    
})

//------------------------------------------------------------------------------

(rulesets {
    
    (ruleset "Ruleset/Cumisitha (Ludii 1) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 1)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 2) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 2)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 3) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 3)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 4) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 4)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 5) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 5)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 6) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 6)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 7) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 7)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 8) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 8)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 9) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 9)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 10) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 10)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 11) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 11)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 12) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 12)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 13) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 13)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 14) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 14)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 15) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 15)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 16) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 16)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 17) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 17)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 18) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 18)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 19) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 19)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 20) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 20)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 21) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 21)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 22) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 22)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 23) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 23)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 24) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 24)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 25) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 25)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 26) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 26)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 27) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 27)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 28) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 28)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 29) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 29)"
    })
    (ruleset "Ruleset/Cumisitha (Ludii 30) (Reconstructed)" {
        "Variant/Cumisitha (Ludii 30)"
    }) 
    
    (ruleset "Ruleset/Historical Information (Incomplete)" {
        "Variant/Incomplete"
    })
    
})

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "Cumisitha is a game that was played by the Aymara people of southern Peru and Bolivia in the seventeenth century. It was described by chroniclers as similar to the Game of the Goose, but different in many ways, as well as similar to Chess and Alquerque.")
        (aliases {"Cumisiña"})
        (useFor "Ruleset/Historical Information (Incomplete)" (rules "Board game."))
        (useFor "Ruleset/Historical Information (Incomplete)" (source "DLP evidence."))
        (useFor "Ruleset/Historical Information (Incomplete)" (id "1553"))
        (useFor "Ruleset/Cumisitha (Ludii 1) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars hop adjacent or step adjacent.
                Players take turns moving.
                Setup:
                Place a Dog for player two at the union of the bottom sites of the board expanded by 1 steps and the vertexes with coordinates [A3, E3].
                Place a Jaguar for player one on site C7..
                Rules: 
                Move one of your pieces.
                Aim: 
                If the next player cannot move, the next player loses If the number of pieces owned by Player 2 is less than or equal to 6, player two loses.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 1) (Reconstructed)" (id "3895"))
        (useFor "Ruleset/Cumisitha (Ludii 2) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars hop adjacent or step adjacent.
                Players take turns moving.
                Setup:
                Place a Dog for player two at the union of the bottom sites of the board expanded by 1 steps and the vertexes with coordinates [A3, E3].
                Place a Jaguar for player one on site C7..
                Rules: 
                Move one of your pieces.
                Aim: 
                If the next player cannot move, the next player loses If the number of pieces owned by Player 2 is less than or equal to 6, player two loses.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 2) (Reconstructed)" (id "3896"))
        (useFor "Ruleset/Cumisitha (Ludii 3) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars hop adjacent or step adjacent.
                Players take turns moving.
                Setup:
                Place a Dog for player two at the difference between the top sites of the board expanded by 2 steps and the vertexes with coordinates [C5].
                Place a Jaguar for player one on site C5..
                Rules: 
                Move one of your pieces.
                Aim: 
                If the next player cannot move, the next player loses If the number of pieces owned by Player 2 is less than or equal to 0, player two loses.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 3) (Reconstructed)" (id "3897"))
        (useFor "Ruleset/Cumisitha (Ludii 4) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars hop adjacent or step adjacent.
                Players take turns moving.
                Setup:
                Place a Dog for player two at the difference between the top sites of the board expanded by 2 steps and the vertexes with coordinates [C5].
                Place a Jaguar for player one on site C5..
                Rules: 
                Move one of your pieces.
                Aim: 
                If the next player cannot move, the next player loses If the number of pieces owned by Player 2 is less than or equal to 0, player two loses.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 4) (Reconstructed)" (id "3898"))
        (useFor "Ruleset/Cumisitha (Ludii 5) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars hop adjacent or step adjacent.
                Players take turns moving.
                Setup:
                Place a Jaguar for player one on site C6.
                Place a Dog for player two at the bottom sites of the board expanded by 2 steps..
                Rules: 
                Move one of your pieces.
                Aim: 
                If player one cannot move, player one loses If the number of pieces owned by Player 2 is less than or equal to 6, player one wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 5) (Reconstructed)" (id "3899"))
        (useFor "Ruleset/Cumisitha (Ludii 6) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars step adjacent or hop adjacent.
                Players take turns moving.
                Setup:
                Place a Dog for player two at the union of the bottom sites of the board expanded by 1 steps and the vertexes with coordinates [A3, E3].
                Place a Jaguar for player one on site C7..
                Rules: 
                Move one of your pieces.
                Aim: 
                If the next player cannot move, the next player loses If the number of pieces owned by Player 2 is less than or equal to 6, player two loses.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 6) (Reconstructed)" (id "3900"))
        (useFor "Ruleset/Cumisitha (Ludii 7) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars step adjacent or hop adjacent.
                Players take turns moving.
                Setup:
                Place a Dog for player two at the difference between the top sites of the board expanded by 2 steps and the vertexes with coordinates [C5].
                Place a Jaguar for player one on site C5..
                Rules: 
                Move one of your pieces.
                Aim: 
                If the next player cannot move, the next player loses If the number of pieces owned by Player 2 is less than or equal to 0, player two loses.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 7) (Reconstructed)" (id "3901"))
        (useFor "Ruleset/Cumisitha (Ludii 8) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars hop adjacent or step adjacent.
                Players take turns moving.
                Setup:
                Place a Jaguar for player one on site C6.
                Place a Dog for player two at the bottom sites of the board expanded by 2 steps..
                Rules: 
                Move one of your pieces.
                Aim: 
                If player one cannot move, player one loses If the number of pieces owned by Player 2 is less than or equal to 6, player one wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 8) (Reconstructed)" (id "3902"))
        (useFor "Ruleset/Cumisitha (Ludii 9) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars step adjacent or hop adjacent.
                Players take turns moving.
                Setup:
                Place a Jaguar for player one on site C6.
                Place a Dog for player two at the bottom sites of the board expanded by 2 steps..
                Rules: 
                Move one of your pieces.
                Aim: 
                If player one cannot move, player one loses If the number of pieces owned by Player 2 is less than or equal to 6, player one wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 9) (Reconstructed)" (id "3903"))
        (useFor "Ruleset/Cumisitha (Ludii 10) (Reconstructed)" (rules "The game Cumisitha is played by two players on a 10x2 rectangle board with square tiling. 
                All players play with Discs. The following pieces are shared by all players: Dies with 7 faces valued [0, 1, 2, 3, 4, 5, 6].
                Players take turns moving.
                Rules: 
                Add one of your pieces to the set of empty cells.
                Aim: 
                If a player places 3 of their pieces in an adjacent direction line, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 10) (Reconstructed)" (id "3904"))
        (useFor "Ruleset/Cumisitha (Ludii 11) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with MountainLions. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step forward.
                MountainLions if in the same turn, pass or hop adjacent then if can move hop adjacent, move again, else hop adjacent then if can move hop adjacent, move again or step adjacent.
                Players take turns moving.
                Setup:
                Place a Dog for player two at the union of the bottom sites of the board expanded by 1 steps and the vertexes with coordinates [A3, I3]..
                Rules: 
                Move one of your pieces.
                Aim: 
                If there are no pieces owned by Player 2, player one wins If player one cannot move, player two wins If player two cannot move, it's a draw.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 11) (Reconstructed)" (id "3905"))
        (useFor "Ruleset/Cumisitha (Ludii 12) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with MountainLions. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                MountainLions if in the same turn, pass or hop adjacent then if can move hop adjacent, move again, else hop adjacent then if can move hop adjacent, move again or step adjacent.
                Players take turns moving.
                Setup:
                Place a Dog for player two at the union of the bottom sites of the board expanded by 1 steps and the vertexes with coordinates [A3, I3]..
                Rules: 
                Move one of your pieces.
                Aim: 
                If there are no pieces owned by Player 2, player one wins If player one cannot move, player two wins If player two cannot move, it's a draw.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 12) (Reconstructed)" (id "3906"))
        (useFor "Ruleset/Cumisitha (Ludii 13) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars hop adjacent or step adjacent.
                Players take turns moving.
                Rules: 
                Add one of your pieces to the set of empty vertexs.
                Aim: 
                If a player places 3 of their pieces in an adjacent direction line, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 13) (Reconstructed)" (id "3907"))
        (useFor "Ruleset/Cumisitha (Ludii 14) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars hop adjacent or step adjacent.
                Players take turns moving.
                Rules: 
                Add one of your pieces to the set of empty vertexs.
                Aim: 
                If a player places 3 of their pieces in an adjacent direction line, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 14) (Reconstructed)" (id "3908"))
        (useFor "Ruleset/Cumisitha (Ludii 15) (Reconstructed)" (rules "The game Cumisitha is played by two players on a 8x8 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then set the current counter of the game to -1 then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns step forward or remove pieces at to then step forward-right or forward-left or if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again and set the current counter of the game to -1.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 6 row.
                Place a Rook for player one on sites: A1 and H1.
                Place a Knight for player one on sites: B1 and G1.
                Place a Bishop for player one on sites: C1 and F1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A8 and H8.
                Place a Knight for player two on sites: B8 and G8.
                Place a Bishop for player two on sites: C8 and F8.
                Place a Queen for player two on site D8.
                Place a King for player two on site E8..
                Rules: 
                If in the same turn, a piece of the moving player the to location of the last move, this piece can promote into Queen, Knight, Bishop or Rook, else move one of your pieces or if State at King of current moving player is equal to 1 and not King of the moving player is threatened, if State at RookLeft of current moving player is equal to 1 and can move slide from RookLeft of current moving player in the east direction through empty, slide from King of current moving player in the west direction through empty and not King of the moving player is threatened then slide from RookLeft of current moving player in the east direction through true or if State at RookRight of current moving player is equal to 1 and can move slide from RookRight of current moving player in the west direction through empty, slide from King of current moving player in the east direction through empty and not King of the moving player is threatened then slide from RookRight of current moving player in the west direction through true.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If the moving player cannot move or Counter is equal to 99, it's a draw.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 15) (Reconstructed)" (id "3909"))
        (useFor "Ruleset/Cumisitha (Ludii 16) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with Jaguars. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                Jaguars step adjacent or hop adjacent.
                Players take turns moving.
                Rules: 
                Add one of your pieces to the set of empty vertexs.
                Aim: 
                If a player places 3 of their pieces in an adjacent direction line, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 16) (Reconstructed)" (id "3910"))
        (useFor "Ruleset/Cumisitha (Ludii 17) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with MountainLions. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step adjacent.
                MountainLions if in the same turn, pass or hop adjacent then if can move hop adjacent, move again, else hop adjacent then if can move hop adjacent, move again or step adjacent.
                Players take turns moving.
                Rules: 
                Add one of your pieces to the set of empty vertexs.
                Aim: 
                If a player places 3 of their pieces in an adjacent direction line, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 17) (Reconstructed)" (id "3911"))
        (useFor "Ruleset/Cumisitha (Ludii 18) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling. 
                Player one plays with MountainLions. Player two plays with Dogs.
                Rules for Pieces:
                Dogs step forward.
                MountainLions if in the same turn, pass or hop adjacent then if can move hop adjacent, move again, else hop adjacent then if can move hop adjacent, move again or step adjacent.
                Players take turns moving.
                Rules: 
                Add one of your pieces to the set of empty vertexs.
                Aim: 
                If a player places 3 of their pieces in an adjacent direction line, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 18) (Reconstructed)" (id "3912"))
        (useFor "Ruleset/Cumisitha (Ludii 19) (Reconstructed)" (rules "The game Cumisitha is played by two players on a 1x25 rectangle board with square tiling.
                Regions:
                Side: sites [0,1,2,3,4,5,6,7,8,9,10,11] for P1
                Side: sites [13,14,15,16,17,18,19,20,21,22,23] for P2 
                All players play with Sticks. The following pieces are neutral: Sticks. The following pieces are shared by all players: Dies with 2 faces valued [0, 1], Dies with 2 faces valued [0, 1], Dies with 2 faces valued [0, 1] and Dies with 2 faces valued [0, 1].
                Rules for Pieces:
                Sticks from edge in the location of the piece current level to edge Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track null moveRule: true captureEffect: if there is an enemy Player at to, if if Player at to is equal to 1 then if Stick of no player is equal to Piece at 1 then 1 otherwise if Stick of no player is equal to Piece at 2 then 2 otherwise if Stick of no player is equal to Piece at 3 then 3 otherwise if Stick of no player is equal to Piece at 4 then 4 otherwise if Stick of no player is equal to Piece at 5 then 5 otherwise if Stick of no player is equal to Piece at 6 then 6 otherwise if Stick of no player is equal to Piece at 7 then 7 otherwise if Stick of no player is equal to Piece at 8 then 8 otherwise if Stick of no player is equal to Piece at 9 then 9 otherwise if Stick of no player is equal to Piece at 10 then 10 otherwise if Stick of no player is equal to Piece at 11 then 11 otherwise -1 otherwise if Stick of no player is equal to Piece at 22 then 22 otherwise if Stick of no player is equal to Piece at 21 then 21 otherwise if Stick of no player is equal to Piece at 20 then 20 otherwise if Stick of no player is equal to Piece at 19 then 19 otherwise if Stick of no player is equal to Piece at 18 then 18 otherwise if Stick of no player is equal to Piece at 17 then 17 otherwise if Stick of no player is equal to Piece at 16 then 16 otherwise if Stick of no player is equal to Piece at 15 then 15 otherwise if Stick of no player is equal to Piece at 14 then 14 otherwise if Stick of no player is equal to Piece at 13 then 13 otherwise if Stick of no player is equal to Piece at 12 then 12 otherwise -1 is equal to -1, remove pieces at to, else from edge in to to edge if Player at to is equal to 1 then if Stick of no player is equal to Piece at 1 then 1 otherwise if Stick of no player is equal to Piece at 2 then 2 otherwise if Stick of no player is equal to Piece at 3 then 3 otherwise if Stick of no player is equal to Piece at 4 then 4 otherwise if Stick of no player is equal to Piece at 5 then 5 otherwise if Stick of no player is equal to Piece at 6 then 6 otherwise if Stick of no player is equal to Piece at 7 then 7 otherwise if Stick of no player is equal to Piece at 8 then 8 otherwise if Stick of no player is equal to Piece at 9 then 9 otherwise if Stick of no player is equal to Piece at 10 then 10 otherwise if Stick of no player is equal to Piece at 11 then 11 otherwise -1 otherwise if Stick of no player is equal to Piece at 22 then 22 otherwise if Stick of no player is equal to Piece at 21 then 21 otherwise if Stick of no player is equal to Piece at 20 then 20 otherwise if Stick of no player is equal to Piece at 19 then 19 otherwise if Stick of no player is equal to Piece at 18 then 18 otherwise if Stick of no player is equal to Piece at 17 then 17 otherwise if Stick of no player is equal to Piece at 16 then 16 otherwise if Stick of no player is equal to Piece at 15 then 15 otherwise if Stick of no player is equal to Piece at 14 then 14 otherwise if Stick of no player is equal to Piece at 13 then 13 otherwise if Stick of no player is equal to Piece at 12 then 12 otherwise -1 moveRule: true and if edge to is occupied, Piece at to is equal to Stick of no player and to is in , remove pieces at to.
                Players take turns moving.
                Rules: 
                Add one of your pieces to the set of empty edges.
                Aim: 
                If a player places 3 of their pieces in an adjacent direction line, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 19) (Reconstructed)" (id "3913"))
        (useFor "Ruleset/Cumisitha (Ludii 20) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling.
                Regions:
                AllSites: the sites of the board for Neutral
                LastSide: sites [6,7,8,9,23,24,25,26,27] for P1
                LastSide: sites [27,33,34,35,36,37,38,39,40] for P2 
                All players play with Markers. The following pieces are shared by all players: Dies with 2 faces valued [0, 4], Dies with 2 faces valued [0, 6], Dies with 2 faces valued [0, 14] and Dies with 2 faces valued [0, 15].
                Rules for Pieces:
                Markers if if not the location of the piece is in LastSide or LastSide then true else Throw of the number of pips owned by Player Shared is equal to 1, Throw of the number of pips owned by Player Shared is equal to 2 or Throw of the number of pips owned by Player Shared is equal to 3, if 14 is equal to Throw of the number of pips owned by Player Shared, if 1 steps forward from site the location of the piece on track null is equal to -2, remove pieces at the location of the piece, else from vertex in the location of the piece current level to vertex 1 steps forward from site the location of the piece on track null moveRule: true captureEffect: if there is an enemy Player at to, for each level at Vertex to (FromTop) from vertex in to current level to vertex Player Player at to's hand site 0 moveRule: true or if Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track null is equal to -2, remove pieces at the location of the piece, else from vertex in the location of the piece current level to vertex Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track null moveRule: true captureEffect: if there is an enemy Player at to, for each level at Vertex to (FromTop) from vertex in to current level to vertex Player Player at to's hand site 0 moveRule: true.
                Players take turns moving.
                Setup:
                Place stack of [Marker1] at vertex Player 1's hand site 0
                Place stack of [Marker2] at vertex Player 2's hand site 0.
                Rules: 
                Roll the dice and afterwards move one of your pieces or move one of your pieces.
                Aim: 
                If there are no pieces owned by Player the moving player, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 20) (Reconstructed)" (id "3914"))
        (useFor "Ruleset/Cumisitha (Ludii 21) (Reconstructed)" (rules "The game Cumisitha is played by two players on a 8x8 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then set the current counter of the game to -1 then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns step forward or remove pieces at to then step forward-right or forward-left or if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in , move again and set the current counter of the game to -1.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Rules: 
                Add one of your pieces to the set of empty cells.
                Aim: 
                If a player places 3 of their pieces in an adjacent direction line, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 21) (Reconstructed)" (id "3915"))
        (useFor "Ruleset/Cumisitha (Ludii 22) (Reconstructed)" (rules "The game Cumisitha is played by two players on a 8x8 rectangle board with square tiling.
                Regions:
                RegionP1: the bottom sites of the board for P1
                RegionP2: the top sites of the board for P2 
                All players play with Counters and DoubleCounters.
                Players take turns moving.
                Setup:
                Place a Counter for player one at the difference between the bottom sites of the board expanded by 3 minus 1 steps and all sites within [1,3,5,7,8,10,12,14,17,19,21,23,24,26,28,30,33,35,37,39,40,42,44,46,49,51,53,55,56,58,60,62].
                Place a Counter for player two at the difference between the top sites of the board expanded by 3 minus 1 steps and all sites within [1,3,5,7,8,10,12,14,17,19,21,23,24,26,28,30,33,35,37,39,40,42,44,46,49,51,53,55,56,58,60,62]..
                Rules: 
                If in the same turn, if Piece at the to location of the last move is equal to Counter of the moving player, hop diagonal then if can move hop diagonal, move again, else if the to location of the last move is in RegionP1 or RegionP2, a piece of the moving player the to location of the last move, this piece can promote into DoubleCounter, else if false then perform any of the following moves which has the most sub-moves hop diagonal then if can move hop diagonal, move again, else moves with priority: move one of your pieces or if false then perform any of the following moves which has the most sub-moves move one of your pieces, move one of your pieces or move one of your pieces.
                Aim: 
                If the next player cannot move, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 22) (Reconstructed)" (id "3916"))
        (useFor "Ruleset/Cumisitha (Ludii 23) (Reconstructed)" (rules "The game Cumisitha is played by two players on a 5x5 rectangle board with square tiling.
                Regions:
                RegionP1: the intersection of the corner sites of the board and the bottom sites of the board for P1
                RegionP2: the intersection of the corner sites of the board and the top sites of the board for P2 
                All players play with Discs and DiscDoubles.
                Rules for Pieces:
                Discs hop rightward, leftward or forwards then if the to location of the last move is in RegionP1 or RegionP2, a piece of the moving player the to location of the last move, this piece can promote into DiscDouble and set the value of Player the moving player to 0 or step rightward, leftward or forwards then set the value of Player the moving player to 1 if the to location of the last move is in RegionP1 or RegionP2, a piece of the moving player the to location of the last move, this piece can promote into DiscDouble.
                DiscDoubles hop all then set the value of Player the moving player to 0 or slide from the location of the piece in the all direction through [between] is in the set of empty vertexs then set the value of Player the moving player to 1.
                Players take turns moving.
                Setup:
                Place a Disc for player one at the union of the bottom sites of the board expanded by 1 steps and the vertexes with coordinates [D3, E3].
                Place a Disc for player two at the union of the vertexes with coordinates [A3, B3] and the top sites of the board expanded by 1 steps..
                Rules: 
                If the value of Player Prev is equal to 1, if the from location of the last move is in the pending sites and the from location of the last move is in the set of empty vertexs, select Vertex in the to location of the last move if vertex the location of the piece is occupied then remove pieces at the to location of the last move and move again and set the value of Player Prev to 0 or select Vertex in the pending sites if vertex the location of the piece is occupied then remove pieces at the to location of the last move and move again and set the value of Player Prev to 0 or set the region the from sites of move one of your pieces or move one of your pieces to pending and afterwards move one of your pieces.
                Aim: 
                If there are no pieces owned by Player the moving player, the moving player loses.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 23) (Reconstructed)" (id "3917"))
        (useFor "Ruleset/Cumisitha (Ludii 24) (Reconstructed)" (rules "The game Cumisitha is played by two players on a noshape board with nobasis tiling.
                Regions:
                SafeSites: sites [4,14,23] for Neutral
                CentralTrack: sites [4,5,14,15,19,21,22,23,24,25,26] for Neutral 
                All players play with Markers. The following pieces are shared by all players: Dies with 2 faces valued [0, 1], Dies with 2 faces valued [0, 1], Dies with 2 faces valued [0, 1], Dies with 2 faces valued [0, 1] and Dies with 2 faces valued [0, 1].
                Rules for Pieces:
                Markers from cell in the location of the piece to cell if State at the location of the piece is equal to 0 then Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track Track otherwise if State at the location of the piece is equal to 1 then Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track TrackLeft otherwise Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track TrackRight moveRule: not to is in  and there is an enemy Player at to or empty captureEffect: if there is an enemy Player at to, remove pieces at to then if State at the to location of the last move is equal to 0 and the to location of the last move is in , if 1 is the mover or 2 is the mover, set the state of the Cell the to location of the last move to 2, else set the state of the Cell the to location of the last move to 1.
                Players take turns moving.
                Rules: 
                Add one of your pieces to the set of empty cells.
                Aim: 
                If a player places 3 of their pieces in an adjacent direction line, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 24) (Reconstructed)" (id "3918"))
        (useFor "Ruleset/Cumisitha (Ludii 25) (Reconstructed)" (rules "The game Cumisitha is played by two players on a 1x10 rectangle board with square tiling.
                Regions:
                AllSites: the sites of the board for Neutral 
                All players play with Markers. The following pieces are shared by all players: Dies with 2 faces valued [0, 1], Dies with 2 faces valued [0, 1], Dies with 2 faces valued [0, 1] and Dies with 2 faces valued [0, 1].
                Rules for Pieces:
                Markers if 0 is equal to State at the location of the piece, from edge in the location of the piece current level to edge Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track Track moveRule: true then if the to location of the last move is in sites occupied by any component owned by Enemy, for each level at Edge the to location of the last move (FromTop) if there is an enemy Player at the to location of the last move, set the state of the Edge the to location of the last move (level current level) to 2 and if is a friend, set the state of the Edge the to location of the last move (level current level) to 1 or if 1 is equal to State at the location of the piece, if Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track CaptureTrack is not equal to -1, from edge in the location of the piece current level to edge Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track CaptureTrack moveRule: true then for each level at Edge the from location of the last move (FromTop) if 2 is equal to State at the from location of the last move, from edge in the from location of the last move current level to edge the to location of the last move moveRule: true and for each level at Edge the from location of the last move (FromTop) if is a friend, set the state of the Edge the from location of the last move (level current level) to 0, else remove pieces at the location of the piece then for each level at Edge the from location of the last move (FromTop) if is a friend, set the state of the Edge the from location of the last move (level current level) to 0 and for each level at Edge the from location of the last move (FromTop) if 2 is equal to State at the from location of the last move, remove pieces at the from location of the last move and add Marker of the moving player.
                Players take turns moving.
                Setup:
                Place stack of [Marker1] at edge Player 1's hand site 0
                Place stack of [Marker2] at edge Player 2's hand site 0.
                Rules: 
                Roll the dice and afterwards move one of your pieces or move one of your pieces.
                Aim: 
                If there are no pieces owned by Player the moving player, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 25) (Reconstructed)" (id "3919"))
        (useFor "Ruleset/Cumisitha (Ludii 26) (Reconstructed)" (rules "The game Cumisitha is played by two players on a square board with concentric tiling. 
                All players play with Markers.
                Rules for Pieces:
                Markers step adjacent then if a player places 3 of their pieces in an orthogonal direction line, move again.
                Players take turns moving.
                Rules: 
                Add one of your pieces to the set of empty vertexs.
                Aim: 
                If a player places 3 of their pieces in an adjacent direction line, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 26) (Reconstructed)" (id "3920"))
        (useFor "Ruleset/Cumisitha (Ludii 27) (Reconstructed)" (rules "The game Cumisitha is played by two players on a 3x3 rectangle board with square tiling. 
                Player one plays with Discs. Player two plays with Crosses.
                Players take turns moving.
                Rules: 
                Add one of your pieces to the set of empty cells.
                Aim: 
                If a player places 3 of their pieces in an adjacent direction line, the moving player wins.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 27) (Reconstructed)" (id "3921"))
        (useFor "Ruleset/Cumisitha (Ludii 28) (Reconstructed)" (rules "The game Cumisitha is played by two players on a 1x10 rectangle board with square tiling.
                Regions:
                AllSites: the sites of the board for Neutral 
                All players play with Markers. The following pieces are shared by all players: Dies with 2 faces valued [0, 1], Dies with 2 faces valued [0, 1], Dies with 2 faces valued [0, 1] and Dies with 2 faces valued [0, 1].
                Rules for Pieces:
                Markers if 0 is equal to State at the location of the piece, from edge in the location of the piece current level to edge Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track Track moveRule: true then if the to location of the last move is in sites occupied by any component owned by Enemy, for each level at Edge the to location of the last move (FromTop) if there is an enemy Player at the to location of the last move, set the state of the Edge the to location of the last move (level current level) to 2 and if is a friend, set the state of the Edge the to location of the last move (level current level) to 1 or if 1 is equal to State at the location of the piece, if Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track CaptureTrack is not equal to -1, from edge in the location of the piece current level to edge Throw of the number of pips owned by Player Shared steps forward from site the location of the piece on track CaptureTrack moveRule: true then for each level at Edge the from location of the last move (FromTop) if 2 is equal to State at the from location of the last move, from edge in the from location of the last move current level to edge the to location of the last move moveRule: true and for each level at Edge the from location of the last move (FromTop) if is a friend, set the state of the Edge the from location of the last move (level current level) to 0, else remove pieces at the location of the piece then for each level at Edge the from location of the last move (FromTop) if is a friend, set the state of the Edge the from location of the last move (level current level) to 0 and for each level at Edge the from location of the last move (FromTop) if 2 is equal to State at the from location of the last move, remove pieces at the from location of the last move and add Marker of the moving player.
                Players take turns moving.
                Setup:
                Place stack of [Marker1] at edge Player 1's hand site 0
                Place stack of [Marker2] at edge Player 2's hand site 0.
                Rules: 
                Roll the dice and afterwards if edge Player the moving player's hand site 0 is occupied, from edge in Player the moving player's hand site 0 to edge Throw of the number of pips owned by Player Shared minus 1 steps forward from site Entry of current moving player on track Track moveRule: true or move one of your pieces then if not in the same turn, move again.
                Aim: 
                If there are no pieces owned by Player 2, player two loses If there are no pieces owned by Player 1, player one loses.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 28) (Reconstructed)" (id "3922"))
        (useFor "Ruleset/Cumisitha (Ludii 29) (Reconstructed)" (rules "The game Cumisitha is played by two players on a 5x5 rectangle board with square tiling.
                Regions:
                AllSites: the sites of the board for Neutral 
                All players play with Sticks.
                Rules for Pieces:
                Sticks step orthogonal or hop orthogonal.
                Players take turns moving.
                Rules: 
                If a state is pending, from vertex in Player the moving player's hand site 0 to vertex in the set of empty vertexs moveRule: true, else if not all sites in the sites in Player the moving player's hand satisfy the condition 0 is equal to the total number of cell in current site, from vertex in Player the moving player's hand site 0 to vertex in the set of empty vertexs moveRule: true then set pending or move one of your pieces.
                Aim: 
                If there are no pieces owned by Player the next player, the next player loses.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 29) (Reconstructed)" (id "3923"))
        (useFor "Ruleset/Cumisitha (Ludii 30) (Reconstructed)" (rules "The game Cumisitha is played by two players on a 5x5 rectangle board with square tiling. 
                All players play with Markers.
                Rules for Pieces:
                Markers step orthogonal or hop adjacent then move again.
                Players take turns moving.
                Rules: 
                If in the same turn, remove pieces at sites occupied by any component owned by Next in Board, else if not all sites in the sites in Player the moving player's hand satisfy the condition 0 is equal to the total number of cell in current site, from cell in Player the moving player's hand site 0 to cell in the set of empty cells moveRule: true or move one of your pieces.
                Aim: 
                If there are no pieces owned by Player the next player, the next player loses.
                
        "))
        (useFor "Ruleset/Cumisitha (Ludii 30) (Reconstructed)" (id "3924"))
        (source "Depaulis 1998: 34.")
        (version "1.3.10")
        (classification "board/war/reconstruction/done")
        (credit "Eric Piette")
        (origin "This game was played in Andes, from around 1581 to 1612.")
        }
    )
    
    (recon {
        (concept "Sow" False)
    })
    
)

