(game "Chess (Siberia)"
    <Variant>
)

//------------------------------------------------------------------------------

(option "Variant" <Variant> args:{ <variant> }
    {
    (item "Chess (Siberia) (Ludii 1)" <
        
        (players 2)
        
        (equipment { 
            (board 
                (square 9)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    }
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 7)
                )
                
                (place "Rook1" { "A1" "I1"}
                )
                
                (place "Knight1" { "B1" "H1"}
                )
                
                (place "Bishop1" { "C1" "G1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1")
                
                (place "Rook2" { "A9" "I9"}
                )
                
                (place "Knight2" { "B9" "H9"}
                )
                
                (place "Bishop2" { "C9" "G9"}
                )
                
                (place "Queen2" coord:"D9")
                
                (place "King2" coord:"E9")
                }
            )
            phases:{ 
            (phase "Opening" 
                (play 
                    (do 
                        (forEach Piece)
                        ifAfterwards:
                        (not 
                            (is Threatened 
                                (id "King" Mover)
                            )
                        )
                        
                        (then 
                            (and 
                                (set Value Mover 
                                    (+ 1 
                                        (value Player Mover)
                                    )
                                )
                                
                                (if 
                                    (!= 
                                        (value Player Mover)
                                    1)
                                    
                                    (moveAgain)
                                )
                            )
                        )
                    )
                )
                
                (nextPhase Mover 
                    (= 2 
                        (value Player Mover)
                    )
                "Playing")
            )
            
            (phase "Playing" 
                (play 
                    (if 
                        (is Prev Mover)
                        
                        (move Promote 
                            (last To)
                            
                            (piece { "Queen" "Knight" "Bishop" "Rook"}
                            )
                        Mover )
                        
                        (do 
                            (forEach Piece)
                            ifAfterwards:
                            (not 
                                (is Threatened 
                                    (id "King" Mover)
                                )
                            )
                        )
                    )
                )
            )
            }
            
            (end 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Chess (Siberia) (Ludii 1) ruleset.")
    
    (item "Chess (Siberia) (Ludii 2)" <
        
        (players 2)
        
        (equipment { 
            (board 
                (square 9)
            )
            
            (hand Each size:5)
            
            (piece "KingnoCross" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Camel" Each 
                (move Hop Diagonal 
                    (between if:True)
                    
                    (to if:
                        (or 
                            (is Empty 
                                (to)
                            )
                            
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Pawn" Each 
                (or { 
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (is In 
                                (last To)
                                
                                (sites Mover "Promotion")
                            )
                            
                            (promote 
                                (last To)
                                
                                (piece "Dog")
                            Mover)
                        )
                    )
                )
            )
            
            (piece "Dog" Each 
                (move Step Diagonal 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 7)
                )
                
                (place "Rook1" { "A1" "I1"}
                )
                
                (place "Knight1" { "B1" "H1"}
                )
                
                (place "Camel1" { "C1" "G1"}
                )
                
                (place "Dog1" coord:"D1")
                
                (place "KingnoCross1" coord:"E1")
                
                (place "Rook2" { "A9" "I9"}
                )
                
                (place "Knight2" { "B9" "H9"}
                )
                
                (place "Camel2" { "C9" "G9"}
                )
                
                (place "Dog2" coord:"D9")
                
                (place "KingnoCross2" coord:"E9")
                }
            )
            
            (play 
                (do 
                    (forEach Piece)
                    ifAfterwards:
                    (not 
                        (is Threatened 
                            (id "KingnoCross" Mover)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (and 
                        (is Threatened 
                            (id "KingnoCross" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "KingnoCross" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    { 
                    (if 
                        (no Pieces Next "Pawn")
                        
                        (result Mover Win)
                    )
                    
                    (if 
                        (!= 
                            (count Pieces Next "Pawn")
                        0)
                        
                        (result Mover Draw)
                    )
                    }
                )
            )
        )
        
    > "The Chess (Siberia) (Ludii 2) ruleset.")
    
    (item "Chess (Siberia) (Ludii 3)" <
        
        (players 2)
        
        (equipment { 
            (board 
                (square 9)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (set Pending 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (and 
                                (is Pending)
                                
                                (= 
                                    (to)
                                    
                                    (value Pending)
                                )
                            )
                        )
                        
                        (then 
                            (remove 
                                (ahead 
                                    (last To)
                                Backward)
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (is In 
                                (last To)
                                
                                (sites Mover "Promotion")
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E9")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A9")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "I1")
                
                (pair 2 "I9")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            
            (regions "Half" P1 
                (expand 
                    (sites Bottom)
                steps:3)
            )
            
            (regions "Half" P2 
                (expand 
                    (sites Top)
                steps:3)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 7)
                )
                
                (place "Rook1" { "A1" "I1"}
                )
                
                (place "Knight1" { "B1" "H1"}
                )
                
                (place "Bishop1" { "C1" "G1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1")
                
                (place "Rook2" { "A9" "I9"}
                )
                
                (place "Knight2" { "B9" "H9"}
                )
                
                (place "Bishop2" { "C9" "G9"}
                )
                
                (place "Queen2" coord:"D9")
                
                (place "King2" coord:"E9")
                }
            )
            phases:{ 
            (phase "Opening" 
                (play 
                    (do 
                        (forEach Piece)
                        ifAfterwards:
                        (not 
                            (is Threatened 
                                (id "King" Mover)
                            )
                        )
                        
                        (then 
                            (and 
                                (set Value Mover 
                                    (+ 1 
                                        (value Player Mover)
                                    )
                                )
                                
                                (if 
                                    (!= 
                                        (value Player Mover)
                                    1)
                                    
                                    (moveAgain)
                                )
                            )
                        )
                    )
                )
                
                (nextPhase Mover 
                    (= 2 
                        (value Player Mover)
                    )
                "Playing")
            )
            
            (phase "Playing" 
                (play 
                    (if 
                        (is Prev Mover)
                        
                        (move Promote 
                            (last To)
                            
                            (piece { "Queen" "Knight" "Bishop" "Rook"}
                            )
                        Mover )
                        
                        (do 
                            (forEach Piece)
                            ifAfterwards:
                            (not 
                                (is Threatened 
                                    (id "King" Mover)
                                )
                            )
                        )
                    )
                )
            )
            }
            
            (end 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Chess (Siberia) (Ludii 3) ruleset.")
    
    (item "Chess (Siberia) (Ludii 4)" <
        
        (players 2)
        
        (equipment { 
            (board 
                (square 9)
            )
            
            (piece "KingnoCross" Each 
                (or { 
                    (move Step 
                        (to if:
                            (not 
                                (is Friend 
                                    (who at:
                                        (to)
                                    )
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                        
                        (then 
                            (if 
                                (and 
                                    (= 1 
                                        (state at:
                                            (last To)
                                        )
                                    )
                                    
                                    (= 
                                        (last To)
                                        
                                        (mapEntry "AheadKing" Mover)
                                    )
                                )
                                
                                (set State at:
                                    (last To)
                                2)
                                
                                (if 
                                    (!= 
                                        (state at:
                                            (last To)
                                        )
                                    0)
                                    
                                    (set State at:
                                        (last To)
                                    0)
                                )
                            )
                        )
                    )
                    
                    (if 
                        (and { 
                            (= 1 
                                (state at:
                                    (from)
                                )
                            )
                            
                            (= 1 
                                (state at:
                                    (mapEntry "RookRight" Mover)
                                )
                            )
                            
                            (is Empty 
                                (mapEntry "KnightKingRightForward" Mover )
                            )
                            }
                        )
                        
                        (move 
                            (from)
                            
                            (to 
                                (mapEntry "KnightKingRightForward" Mover)
                            )
                            
                            (then 
                                (if 
                                    (!= 
                                        (state at:
                                            (last To)
                                        )
                                    0)
                                    
                                    (set State at:
                                        (last To)
                                    0)
                                )
                            )
                        )
                    )
                    
                    (if 
                        (and { 
                            (= 1 
                                (state at:
                                    (from)
                                )
                            )
                            
                            (= 1 
                                (state at:
                                    (mapEntry "RookLeft" Mover)
                                )
                            )
                            
                            (is Empty 
                                (mapEntry "KnightKingLeftForward" Mover )
                            )
                            }
                        )
                        
                        (move 
                            (from)
                            
                            (to 
                                (mapEntry "KnightKingLeftForward" Mover)
                            )
                            
                            (then 
                                (if 
                                    (!= 
                                        (state at:
                                            (last To)
                                        )
                                    0)
                                    
                                    (set State at:
                                        (last To)
                                    0)
                                )
                            )
                        )
                    )
                    
                    (if 
                        (and { 
                            (= 2 
                                (state at:
                                    (from)
                                )
                            )
                            
                            (= 2 
                                (state at:
                                    (regionSite 
                                        (sites Start 
                                            (piece 
                                                (id "King" Mover)
                                            )
                                        )
                                    index:0 )
                                )
                            )
                            }
                        )
                        
                        (move 
                            (from)
                            
                            (to 
                                (mapEntry "KnightKingLeftBackward" Mover)
                            )
                            
                            (then 
                                (set State at:
                                    (last To)
                                0)
                            )
                        )
                    )
                    
                    (if 
                        (and { 
                            (= 2 
                                (state at:
                                    (from)
                                )
                            )
                            
                            (= 3 
                                (state at:
                                    (regionSite 
                                        (sites Start 
                                            (piece 
                                                (id "King" Mover)
                                            )
                                        )
                                    index:0 )
                                )
                            )
                            }
                        )
                        
                        (move 
                            (from)
                            
                            (to 
                                (mapEntry "KnightKingRightBackward" Mover)
                            )
                            
                            (then 
                                (set State at:
                                    (last To)
                                0)
                            )
                        )
                    )
                    }
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (if 
                                (and 
                                    (is In 
                                        (last To)
                                        
                                        (sites Start 
                                            (piece 
                                                (id "King" Mover)
                                            )
                                        )
                                    )
                                    
                                    (= 2 
                                        (state at:
                                            (where "King" Mover)
                                        )
                                    )
                                )
                                
                                (if 
                                    (= 
                                        (last From)
                                        
                                        (mapEntry "RookLeft" Mover)
                                    )
                                    
                                    (set State at:
                                        (last To)
                                    2)
                                    
                                    (set State at:
                                        (last To)
                                    3)
                                )
                                
                                (set State at:
                                    (last To)
                                0)
                            )
                        )
                    )
                )
            maxState:3 )
            
            (piece "BishopnoCross" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "FerznoCross" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Pawn" Each 
                (or { 
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    }
                )
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A9")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "I1")
                
                (pair 2 "I9")
                }
            )
            
            (map "AheadKing" { 
                (pair 1 "E2")
                
                (pair 2 "E8")
                }
            )
            
            (map "KnightKingRightForward" { 
                (pair 1 "G2")
                
                (pair 2 "G8")
                }
            )
            
            (map "KnightKingLeftForward" { 
                (pair 1 "C2")
                
                (pair 2 "C8")
                }
            )
            
            (map "KnightKingRightBackward" { 
                (pair 1 "G1")
                
                (pair 2 "G9")
                }
            )
            
            (map "KnightKingLeftBackward" { 
                (pair 1 "C1")
                
                (pair 2 "C9")
                }
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 7)
                )
                
                (place "Rook1" { "A1" "I1"}
                state:1)
                
                (place "Knight1" { "B1" "H1"}
                )
                
                (place "BishopnoCross1" { "C1" "G1"}
                )
                
                (place "FerznoCross1" coord:"D1")
                
                (place "KingnoCross1" coord:"E1" state:1)
                
                (place "Rook2" { "A9" "I9"}
                state:1)
                
                (place "Knight2" { "B9" "H9"}
                )
                
                (place "BishopnoCross2" { "C9" "G9"}
                )
                
                (place "FerznoCross2" coord:"D9")
                
                (place "KingnoCross2" coord:"E9" state:1)
                }
            )
            
            (play 
                (do 
                    (forEach Piece)
                    ifAfterwards:
                    (not 
                        (is Threatened 
                            (id "KingnoCross" Mover)
                        )
                    )
                )
            )
            
            (end 
                (if 
                    (and 
                        (is Threatened 
                            (id "KingnoCross" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "KingnoCross" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Chess (Siberia) (Ludii 4) ruleset.")
    
    (item "Chess (Siberia) (Ludii 5)" <
        
        (players 2)
        
        (equipment { 
            (board 
                (square 9)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (set Pending 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (and 
                                (is Pending)
                                
                                (= 
                                    (to)
                                    
                                    (value Pending)
                                )
                            )
                        )
                        
                        (then 
                            (remove 
                                (ahead 
                                    (last To)
                                Backward)
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (is In 
                                (last To)
                                
                                (sites Mover "Promotion")
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E9")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A9")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "I1")
                
                (pair 2 "I9")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            
            (regions "Half" P1 
                (expand 
                    (sites Bottom)
                steps:3)
            )
            
            (regions "Half" P2 
                (expand 
                    (sites Top)
                steps:3)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 7)
                )
                
                (place "Rook1" { "A1" "I1"}
                state:1)
                
                (place "Knight1" { "B1" "H1"}
                )
                
                (place "Bishop1" { "C1" "G1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1" state:1)
                
                (place "Rook2" { "A9" "I9"}
                state:1)
                
                (place "Knight2" { "B9" "H9"}
                )
                
                (place "Bishop2" { "C9" "G9"}
                )
                
                (place "Queen2" coord:"D9")
                
                (place "King2" coord:"E9" state:1)
                }
            )
            phases:{ 
            (phase "Opening" 
                (play 
                    (do 
                        (forEach Piece)
                        ifAfterwards:
                        (and 
                            (is In 
                                (last To)
                                
                                (sites Mover "Half")
                            )
                            
                            (not 
                                (is Threatened 
                                    (id "King" Mover)
                                )
                            )
                        )
                        
                        (then 
                            (if 
                                (not 
                                    (is Prev Mover)
                                )
                                
                                (moveAgain)
                            )
                        )
                    )
                )
                
                (nextPhase Mover 
                    (is Prev Mover)
                "Playing")
            )
            
            (phase "Playing" 
                (play 
                    (if 
                        (is Prev Mover)
                        
                        (move Promote 
                            (last To)
                            
                            (piece { "Queen" "Knight" "Bishop" "Rook"}
                            )
                        Mover )
                        
                        (do 
                            (or 
                                (forEach Piece)
                                
                                (if 
                                    (and 
                                        (= 
                                            (state at:
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                        1 )
                                        
                                        (not 
                                            (is Threatened 
                                                (id "King" Mover)
                                            )
                                        )
                                    )
                                    
                                    (or 
                                        (if 
                                            (and 
                                                (= 
                                                    (state at:
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                1 )
                                                
                                                (can Move 
                                                    (slide 
                                                        (from 
                                                            (mapEntry "RookLeft" 
                                                                (mover)
                                                            )
                                                        )
                                                        E 
                                                        (between 
                                                            (exact 3)
                                                            if:
                                                            (is Empty 
                                                                (to)
                                                            )
                                                        )
                                                        
                                                        (to if:True 
                                                            (apply 
                                                                (set State at:
                                                                    (from)
                                                                0 )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (move Slide 
                                                (from 
                                                    (mapEntry "King" 
                                                        (mover)
                                                    )
                                                )
                                                W 
                                                (between 
                                                    (exact 2)
                                                    if:
                                                    (and 
                                                        (is Empty 
                                                            (to)
                                                        )
                                                        
                                                        (not 
                                                            (is Threatened 
                                                                (id "King" Mover )
                                                                at:
                                                                (to)
                                                            )
                                                        )
                                                    )
                                                )
                                                
                                                (to if:True 
                                                    (apply 
                                                        (set State at:
                                                            (from)
                                                        0 )
                                                    )
                                                )
                                                
                                                (then 
                                                    (slide 
                                                        (from 
                                                            (mapEntry "RookLeft" 
                                                                (mover)
                                                            )
                                                        )
                                                        E 
                                                        (between 
                                                            (exact 3)
                                                        if:True )
                                                        
                                                        (to if:True 
                                                            (apply 
                                                                (set State at:
                                                                    (from)
                                                                0 )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (if 
                                            (and 
                                                (= 
                                                    (state at:
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                1 )
                                                
                                                (can Move 
                                                    (slide 
                                                        (from 
                                                            (mapEntry "RookRight" 
                                                                (mover)
                                                            )
                                                        )
                                                        W 
                                                        (between 
                                                            (exact 2)
                                                            if:
                                                            (is Empty 
                                                                (to)
                                                            )
                                                        )
                                                        
                                                        (to if:True 
                                                            (apply 
                                                                (set State at:
                                                                    (from)
                                                                0 )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (move Slide 
                                                (from 
                                                    (mapEntry "King" 
                                                        (mover)
                                                    )
                                                )
                                                E 
                                                (between 
                                                    (exact 2)
                                                    if:
                                                    (and 
                                                        (is Empty 
                                                            (to)
                                                        )
                                                        
                                                        (not 
                                                            (is Threatened 
                                                                (id "King" Mover )
                                                                at:
                                                                (to)
                                                            )
                                                        )
                                                    )
                                                )
                                                
                                                (to if:True 
                                                    (apply 
                                                        (set State at:
                                                            (from)
                                                        0 )
                                                    )
                                                )
                                                
                                                (then 
                                                    (slide 
                                                        (from 
                                                            (mapEntry "RookRight" 
                                                                (mover)
                                                            )
                                                        )
                                                        W 
                                                        (between 
                                                            (exact 2)
                                                        if:True )
                                                        
                                                        (to if:True 
                                                            (apply 
                                                                (set State at:
                                                                    (from)
                                                                0 )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                            ifAfterwards:
                            (not 
                                (is Threatened 
                                    (id "King" Mover)
                                )
                            )
                        )
                    )
                )
            )
            }
            
            (end 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
            )
        )
        
    > "The Chess (Siberia) (Ludii 5) ruleset.")
    
    (item "Chess (Siberia) (Ludii 6)" <
        
        (players 2)
        
        (equipment { 
            (board 
                (square 9)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    }
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 7)
                )
                
                (place "Rook1" { "A1" "I1"}
                state:1)
                
                (place "Knight1" { "B1" "H1"}
                )
                
                (place "Bishop1" { "C1" "G1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1" state:1)
                
                (place "Rook2" { "A9" "I9"}
                state:1)
                
                (place "Knight2" { "B9" "H9"}
                )
                
                (place "Bishop2" { "C9" "G9"}
                )
                
                (place "Queen2" coord:"D9")
                
                (place "King2" coord:"E9" state:1)
                }
            )
            
            (play 
                (do 
                    (forEach Piece)
                    ifAfterwards:
                    (not 
                        (is Threatened 
                            (id "King" Mover)
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (= 1 
                        (count Pieces Next)
                    )
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Chess (Siberia) (Ludii 6) ruleset.")
    
    (item "Chess (Siberia) (Ludii 7)" <
        
        (players 2)
        
        (equipment { 
            (board 
                (square 9)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (set Pending 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (and 
                                (is Pending)
                                
                                (= 
                                    (to)
                                    
                                    (value Pending)
                                )
                            )
                        )
                        
                        (then 
                            (remove 
                                (ahead 
                                    (last To)
                                Backward)
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (is In 
                                (last To)
                                
                                (sites Mover "Promotion")
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E9")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A9")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "I1")
                
                (pair 2 "I9")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            
            (regions "Half" P1 
                (expand 
                    (sites Bottom)
                steps:3)
            )
            
            (regions "Half" P2 
                (expand 
                    (sites Top)
                steps:3)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 7)
                )
                
                (place "Rook1" { "A1" "I1"}
                state:1)
                
                (place "Knight1" { "B1" "H1"}
                )
                
                (place "Bishop1" { "C1" "G1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1" state:1)
                
                (place "Rook2" { "A9" "I9"}
                state:1)
                
                (place "Knight2" { "B9" "H9"}
                )
                
                (place "Bishop2" { "C9" "G9"}
                )
                
                (place "Queen2" coord:"D9")
                
                (place "King2" coord:"E9" state:1)
                }
            )
            
            (play 
                (if 
                    (is Prev Mover)
                    
                    (move Promote 
                        (last To)
                        
                        (piece { "Queen" "Knight" "Bishop" "Rook"}
                        )
                    Mover )
                    
                    (do 
                        (or 
                            (forEach Piece)
                            
                            (if 
                                (and 
                                    (= 
                                        (state at:
                                            (mapEntry "King" 
                                                (mover)
                                            )
                                        )
                                    1)
                                    
                                    (not 
                                        (is Threatened 
                                            (id "King" Mover)
                                        )
                                    )
                                )
                                
                                (or 
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookLeft" 
                                                        (mover)
                                                    )
                                                )
                                            1 )
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            W 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookRight" 
                                                        (mover)
                                                    )
                                                )
                                            1 )
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            E 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        ifAfterwards:
                        (not 
                            (is Threatened 
                                (id "King" Mover)
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (or 
                        (no Moves Mover)
                        
                        (= 
                            (counter)
                        99)
                    )
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Chess (Siberia) (Ludii 7) ruleset.")
    
    (item "Chess (Siberia) (Ludii 8)" <
        
        (players 2)
        
        (equipment { 
            (board 
                (square 9)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (set Pending 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (and 
                                (is Pending)
                                
                                (= 
                                    (to)
                                    
                                    (value Pending)
                                )
                            )
                        )
                        
                        (then 
                            (remove 
                                (ahead 
                                    (last To)
                                Backward)
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (is In 
                                (last To)
                                
                                (sites Mover "Promotion")
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E9")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A9")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "I1")
                
                (pair 2 "I9")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            
            (regions "Half" P1 
                (expand 
                    (sites Bottom)
                steps:3)
            )
            
            (regions "Half" P2 
                (expand 
                    (sites Top)
                steps:3)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 7)
                )
                
                (place "Rook1" { "A1" "I1"}
                state:1)
                
                (place "Knight1" { "B1" "H1"}
                )
                
                (place "Bishop1" { "C1" "G1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1" state:1)
                
                (place "Rook2" { "A9" "I9"}
                state:1)
                
                (place "Knight2" { "B9" "H9"}
                )
                
                (place "Bishop2" { "C9" "G9"}
                )
                
                (place "Queen2" coord:"D9")
                
                (place "King2" coord:"E9" state:1)
                }
            )
            
            (play 
                (do 
                    (forEach Piece)
                    ifAfterwards:
                    (not 
                        (is Threatened 
                            (id "King" Mover)
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (= 1 
                        (count Pieces Next)
                    )
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Chess (Siberia) (Ludii 8) ruleset.")
    
    (item "Chess (Siberia) (Ludii 9)" <
        
        (players 2)
        
        (equipment { 
            (board 
                (square 9)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (or 
                        (if 
                            (is In 
                                (from)
                                
                                (sites Start 
                                    (piece 
                                        (what at:
                                            (from)
                                        )
                                    )
                                )
                            )
                            
                            (move Slide Forward 
                                (between 
                                    (exact 2)
                                    if:
                                    (is Empty 
                                        (between)
                                    )
                                )
                                
                                (to if:
                                    (is Empty 
                                        (to)
                                    )
                                )
                                
                                (then 
                                    (set Pending 
                                        (ahead 
                                            (last To)
                                        Backward)
                                    )
                                )
                            )
                        )
                        
                        (move Step 
                            (directions { FR FL }
                            )
                            
                            (to if:
                                (and 
                                    (is Pending)
                                    
                                    (= 
                                        (to)
                                        
                                        (value Pending)
                                    )
                                )
                            )
                            
                            (then 
                                (remove 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    }
                    
                    (then 
                        (and 
                            (if 
                                (is In 
                                    (last To)
                                    
                                    (sites Mover "Promotion")
                                )
                                
                                (moveAgain)
                            )
                            
                            (set Counter)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                    
                                    (then 
                                        (set Counter)
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                    
                                    (then 
                                        (set Counter)
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E9")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A9")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "I1")
                
                (pair 2 "I9")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 7)
                )
                
                (place "Rook1" { "A1" "I1"}
                state:1)
                
                (place "Knight1" { "B1" "H1"}
                )
                
                (place "Bishop1" { "C1" "G1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1" state:1)
                
                (place "Rook2" { "A9" "I9"}
                state:1)
                
                (place "Knight2" { "B9" "H9"}
                )
                
                (place "Bishop2" { "C9" "G9"}
                )
                
                (place "Queen2" coord:"D9")
                
                (place "King2" coord:"E9" state:1)
                }
            )
            
            (play 
                (if 
                    (is Prev Mover)
                    
                    (move Promote 
                        (last To)
                        
                        (piece { "Queen" "Knight" "Bishop" "Rook"}
                        )
                    Mover )
                    
                    (do 
                        (or 
                            (forEach Piece)
                            
                            (if 
                                (and 
                                    (= 
                                        (state at:
                                            (mapEntry "King" 
                                                (mover)
                                            )
                                        )
                                    1)
                                    
                                    (not 
                                        (is Threatened 
                                            (id "King" Mover)
                                        )
                                    )
                                )
                                
                                (or 
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookLeft" 
                                                        (mover)
                                                    )
                                                )
                                            1 )
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            W 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookRight" 
                                                        (mover)
                                                    )
                                                )
                                            1 )
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            E 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0 )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        ifAfterwards:
                        (not 
                            (is Threatened 
                                (id "King" Mover)
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (or 
                        (no Moves Mover)
                        
                        (= 
                            (counter)
                        99)
                    )
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Chess (Siberia) (Ludii 9) ruleset.")
    
    (item "Chess (Siberia) (Ludii 10)" <
        
        (players 2)
        
        (equipment { 
            (board 
                (square 9)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (or 
                        (if 
                            (is In 
                                (from)
                                
                                (sites Start 
                                    (piece 
                                        (what at:
                                            (from)
                                        )
                                    )
                                )
                            )
                            
                            (move Slide Forward 
                                (between 
                                    (exact 2)
                                    if:
                                    (is Empty 
                                        (between)
                                    )
                                )
                                
                                (to if:
                                    (is Empty 
                                        (to)
                                    )
                                )
                                
                                (then 
                                    (set Pending 
                                        (ahead 
                                            (last To)
                                        Backward)
                                    )
                                )
                            )
                        )
                        
                        (move Step 
                            (directions { FR FL }
                            )
                            
                            (to if:
                                (and 
                                    (is Pending)
                                    
                                    (= 
                                        (to)
                                        
                                        (value Pending)
                                    )
                                )
                            )
                            
                            (then 
                                (remove 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    }
                    
                    (then 
                        (and 
                            (if 
                                (is In 
                                    (last To)
                                    
                                    (sites Mover "Promotion")
                                )
                                
                                (moveAgain)
                            )
                            
                            (set Counter)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                    
                                    (then 
                                        (set Counter)
                                    )
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                    
                                    (then 
                                        (set Counter)
                                    )
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                                
                                (then 
                                    (set Counter)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E9")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A9")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "I1")
                
                (pair 2 "I9")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 7)
                )
                
                (place "Rook1" { "A1" "I1"}
                state:1)
                
                (place "Knight1" { "B1" "H1"}
                )
                
                (place "Bishop1" { "C1" "G1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1" state:1)
                
                (place "Rook2" { "A9" "I9"}
                state:1)
                
                (place "Knight2" { "B9" "H9"}
                )
                
                (place "Bishop2" { "C9" "G9"}
                )
                
                (place "Queen2" coord:"D9")
                
                (place "King2" coord:"E9" state:1)
                }
            )
            
            (play 
                (do 
                    (forEach Piece)
                    ifAfterwards:
                    (not 
                        (is Threatened 
                            (id "King" Mover)
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (= 1 
                        (count Pieces Next)
                    )
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Chess (Siberia) (Ludii 10) ruleset.")
    
    (item "Chess (Siberia) (Ludii 11)" <
        
        (players 2)
        
        (equipment { 
            (board 
                (square 9)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL }
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                        )
                    )
                    }
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F }
                    { F F L F }
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (remove 
                                (to)
                            )
                        )
                    )
                )
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 7)
                )
                
                (place "Rook1" { "A1" "I1"}
                state:1)
                
                (place "Knight1" { "B1" "H1"}
                )
                
                (place "Bishop1" { "C1" "G1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1" state:1)
                
                (place "Rook2" { "A9" "I9"}
                state:1)
                
                (place "Knight2" { "B9" "H9"}
                )
                
                (place "Bishop2" { "C9" "G9"}
                )
                
                (place "Queen2" coord:"D9")
                
                (place "King2" coord:"E9" state:1)
                }
            )
            
            (play 
                (do 
                    (forEach Piece)
                    ifAfterwards:
                    (not 
                        (is Threatened 
                            (id "King" Mover)
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (= 1 
                        (count Pieces Next)
                    )
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Chess (Siberia) (Ludii 11) ruleset.")
    
    (item "Incomplete"
        <
        (players 2) 
        (equipment { 
            (board (square 9)) 
            [#]
        })
        
        (rules [#])
        >
        "The incomplete ruleset."
    )
    
})

//------------------------------------------------------------------------------

(rulesets {
    
    (ruleset "Ruleset/Chess (Siberia) (Ludii 1) (Reconstructed)" {
        "Variant/Chess (Siberia) (Ludii 1)"
    })
    (ruleset "Ruleset/Chess (Siberia) (Ludii 2) (Reconstructed)" {
        "Variant/Chess (Siberia) (Ludii 2)"
    })
    (ruleset "Ruleset/Chess (Siberia) (Ludii 3) (Reconstructed)" {
        "Variant/Chess (Siberia) (Ludii 3)"
    })
    (ruleset "Ruleset/Chess (Siberia) (Ludii 4) (Reconstructed)" {
        "Variant/Chess (Siberia) (Ludii 4)"
    })
    (ruleset "Ruleset/Chess (Siberia) (Ludii 5) (Reconstructed)" {
        "Variant/Chess (Siberia) (Ludii 5)"
    })
    (ruleset "Ruleset/Chess (Siberia) (Ludii 6) (Reconstructed)" {
        "Variant/Chess (Siberia) (Ludii 6)"
    })
    (ruleset "Ruleset/Chess (Siberia) (Ludii 7) (Reconstructed)" {
        "Variant/Chess (Siberia) (Ludii 7)"
    })
    (ruleset "Ruleset/Chess (Siberia) (Ludii 8) (Reconstructed)" {
        "Variant/Chess (Siberia) (Ludii 8)"
    })
    (ruleset "Ruleset/Chess (Siberia) (Ludii 9) (Reconstructed)" {
        "Variant/Chess (Siberia) (Ludii 9)"
    })
    (ruleset "Ruleset/Chess (Siberia) (Ludii 10) (Reconstructed)" {
        "Variant/Chess (Siberia) (Ludii 10)"
    })
    (ruleset "Ruleset/Chess (Siberia) (Ludii 11) (Reconstructed)" {
        "Variant/Chess (Siberia) (Ludii 11)"
    }) 
    
    (ruleset "Ruleset/Historical Information (Incomplete)" {
        "Variant/Incomplete"
    })
    
})

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "This game was played on the banks of the Nagy-Jugan River in Siberia. ")
        (useFor "Ruleset/Historical Information (Incomplete)" (rules "9x9 board. At least eight different piece types: two with eight pieces, three with two pieces, and two with one piece."))
        (useFor "Ruleset/Historical Information (Incomplete)" (source "DLP evidence."))
        (useFor "Ruleset/Historical Information (Incomplete)" (id "2031"))
        (useFor "Ruleset/Chess (Siberia) (Ludii 1) (Reconstructed)" (rules "The game Chess (Siberia) is played by two players on a 9x9 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent.
                Knights leap a piece to not is a friend.
                Pawns if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty or step forward or remove pieces at to then step forward-right or forward-left.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 7 row.
                Place a Rook for player one on sites: A1 and I1.
                Place a Knight for player one on sites: B1 and H1.
                Place a Bishop for player one on sites: C1 and G1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A9 and I9.
                Place a Knight for player two on sites: B9 and H9.
                Place a Bishop for player two on sites: C9 and G9.
                Place a Queen for player two on site D9.
                Place a King for player two on site E9..
                Rules: 
                Move one of your pieces then set the value of Player the moving player to add the following values: [1,the value of Player the moving player] and if the value of Player the moving player is not equal to 1, move again if in the same turn, a piece of the moving player the to location of the last move, this piece can promote into Queen, Knight, Bishop or Rook, else move one of your pieces.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins.
                
        "))
        (useFor "Ruleset/Chess (Siberia) (Ludii 1) (Reconstructed)" (id "3824"))
        (useFor "Ruleset/Chess (Siberia) (Ludii 2) (Reconstructed)" (rules "The game Chess (Siberia) is played by two players on a 9x9 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with KingnoCrosses, Rooks, Camels, Knights, Pawns and Dogs.
                Rules for Pieces:
                Camels hop diagonal.
                Dogs remove pieces at to then step diagonal.
                KingnoCrosses if there is an enemy Player at to, remove pieces at to then step adjacent.
                Knights leap a piece to not is a friend.
                Pawns step forward or remove pieces at to then step forward-right or forward-left or if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty if the to location of the last move is in Promotion or Promotion, a piece of the moving player the to location of the last move, this piece can promote into Dog.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 7 row.
                Place a Rook for player one on sites: A1 and I1.
                Place a Knight for player one on sites: B1 and H1.
                Place a Camel for player one on sites: C1 and G1.
                Place a Dog for player one on site D1.
                Place a KingnoCross for player one on site E1.
                Place a Rook for player two on sites: A9 and I9.
                Place a Knight for player two on sites: B9 and H9.
                Place a Camel for player two on sites: C9 and G9.
                Place a Dog for player two on site D9.
                Place a KingnoCross for player two on site E9..
                Rules: 
                Move one of your pieces.
                Aim: 
                If KingnoCross of the next player is threatened and not can move move one of your pieces.
                
        "))
        (useFor "Ruleset/Chess (Siberia) (Ludii 2) (Reconstructed)" (id "3825"))
        (useFor "Ruleset/Chess (Siberia) (Ludii 3) (Reconstructed)" (rules "The game Chess (Siberia) is played by two players on a 9x9 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2
                Half: the bottom sites of the board expanded by 3 steps for P1
                Half: the top sites of the board expanded by 3 steps for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward or remove pieces at to then step forward-right or forward-left or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 7 row.
                Place a Rook for player one on sites: A1 and I1.
                Place a Knight for player one on sites: B1 and H1.
                Place a Bishop for player one on sites: C1 and G1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A9 and I9.
                Place a Knight for player two on sites: B9 and H9.
                Place a Bishop for player two on sites: C9 and G9.
                Place a Queen for player two on site D9.
                Place a King for player two on site E9..
                Rules: 
                Move one of your pieces then set the value of Player the moving player to add the following values: [1,the value of Player the moving player] and if the value of Player the moving player is not equal to 1, move again if in the same turn, a piece of the moving player the to location of the last move, this piece can promote into Queen, Knight, Bishop or Rook, else move one of your pieces.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins.
                
        "))
        (useFor "Ruleset/Chess (Siberia) (Ludii 3) (Reconstructed)" (id "3826"))
        (useFor "Ruleset/Chess (Siberia) (Ludii 4) (Reconstructed)" (rules "The game Chess (Siberia) is played by two players on a 9x9 rectangle board with square tiling. 
                All players play with KingnoCrosses, Rooks, BishopnoCrosses, Knights, FerznoCrosses and Pawns.
                Rules for Pieces:
                BishopnoCrosses slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                FerznoCrosses slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                KingnoCrosses remove pieces at to then step adjacent then if 1 is equal to State at the to location of the last move and the to location of the last move is equal to AheadKing of the moving player, set the state of the Cell the to location of the last move to 2, else if State at the to location of the last move is not equal to 0, set the state of the Cell the to location of the last move to 0 or if 1 is equal to State at the location of the piece, 1 is equal to State at RookRight of the moving player and empty, from cell in the location of the piece to cell KnightKingRightForward of the moving player moveRule: true then if State at the to location of the last move is not equal to 0, set the state of the Cell the to location of the last move to 0 or if 1 is equal to State at the location of the piece, 1 is equal to State at RookLeft of the moving player and empty, from cell in the location of the piece to cell KnightKingLeftForward of the moving player moveRule: true then if State at the to location of the last move is not equal to 0, set the state of the Cell the to location of the last move to 0 or if 2 is equal to State at the location of the piece and 2 is equal to State at site 0 of region start position, from cell in the location of the piece to cell KnightKingLeftBackward of the moving player moveRule: true then set the state of the Cell the to location of the last move to 0 or if 2 is equal to State at the location of the piece and 3 is equal to State at site 0 of region start position, from cell in the location of the piece to cell KnightKingRightBackward of the moving player moveRule: true then set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns step forward or remove pieces at to then step forward-right or forward-left.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, if the to location of the last move is in start position and 2 is equal to State at King of the moving player is in, if the from location of the last move is equal to RookLeft of the moving player, set the state of the Cell the to location of the last move to 2, else set the state of the Cell the to location of the last move to 3, else set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 7 row.
                Place a Rook for player one on sites: A1 and I1.
                Place a Knight for player one on sites: B1 and H1.
                Place a BishopnoCross for player one on sites: C1 and G1.
                Place a FerznoCross for player one on site D1.
                Place a KingnoCross for player one on site E1.
                Place a Rook for player two on sites: A9 and I9.
                Place a Knight for player two on sites: B9 and H9.
                Place a BishopnoCross for player two on sites: C9 and G9.
                Place a FerznoCross for player two on site D9.
                Place a KingnoCross for player two on site E9..
                Rules: 
                Move one of your pieces.
                Aim: 
                If KingnoCross of the next player is threatened and not can move move one of your pieces, the moving player wins.
                
        "))
        (useFor "Ruleset/Chess (Siberia) (Ludii 4) (Reconstructed)" (id "3827"))
        (useFor "Ruleset/Chess (Siberia) (Ludii 5) (Reconstructed)" (rules "The game Chess (Siberia) is played by two players on a 9x9 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2
                Half: the bottom sites of the board expanded by 3 steps for P1
                Half: the top sites of the board expanded by 3 steps for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward or remove pieces at to then step forward-right or forward-left or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 7 row.
                Place a Rook for player one on sites: A1 and I1.
                Place a Knight for player one on sites: B1 and H1.
                Place a Bishop for player one on sites: C1 and G1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A9 and I9.
                Place a Knight for player two on sites: B9 and H9.
                Place a Bishop for player two on sites: C9 and G9.
                Place a Queen for player two on site D9.
                Place a King for player two on site E9..
                Rules: 
                Move one of your pieces then if not in the same turn, move again if in the same turn, a piece of the moving player the to location of the last move, this piece can promote into Queen, Knight, Bishop or Rook, else move one of your pieces or if State at King of current moving player is equal to 1 and not King of the moving player is threatened, if State at RookLeft of current moving player is equal to 1 and can move slide from RookLeft of current moving player in the east direction through empty, slide from King of current moving player in the west direction through empty and not King of the moving player is threatened then slide from RookLeft of current moving player in the east direction through true or if State at RookRight of current moving player is equal to 1 and can move slide from RookRight of current moving player in the west direction through empty, slide from King of current moving player in the east direction through empty and not King of the moving player is threatened then slide from RookRight of current moving player in the west direction through true.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins.
                
        "))
        (useFor "Ruleset/Chess (Siberia) (Ludii 5) (Reconstructed)" (id "3828"))
        (useFor "Ruleset/Chess (Siberia) (Ludii 6) (Reconstructed)" (rules "The game Chess (Siberia) is played by two players on a 9x9 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent.
                Knights leap a piece to not is a friend.
                Pawns if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty or step forward or remove pieces at to then step forward-right or forward-left.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 7 row.
                Place a Rook for player one on sites: A1 and I1.
                Place a Knight for player one on sites: B1 and H1.
                Place a Bishop for player one on sites: C1 and G1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A9 and I9.
                Place a Knight for player two on sites: B9 and H9.
                Place a Bishop for player two on sites: C9 and G9.
                Place a Queen for player two on site D9.
                Place a King for player two on site E9..
                Rules: 
                Move one of your pieces.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If 1 is equal to the number of pieces owned by Player the next player, it's a draw.
                
        "))
        (useFor "Ruleset/Chess (Siberia) (Ludii 6) (Reconstructed)" (id "3829"))
        (useFor "Ruleset/Chess (Siberia) (Ludii 7) (Reconstructed)" (rules "The game Chess (Siberia) is played by two players on a 9x9 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2
                Half: the bottom sites of the board expanded by 3 steps for P1
                Half: the top sites of the board expanded by 3 steps for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward or remove pieces at to then step forward-right or forward-left or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 7 row.
                Place a Rook for player one on sites: A1 and I1.
                Place a Knight for player one on sites: B1 and H1.
                Place a Bishop for player one on sites: C1 and G1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A9 and I9.
                Place a Knight for player two on sites: B9 and H9.
                Place a Bishop for player two on sites: C9 and G9.
                Place a Queen for player two on site D9.
                Place a King for player two on site E9..
                Rules: 
                If in the same turn, a piece of the moving player the to location of the last move, this piece can promote into Queen, Knight, Bishop or Rook, else move one of your pieces or if State at King of current moving player is equal to 1 and not King of the moving player is threatened, if State at RookLeft of current moving player is equal to 1 and can move slide from RookLeft of current moving player in the east direction through empty, slide from King of current moving player in the west direction through empty and not King of the moving player is threatened then slide from RookLeft of current moving player in the east direction through true or if State at RookRight of current moving player is equal to 1 and can move slide from RookRight of current moving player in the west direction through empty, slide from King of current moving player in the east direction through empty and not King of the moving player is threatened then slide from RookRight of current moving player in the west direction through true.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If the moving player cannot move or Counter is equal to 99, it's a draw.
                
        "))
        (useFor "Ruleset/Chess (Siberia) (Ludii 7) (Reconstructed)" (id "3830"))
        (useFor "Ruleset/Chess (Siberia) (Ludii 8) (Reconstructed)" (rules "The game Chess (Siberia) is played by two players on a 9x9 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2
                Half: the bottom sites of the board expanded by 3 steps for P1
                Half: the top sites of the board expanded by 3 steps for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward or remove pieces at to then step forward-right or forward-left or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 7 row.
                Place a Rook for player one on sites: A1 and I1.
                Place a Knight for player one on sites: B1 and H1.
                Place a Bishop for player one on sites: C1 and G1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A9 and I9.
                Place a Knight for player two on sites: B9 and H9.
                Place a Bishop for player two on sites: C9 and G9.
                Place a Queen for player two on site D9.
                Place a King for player two on site E9..
                Rules: 
                Move one of your pieces.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If 1 is equal to the number of pieces owned by Player the next player, it's a draw.
                
        "))
        (useFor "Ruleset/Chess (Siberia) (Ludii 8) (Reconstructed)" (id "3831"))
        (useFor "Ruleset/Chess (Siberia) (Ludii 9) (Reconstructed)" (rules "The game Chess (Siberia) is played by two players on a 9x9 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then set the current counter of the game to -1 then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns step forward or remove pieces at to then step forward-right or forward-left or if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again and set the current counter of the game to -1.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 7 row.
                Place a Rook for player one on sites: A1 and I1.
                Place a Knight for player one on sites: B1 and H1.
                Place a Bishop for player one on sites: C1 and G1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A9 and I9.
                Place a Knight for player two on sites: B9 and H9.
                Place a Bishop for player two on sites: C9 and G9.
                Place a Queen for player two on site D9.
                Place a King for player two on site E9..
                Rules: 
                If in the same turn, a piece of the moving player the to location of the last move, this piece can promote into Queen, Knight, Bishop or Rook, else move one of your pieces or if State at King of current moving player is equal to 1 and not King of the moving player is threatened, if State at RookLeft of current moving player is equal to 1 and can move slide from RookLeft of current moving player in the east direction through empty, slide from King of current moving player in the west direction through empty and not King of the moving player is threatened then slide from RookLeft of current moving player in the east direction through true or if State at RookRight of current moving player is equal to 1 and can move slide from RookRight of current moving player in the west direction through empty, slide from King of current moving player in the east direction through empty and not King of the moving player is threatened then slide from RookRight of current moving player in the west direction through true.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If the moving player cannot move or Counter is equal to 99, it's a draw.
                
        "))
        (useFor "Ruleset/Chess (Siberia) (Ludii 9) (Reconstructed)" (id "3832"))
        (useFor "Ruleset/Chess (Siberia) (Ludii 10) (Reconstructed)" (rules "The game Chess (Siberia) is played by two players on a 9x9 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then set the current counter of the game to -1 then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns step forward or remove pieces at to then step forward-right or forward-left or if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again and set the current counter of the game to -1.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 7 row.
                Place a Rook for player one on sites: A1 and I1.
                Place a Knight for player one on sites: B1 and H1.
                Place a Bishop for player one on sites: C1 and G1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A9 and I9.
                Place a Knight for player two on sites: B9 and H9.
                Place a Bishop for player two on sites: C9 and G9.
                Place a Queen for player two on site D9.
                Place a King for player two on site E9..
                Rules: 
                Move one of your pieces.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If 1 is equal to the number of pieces owned by Player the next player, it's a draw.
                
        "))
        (useFor "Ruleset/Chess (Siberia) (Ludii 10) (Reconstructed)" (id "3833"))
        (useFor "Ruleset/Chess (Siberia) (Ludii 11) (Reconstructed)" (rules "The game Chess (Siberia) is played by two players on a 9x9 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent.
                Knights leap a piece to not is a friend.
                Pawns step forward or remove pieces at to then step forward-right or forward-left or if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 7 row.
                Place a Rook for player one on sites: A1 and I1.
                Place a Knight for player one on sites: B1 and H1.
                Place a Bishop for player one on sites: C1 and G1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A9 and I9.
                Place a Knight for player two on sites: B9 and H9.
                Place a Bishop for player two on sites: C9 and G9.
                Place a Queen for player two on site D9.
                Place a King for player two on site E9..
                Rules: 
                Move one of your pieces.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If 1 is equal to the number of pieces owned by Player the next player, it's a draw.
                
        "))
        (useFor "Ruleset/Chess (Siberia) (Ludii 11) (Reconstructed)" (id "3834"))
        (version "1.3.10")
        (classification "board/war/replacement/checkmate/chaturanga/reconstruction/done")
        (credit "Eric Piette")
        (origin "This game was played in Siberia, around 1898.")
        }
    )
    
    (graphics {
        (board Colour Phase0 (colour 223 178 110))
        (board Colour InnerEdges (colour Black))
        (board Colour OuterEdges (colour Black))
    })
    
    (recon {
        (concept "NumComponentsTypePerPlayer" minValue:4 maxValue:20)
    })
    
)

