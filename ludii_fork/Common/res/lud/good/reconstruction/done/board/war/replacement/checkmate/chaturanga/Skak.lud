(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King" Next)))))
)

(define "HasNeverMoved"
    (= (state at:(mapEntry #1 (mover))) 1) 
)

(define "PieceHasMoved"
    (set State at:#1 0) 
)

(define "RememberPieceHasMoved"
    (then 
        (if 
            (= (state at:(last To)) 1) 
            ("PieceHasMoved" (last To))
        ) 
    ) 
)

(define "CaptureToPiece"
    (apply 
        (if ("IsEnemyAt" (to))
            (remove 
                (to) 
            )
        )
    ) 
)

(define "KingNotCheckedAndToEmpty"
    (and 
        (is Empty (to)) 
        (not ("IsInCheck" "King" Mover at:(to)))
    ) 
)

(define "DecideToCastle"
    (move
        Slide 
        (from (mapEntry #1 (mover))) 
        #2 
        (between 
            (exact #3) 
            if:#4
        ) 
        (to 
            if:True
            (apply ("PieceHasMoved" (from)))
        )
        #5
    )
)

(define "CastleRook"
    (slide 
        (from (mapEntry #1 (mover))) 
        #2 
        (between 
            (exact #3) 
            if:#4
        ) 
        (to 
            if:True
            (apply ("PieceHasMoved" (from)))
        )
    )
)

(define "SmallCastling"
    ("DecideToCastle" "King" E 2 "KingNotCheckedAndToEmpty" (then ("CastleRook" "RookRight" W 2 True)))
)

(define "BigCastling"
    ("DecideToCastle" "King" W 2 "KingNotCheckedAndToEmpty" (then ("CastleRook" "RookLeft" E 3 True)))
)

(define "SetEnPassantLocation"
    (then 
        (set Pending (ahead (last To) Backward))
    )
)

(define "InLocationEnPassant"
    (and 
        (is Pending) 
        (= (to) (value Pending)) 
    )
)

(define "EnPassant"
    (move
        Step 
        (directions {FR FL}) 
        (to if:"InLocationEnPassant") 
        (then 
            (remove 
                (ahead (last To) Backward)
            )
        )
    )
)

(define "CaptureForwardDiagonal"
    (move
        Step 
        (directions {FR FL}) 
        (to 
            if:("IsEnemyAt" (to)) 
            (apply (remove (to)))
        )
    )
)

//------------------------------------------------------------------------------

(game "Skak"
    <Variant>
)

//------------------------------------------------------------------------------

(option "Variant" <Variant> args:{ <variant> }
    {
    (item "Skak (Ludii 1)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 8)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (set Pending 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL}
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL}
                        )
                        
                        (to if:
                            (and 
                                (is Pending)
                                
                                (= 
                                    (to)
                                    
                                    (value Pending)
                                )
                            )
                        )
                        
                        (then 
                            (remove 
                                (ahead 
                                    (last To)
                                Backward)
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (is In 
                                (last To)
                                
                                (sites Mover "Promotion")
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F}
                    { F F L F}
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E8")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A8")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "H1")
                
                (pair 2 "H8")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 6)
                )
                
                (place "Rook1" { "A1" "H1"}
                state:1)
                
                (place "Knight1" { "B1" "G1"}
                )
                
                (place "Bishop1" { "C1" "F1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1" state:1)
                
                (place "Rook2" { "A8" "H8"}
                state:1)
                
                (place "Knight2" { "B8" "G8"}
                )
                
                (place "Bishop2" { "C8" "F8"}
                )
                
                (place "Queen2" coord:"D8")
                
                (place "King2" coord:"E8" state:1)
                }
            )
            
            (play 
                (if 
                    (is Prev Mover)
                    
                    (move Promote 
                        (last To)
                        
                        (piece { "Queen" "Knight" "Bishop" "Rook"}
                        )
                    Mover)
                    
                    (do 
                        (or 
                            (forEach Piece)
                            
                            (if 
                                (and 
                                    (= 
                                        (state at:
                                            (mapEntry "King" 
                                                (mover)
                                            )
                                        )
                                    1)
                                    
                                    (not 
                                        (is Threatened 
                                            (id "King" Mover)
                                        )
                                    )
                                )
                                
                                (or 
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookLeft" 
                                                        (mover)
                                                    )
                                                )
                                            1)
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            W 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookRight" 
                                                        (mover)
                                                    )
                                                )
                                            1)
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            E 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        ifAfterwards:
                        (not 
                            (is Threatened 
                                (id "King" Mover)
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (= 1 
                        (count Pieces Next)
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (no Moves Mover)
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Skak (Ludii 1) ruleset.")
    
    (item "Skak (Ludii 2)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 8)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (set Pending 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL}
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL}
                        )
                        
                        (to if:
                            (and 
                                (is Pending)
                                
                                (= 
                                    (to)
                                    
                                    (value Pending)
                                )
                            )
                        )
                        
                        (then 
                            (remove 
                                (ahead 
                                    (last To)
                                Backward)
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (is In 
                                (last To)
                                
                                (sites Mover "Promotion")
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F}
                    { F F L F}
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E8")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A8")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "H1")
                
                (pair 2 "H8")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 6)
                )
                
                (place "Rook1" { "A1" "H1"}
                )
                
                (place "Knight1" { "B1" "G1"}
                )
                
                (place "Bishop1" { "C1" "F1"}
                )
                
                (place "Queen1" coord:"D1" state:1)
                
                (place "King1" coord:"E1" state:1)
                
                (place "Rook2" { "A8" "H8"}
                )
                
                (place "Knight2" { "B8" "G8"}
                )
                
                (place "Bishop2" { "C8" "F8"}
                )
                
                (place "Queen2" coord:"D8" state:1)
                
                (place "King2" coord:"E8" state:1)
                }
            )
            
            (play 
                (if 
                    (is Prev Mover)
                    
                    (move Promote 
                        (last To)
                        
                        (piece { "Queen" "Knight" "Bishop" "Rook"}
                        )
                    Mover)
                    
                    (do 
                        (or 
                            (forEach Piece)
                            
                            (if 
                                (and 
                                    (= 
                                        (state at:
                                            (mapEntry "King" 
                                                (mover)
                                            )
                                        )
                                    1)
                                    
                                    (not 
                                        (is Threatened 
                                            (id "King" Mover)
                                        )
                                    )
                                )
                                
                                (or 
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookLeft" 
                                                        (mover)
                                                    )
                                                )
                                            1)
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            W 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookRight" 
                                                        (mover)
                                                    )
                                                )
                                            1)
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            E 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        ifAfterwards:
                        (not 
                            (is Threatened 
                                (id "King" Mover)
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (= 1 
                        (count Pieces Next)
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (no Moves Mover)
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Skak (Ludii 2) ruleset.")
    
    (item "Skak (Ludii 3)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 8)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (set Pending 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL}
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL}
                        )
                        
                        (to if:
                            (and 
                                (is Pending)
                                
                                (= 
                                    (to)
                                    
                                    (value Pending)
                                )
                            )
                        )
                        
                        (then 
                            (remove 
                                (ahead 
                                    (last To)
                                Backward)
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (is In 
                                (last To)
                                
                                (sites Mover "Promotion")
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F}
                    { F F L F}
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E8")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A8")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "H1")
                
                (pair 2 "H8")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Bishop1" 
                    (sites { "C1" "F1"}
                    )
                )
                
                (place "Rook1" 
                    (sites { "C2" "F2"}
                    )
                )
                
                (place "Knight1" 
                    (sites { "D2" "E2"}
                    )
                )
                
                (place "King1" coord:"E1")
                
                (place Stack "Pawn1" 
                    (sites Row 2)
                )
                
                (place Stack "Queen1" 
                    (sites { "D3"}
                    )
                )
                
                (place "Bishop2" 
                    (sites { "C8" "F8"}
                    )
                )
                
                (place "Rook2" 
                    (sites { "C7" "F7"}
                    )
                )
                
                (place "Knight2" 
                    (sites { "D7" "E7"}
                    )
                )
                
                (place "King2" coord:"E8")
                
                (place Stack "Pawn2" 
                    (sites Row 5)
                )
                
                (place Stack "Queen2" 
                    (sites { "D6"}
                    )
                )
                }
            )
            
            (play 
                (if 
                    (is Prev Mover)
                    
                    (move Promote 
                        (last To)
                        
                        (piece { "Queen" "Knight" "Bishop" "Rook"}
                        )
                    Mover)
                    
                    (do 
                        (or 
                            (forEach Piece)
                            
                            (if 
                                (and 
                                    (= 
                                        (state at:
                                            (mapEntry "King" 
                                                (mover)
                                            )
                                        )
                                    1)
                                    
                                    (not 
                                        (is Threatened 
                                            (id "King" Mover)
                                        )
                                    )
                                )
                                
                                (or 
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookLeft" 
                                                        (mover)
                                                    )
                                                )
                                            1)
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            W 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookRight" 
                                                        (mover)
                                                    )
                                                )
                                            1)
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            E 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        ifAfterwards:
                        (not 
                            (is Threatened 
                                (id "King" Mover)
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (= 1 
                        (count Pieces Next)
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (no Moves Mover)
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Skak (Ludii 3) ruleset.")
    
    (item "Skak (Ludii 4)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 8)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (set Pending 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL}
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL}
                        )
                        
                        (to if:
                            (and 
                                (is Pending)
                                
                                (= 
                                    (to)
                                    
                                    (value Pending)
                                )
                            )
                        )
                        
                        (then 
                            (remove 
                                (ahead 
                                    (last To)
                                Backward)
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (is In 
                                (last To)
                                
                                (sites Mover "Promotion")
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F}
                    { F F L F}
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E8")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A8")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "H1")
                
                (pair 2 "H8")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites Row 1)
                )
                
                (place "Pawn2" 
                    (sites Row 6)
                )
                
                (place "Rook1" { "A1" "H1"}
                )
                
                (place "Knight1" { "B1" "G1"}
                )
                
                (place "Bishop1" { "C1" "F1"}
                )
                
                (place "Queen1" coord:"D1")
                
                (place "King1" coord:"E1")
                
                (place "Rook2" { "A8" "H8"}
                )
                
                (place "Knight2" { "B8" "G8"}
                )
                
                (place "Bishop2" { "C8" "F8"}
                )
                
                (place "Queen2" coord:"D8")
                
                (place "King2" coord:"E8")
                }
            )
            
            (play 
                (if 
                    (is Prev Mover)
                    
                    (move Promote 
                        (last To)
                        
                        (piece { "Queen" "Knight" "Bishop" "Rook"}
                        )
                    Mover)
                    
                    (do 
                        (or 
                            (forEach Piece)
                            
                            (if 
                                (and 
                                    (= 
                                        (state at:
                                            (mapEntry "King" 
                                                (mover)
                                            )
                                        )
                                    1)
                                    
                                    (not 
                                        (is Threatened 
                                            (id "King" Mover)
                                        )
                                    )
                                )
                                
                                (or 
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookLeft" 
                                                        (mover)
                                                    )
                                                )
                                            1)
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            W 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookRight" 
                                                        (mover)
                                                    )
                                                )
                                            1)
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            E 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        ifAfterwards:
                        (not 
                            (is Threatened 
                                (id "King" Mover)
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (= 1 
                        (count Pieces Next)
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (no Moves Mover)
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Skak (Ludii 4) ruleset.")
    
    (item "Skak (Ludii 5)" <
        
        (players { 
            (player N)
            
            (player S)
            }
        )
        
        (equipment { 
            (board 
                (square 8)
            )
            
            (piece "Pawn" Each 
                (or { 
                    (if 
                        (is In 
                            (from)
                            
                            (sites Start 
                                (piece 
                                    (what at:
                                        (from)
                                    )
                                )
                            )
                        )
                        
                        (move Slide Forward 
                            (between 
                                (exact 2)
                                if:
                                (is Empty 
                                    (between)
                                )
                            )
                            
                            (to if:
                                (is Empty 
                                    (to)
                                )
                            )
                            
                            (then 
                                (set Pending 
                                    (ahead 
                                        (last To)
                                    Backward)
                                )
                            )
                        )
                    )
                    
                    (move Step Forward 
                        (to if:
                            (is Empty 
                                (to)
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL}
                        )
                        
                        (to if:
                            (is Enemy 
                                (who at:
                                    (to)
                                )
                            )
                            
                            (apply 
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (move Step 
                        (directions { FR FL}
                        )
                        
                        (to if:
                            (and 
                                (is Pending)
                                
                                (= 
                                    (to)
                                    
                                    (value Pending)
                                )
                            )
                        )
                        
                        (then 
                            (remove 
                                (ahead 
                                    (last To)
                                Backward)
                            )
                        )
                    )
                    }
                    
                    (then 
                        (if 
                            (is In 
                                (last To)
                                
                                (sites Mover "Promotion")
                            )
                            
                            (moveAgain)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move Slide Orthogonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "King" Each 
                (move Step 
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                    
                    (then 
                        (if 
                            (= 
                                (state at:
                                    (last To)
                                )
                            1)
                            
                            (set State at:
                                (last To)
                            0)
                        )
                    )
                )
            )
            
            (piece "Bishop" Each 
                (move Slide Diagonal 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Knight" Each 
                (move Leap { { F F R F}
                    { F F L F}
                    }
                    
                    (to if:
                        (not 
                            (is Friend 
                                (who at:
                                    (to)
                                )
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (piece "Queen" Each 
                (move Slide 
                    (to if:
                        (is Enemy 
                            (who at:
                                (to)
                            )
                        )
                        
                        (apply 
                            (if 
                                (is Enemy 
                                    (who at:
                                        (to)
                                    )
                                )
                                
                                (remove 
                                    (to)
                                )
                            )
                        )
                    )
                )
            )
            
            (map "King" { 
                (pair 1 "E1")
                
                (pair 2 "E8")
                }
            )
            
            (map "RookLeft" { 
                (pair 1 "A1")
                
                (pair 2 "A8")
                }
            )
            
            (map "RookRight" { 
                (pair 1 "H1")
                
                (pair 2 "H8")
                }
            )
            
            (regions "Promotion" P1 
                (sites Top)
            )
            
            (regions "Promotion" P2 
                (sites Bottom)
            )
            }
        )
        
        (rules 
            (start { 
                (place "Pawn1" 
                    (sites { "A2" "D2" "E2" "H2"}
                    )
                state:1)
                
                (place "Pawn2" 
                    (sites { "A7" "D7" "E7" "H7"}
                    )
                state:1)
                
                (place "Pawn1" 
                    (sites { "B2" "C2" "F2" "G2"}
                    )
                )
                
                (place "Pawn2" 
                    (sites { "B7" "C7" "F7" "G7"}
                    )
                )
                
                (place "Rook1" { "A1" "H1"}
                )
                
                (place "Knight1" { "B1" "G1"}
                )
                
                (place "Bishop1" { "C1" "F1"}
                )
                
                (place "Queen1" coord:"D1" state:1)
                
                (place "King1" coord:"E1" state:1)
                
                (place "Rook2" { "A8" "H8"}
                )
                
                (place "Knight2" { "B8" "G8"}
                )
                
                (place "Bishop2" { "C8" "F8"}
                )
                
                (place "Queen2" coord:"D8" state:1)
                
                (place "King2" coord:"E8" state:1)
                }
            )
            
            (play 
                (if 
                    (is Prev Mover)
                    
                    (move Promote 
                        (last To)
                        
                        (piece { "Queen" "Knight" "Bishop" "Rook"}
                        )
                    Mover)
                    
                    (do 
                        (or 
                            (forEach Piece)
                            
                            (if 
                                (and 
                                    (= 
                                        (state at:
                                            (mapEntry "King" 
                                                (mover)
                                            )
                                        )
                                    1)
                                    
                                    (not 
                                        (is Threatened 
                                            (id "King" Mover)
                                        )
                                    )
                                )
                                
                                (or 
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookLeft" 
                                                        (mover)
                                                    )
                                                )
                                            1)
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            W 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookLeft" 
                                                            (mover)
                                                        )
                                                    )
                                                    E 
                                                    (between 
                                                        (exact 3)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                    
                                    (if 
                                        (and 
                                            (= 
                                                (state at:
                                                    (mapEntry "RookRight" 
                                                        (mover)
                                                    )
                                                )
                                            1)
                                            
                                            (can Move 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                        if:
                                                        (is Empty 
                                                            (to)
                                                        )
                                                    )
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                        
                                        (move Slide 
                                            (from 
                                                (mapEntry "King" 
                                                    (mover)
                                                )
                                            )
                                            E 
                                            (between 
                                                (exact 2)
                                                if:
                                                (and 
                                                    (is Empty 
                                                        (to)
                                                    )
                                                    
                                                    (not 
                                                        (is Threatened 
                                                            (id "King" Mover)
                                                            at:
                                                            (to)
                                                        )
                                                    )
                                                )
                                            )
                                            
                                            (to if:True 
                                                (apply 
                                                    (set State at:
                                                        (from)
                                                    0)
                                                )
                                            )
                                            
                                            (then 
                                                (slide 
                                                    (from 
                                                        (mapEntry "RookRight" 
                                                            (mover)
                                                        )
                                                    )
                                                    W 
                                                    (between 
                                                        (exact 2)
                                                    if:True)
                                                    
                                                    (to if:True 
                                                        (apply 
                                                            (set State at:
                                                                (from)
                                                            0)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                        ifAfterwards:
                        (not 
                            (is Threatened 
                                (id "King" Mover)
                            )
                        )
                    )
                )
            )
            
            (end { 
                (if 
                    (and 
                        (is Threatened 
                            (id "King" Next)
                        )
                        
                        (not 
                            (can Move 
                                (do 
                                    (forEach Piece Next)
                                    ifAfterwards:
                                    (not 
                                        (is Threatened 
                                            (id "King" Next)
                                        )
                                    )
                                )
                            )
                        )
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (= 1 
                        (count Pieces Next)
                    )
                    
                    (result Mover Win)
                )
                
                (if 
                    (no Moves Mover)
                    
                    (result Mover Draw)
                )
                }
            )
        )
        
    > "The Skak (Ludii 5) ruleset.")
    
    (item "Incomplete"
        <
        ("TwoPlayersNorthSouth") 
        (equipment { 
            (board (square 8)) 
            
            (piece "Pawn" Each 
                (or {
                    (if (is In (from) (sites Start (piece (what at:(from)))))
                        ("DoubleStepForwardToEmpty" "SetEnPassantLocation")
                    )
                    "StepForwardToEmpty" 
                    "CaptureForwardDiagonal"
                    "EnPassant"
                    }
                    (then
                        (if (is In (last To) (sites Mover "Promotion")) 
                            (moveAgain)
                        )
                    )
                )
            )
            
            (piece "Rook" Each 
                (move
                    Slide 
                    Orthogonal 
                    (to 
                        if:("IsEnemyAt" (to)) 
                        "CaptureToPiece"
                    ) 
                    "RememberPieceHasMoved"
                )
            )
            (piece "King" Each 
                (move
                    Step 
                    (to 
                        if:(not ("IsFriendAt" (to))) 
                        "CaptureToPiece"
                    ) 
                    "RememberPieceHasMoved"
                )
            )
            (piece "Bishop" Each 
                (move
                    Slide 
                    Diagonal 
                    (to 
                        if:("IsEnemyAt" (to)) 
                        "CaptureToPiece"
                    ) 
                )
            )
            (piece "Knight" Each 
                (move
                    Leap 
                    "KnightWalk" 
                    (to 
                        if:(not ("IsFriendAt" (to))) 
                        "CaptureToPiece"
                    ) 
                )
            )
            (piece "Queen" Each 
                (move
                    Slide 
                    (to 
                        if:("IsEnemyAt" (to)) 
                        "CaptureToPiece"
                    ) 
                ) 
            )
            
            (map "King" {(pair 1 "E1") (pair 2 "E8")})
            (map "RookLeft" {(pair 1 "A1") (pair 2 "A8")})
            (map "RookRight" {(pair 1 "H1") (pair 2 "H8")})
            (regions "Promotion" P1 (sites Top))
            (regions "Promotion" P2 (sites Bottom))
        }) 
        (rules 
            (start [#])
            
            (play 
                (if "SameTurn"
                    (move Promote (last To) (piece {"Queen" "Knight" "Bishop" "Rook"}) Mover)
                    (do 
                        (or 
                            (forEach Piece)
                            (if (and 
                                    ("HasNeverMoved" "King")
                                    (not ("IsInCheck" "King" Mover)) 
                                )
                                (or
                                    (if (and 
                                            ("HasNeverMoved" "RookLeft")
                                            (can Move ("CastleRook" "RookLeft" E 3 (is Empty (to))))
                                        )
                                        "BigCastling"
                                    )
                                    (if (and 
                                            ("HasNeverMoved" "RookRight")
                                            (can Move ("CastleRook" "RookRight" W 2 (is Empty (to))))
                                        )
                                        "SmallCastling"
                                    )
                                )
                            )
                        )
                        ifAfterwards:(not ("IsInCheck" "King" Mover))
                    )
                )
            )
            
            (end {
                (if (and 
                        ("IsInCheck" "King" Next)
                        ("NextCanNotMove")
                    ) 
                    (result Mover Win)
                ) 
                (if (= 1 (count Pieces Next)) (result Mover Win))
                (if (no Moves Mover) (result Mover Draw)) 
            })
        )
        >
        "The incomplete ruleset."
    )
    
})

//------------------------------------------------------------------------------

(rulesets {
    
    (ruleset "Ruleset/Skak (Ludii 1) (Reconstructed)" {
        "Variant/Skak (Ludii 1)"
    })
    (ruleset "Ruleset/Skak (Ludii 2) (Reconstructed)" {
        "Variant/Skak (Ludii 2)"
    })
    (ruleset "Ruleset/Skak (Ludii 3) (Reconstructed)" {
        "Variant/Skak (Ludii 3)"
    })
    (ruleset "Ruleset/Skak (Ludii 4) (Reconstructed)" {
        "Variant/Skak (Ludii 4)"
    })
    (ruleset "Ruleset/Skak (Ludii 5) (Reconstructed)" {
        "Variant/Skak (Ludii 5)"
    })
    
    (ruleset "Ruleset/Skak (Incomplete)" {
        "Variant/Incomplete"
    })
    
})

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "Skak is the form of Chess played in Iceland. It maintains an old form of winning by the \"bare king.\"")
        (useFor "Ruleset/Skak (Incomplete)" (rules "8x8 board. The pieces move as follows, with the number per player: 1 x King: moves one space orthogonally or diagonally. 1 x Queen: moves any distance diagonally or orthogonally. 2 x Rook: Any number of spaces orthogonally. 2 x Bishop: moves any distance diagonally 2 x Knight: Moves as a chess knight. 8 x Pawn: Moves one space forward orthogonally; one space forward diagonally to capture. Promoted when reaching the eighth rank. Castling and en passant are allowed. An opponent's piece is captured by moving a player's own piece onto a space occupied by the opponent's piece. When a King can be captured on the next turn by an opponent's piece, it is in check. The King must not be in check at the end of the player's turn. If this is not possible, it is checkmate and the opponent wins. Stalemate is a draw. When a player captures all of their opponent's pieces except the King are captured, the opponent loses, though this is considered a lesser win.
        "))
        (useFor "Ruleset/Skak (Incomplete)" (source "Murray 1913: 468-469."))
        (useFor "Ruleset/Skak (Incomplete)" (id "1334"))
        (useFor "Ruleset/Skak (Ludii 1) (Reconstructed)" (rules "The game Skak is played by two players on a 8x8 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward or remove pieces at to then step forward-right or forward-left or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 6 row.
                Place a Rook for player one on sites: A1 and H1.
                Place a Knight for player one on sites: B1 and G1.
                Place a Bishop for player one on sites: C1 and F1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A8 and H8.
                Place a Knight for player two on sites: B8 and G8.
                Place a Bishop for player two on sites: C8 and F8.
                Place a Queen for player two on site D8.
                Place a King for player two on site E8..
                Rules: 
                If in the same turn, a piece of the moving player the to location of the last move, this piece can promote into Queen, Knight, Bishop or Rook, else move one of your pieces or if State at King of current moving player is equal to 1 and not King of the moving player is threatened, if State at RookLeft of current moving player is equal to 1 and can move slide from RookLeft of current moving player in the east direction through empty, slide from King of current moving player in the west direction through empty and not King of the moving player is threatened then slide from RookLeft of current moving player in the east direction through true or if State at RookRight of current moving player is equal to 1 and can move slide from RookRight of current moving player in the west direction through empty, slide from King of current moving player in the east direction through empty and not King of the moving player is threatened then slide from RookRight of current moving player in the west direction through true.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If 1 is equal to the number of pieces owned by Player the next player, the moving player wins If the moving player cannot move, it's a draw.
                
        "))
        (useFor "Ruleset/Skak (Ludii 1) (Reconstructed)" (id "3084"))
        (useFor "Ruleset/Skak (Ludii 2) (Reconstructed)" (rules "The game Skak is played by two players on a 8x8 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward or remove pieces at to then step forward-right or forward-left or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 6 row.
                Place a Rook for player one on sites: A1 and H1.
                Place a Knight for player one on sites: B1 and G1.
                Place a Bishop for player one on sites: C1 and F1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A8 and H8.
                Place a Knight for player two on sites: B8 and G8.
                Place a Bishop for player two on sites: C8 and F8.
                Place a Queen for player two on site D8.
                Place a King for player two on site E8..
                Rules: 
                If in the same turn, a piece of the moving player the to location of the last move, this piece can promote into Queen, Knight, Bishop or Rook, else move one of your pieces or if State at King of current moving player is equal to 1 and not King of the moving player is threatened, if State at RookLeft of current moving player is equal to 1 and can move slide from RookLeft of current moving player in the east direction through empty, slide from King of current moving player in the west direction through empty and not King of the moving player is threatened then slide from RookLeft of current moving player in the east direction through true or if State at RookRight of current moving player is equal to 1 and can move slide from RookRight of current moving player in the west direction through empty, slide from King of current moving player in the east direction through empty and not King of the moving player is threatened then slide from RookRight of current moving player in the west direction through true.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If 1 is equal to the number of pieces owned by Player the next player, the moving player wins If the moving player cannot move, it's a draw.
                
        "))
        (useFor "Ruleset/Skak (Ludii 2) (Reconstructed)" (id "3085"))
        (useFor "Ruleset/Skak (Ludii 3) (Reconstructed)" (rules "The game Skak is played by two players on a 8x8 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward or remove pieces at to then step forward-right or forward-left or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Bishop for player one at the cells with coordinates [C1, F1].
                Place a Rook for player one at the cells with coordinates [C2, F2].
                Place a Knight for player one at the cells with coordinates [D2, E2].
                Place a King for player one on site E1.
                Place stack of [Pawn1] at cell each cell of the 2 row
                Place stack of [Queen1] at cell the cells with coordinates [D3]
                Place a Bishop for player two at the cells with coordinates [C8, F8].
                Place a Rook for player two at the cells with coordinates [C7, F7].
                Place a Knight for player two at the cells with coordinates [D7, E7].
                Place a King for player two on site E8.
                Place stack of [Pawn2] at cell each cell of the 5 row
                Place stack of [Queen2] at cell the cells with coordinates [D6].
                Rules: 
                If in the same turn, a piece of the moving player the to location of the last move, this piece can promote into Queen, Knight, Bishop or Rook, else move one of your pieces or if State at King of current moving player is equal to 1 and not King of the moving player is threatened, if State at RookLeft of current moving player is equal to 1 and can move slide from RookLeft of current moving player in the east direction through empty, slide from King of current moving player in the west direction through empty and not King of the moving player is threatened then slide from RookLeft of current moving player in the east direction through true or if State at RookRight of current moving player is equal to 1 and can move slide from RookRight of current moving player in the west direction through empty, slide from King of current moving player in the east direction through empty and not King of the moving player is threatened then slide from RookRight of current moving player in the west direction through true.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If 1 is equal to the number of pieces owned by Player the next player, the moving player wins If the moving player cannot move, it's a draw.
                
        "))
        (useFor "Ruleset/Skak (Ludii 3) (Reconstructed)" (id "3086"))
        (useFor "Ruleset/Skak (Ludii 4) (Reconstructed)" (rules "The game Skak is played by two players on a 8x8 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward or remove pieces at to then step forward-right or forward-left or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at each cell of the 1 row.
                Place a Pawn for player two at each cell of the 6 row.
                Place a Rook for player one on sites: A1 and H1.
                Place a Knight for player one on sites: B1 and G1.
                Place a Bishop for player one on sites: C1 and F1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A8 and H8.
                Place a Knight for player two on sites: B8 and G8.
                Place a Bishop for player two on sites: C8 and F8.
                Place a Queen for player two on site D8.
                Place a King for player two on site E8..
                Rules: 
                If in the same turn, a piece of the moving player the to location of the last move, this piece can promote into Queen, Knight, Bishop or Rook, else move one of your pieces or if State at King of current moving player is equal to 1 and not King of the moving player is threatened, if State at RookLeft of current moving player is equal to 1 and can move slide from RookLeft of current moving player in the east direction through empty, slide from King of current moving player in the west direction through empty and not King of the moving player is threatened then slide from RookLeft of current moving player in the east direction through true or if State at RookRight of current moving player is equal to 1 and can move slide from RookRight of current moving player in the west direction through empty, slide from King of current moving player in the east direction through empty and not King of the moving player is threatened then slide from RookRight of current moving player in the west direction through true.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If 1 is equal to the number of pieces owned by Player the next player, the moving player wins If the moving player cannot move, it's a draw.
                
        "))
        (useFor "Ruleset/Skak (Ludii 4) (Reconstructed)" (id "3087"))
        (useFor "Ruleset/Skak (Ludii 5) (Reconstructed)" (rules "The game Skak is played by two players on a 8x8 rectangle board with square tiling.
                Regions:
                Promotion: the top sites of the board for P1
                Promotion: the bottom sites of the board for P2 
                All players play with Pawns, Rooks, Kings, Bishops, Knights and Queens.
                Rules for Pieces:
                Bishops slide from the location of the piece in the diagonal direction through [between] is in the set of empty cells.
                Kings if there is an enemy Player at to, remove pieces at to then step adjacent then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Knights leap a piece to not is a friend.
                Pawns if the location of the piece is in start position, slide from the location of the piece in the forward direction through empty then set the site  the Cell 1 steps ahead of the to location of the last move in the direction backward to pending or step forward or remove pieces at to then step forward-right or forward-left or step forward-right or forward-left then remove pieces at  the Cell 1 steps ahead of the to location of the last move in the direction backward if the to location of the last move is in Promotion or Promotion, move again.
                Queens slide from the location of the piece in the adjacent direction through [between] is in the set of empty cells.
                Rooks slide from the location of the piece in the orthogonal direction through [between] is in the set of empty cells then if State at the to location of the last move is equal to 1, set the state of the Cell the to location of the last move to 0.
                Players take turns moving.
                Setup:
                Place a Pawn for player one at the cells with coordinates [A2, D2, E2, H2].
                Place a Pawn for player two at the cells with coordinates [A7, D7, E7, H7].
                Place a Pawn for player one at the cells with coordinates [B2, C2, F2, G2].
                Place a Pawn for player two at the cells with coordinates [B7, C7, F7, G7].
                Place a Rook for player one on sites: A1 and H1.
                Place a Knight for player one on sites: B1 and G1.
                Place a Bishop for player one on sites: C1 and F1.
                Place a Queen for player one on site D1.
                Place a King for player one on site E1.
                Place a Rook for player two on sites: A8 and H8.
                Place a Knight for player two on sites: B8 and G8.
                Place a Bishop for player two on sites: C8 and F8.
                Place a Queen for player two on site D8.
                Place a King for player two on site E8..
                Rules: 
                If in the same turn, a piece of the moving player the to location of the last move, this piece can promote into Queen, Knight, Bishop or Rook, else move one of your pieces or if State at King of current moving player is equal to 1 and not King of the moving player is threatened, if State at RookLeft of current moving player is equal to 1 and can move slide from RookLeft of current moving player in the east direction through empty, slide from King of current moving player in the west direction through empty and not King of the moving player is threatened then slide from RookLeft of current moving player in the east direction through true or if State at RookRight of current moving player is equal to 1 and can move slide from RookRight of current moving player in the west direction through empty, slide from King of current moving player in the east direction through empty and not King of the moving player is threatened then slide from RookRight of current moving player in the west direction through true.
                Aim: 
                If King of the next player is threatened and not can move move one of your pieces, the moving player wins If 1 is equal to the number of pieces owned by Player the next player, the moving player wins If the moving player cannot move, it's a draw.
                
        "))
        (useFor "Ruleset/Skak (Ludii 5) (Reconstructed)" (id "3088"))
        (source "Murray 1913: 468-469.")
        (version "1.3.10")
        (classification "board/war/replacement/checkmate/chaturanga/reconstruction/done")
        (credit "Eric Piette")
        (origin "This game was played in Iceland, around 1892.")
        }
    )
    
    (graphics {
        (show Check "King")
        (piece Scale "Pawn" 0.825)
        (piece Families {"Defined" "Microsoft" "Pragmata" "Symbola"})
        (board Style Chess)
    })
    
    (recon {
        (concept "NumStartComponents" 32)
    })
    
)

