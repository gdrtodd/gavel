4x4 board. One player plays as four tigers, which begin the board placed in the four corner spaces. The other player plays as twelve oxen. The first move is made by placing one of the oxen on an empty space, followed by a move by the tiger closest to the ox. Players continue alternating moves, the oxen player placing an ox and the tiger player moving a tiger. When moving, pieces move to an empty adjacent spot orthogonally. Once all of the oxen are placed, the players alternate turns moving their pieces on the board. Pieces may capture another piece by hopping over an adjacent opponent's piece to an empty space immediately on the opposite side of it. Tigers capture orthogonally, oxen capture diagonally. Oxen may also capture a tiger by blocking it from being able to move. The oxen win by reducing the tigers to two.
(game "Len Cua Kin Ngoa" (players 2) (equipment {(board (square 4)) (hand P1) (piece "Ox" P1 (or (move Hop Diagonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step Orthogonal (to if:(is Empty (to)))))) (piece "Tiger" P2 (or (move Hop Orthogonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step Orthogonal (to if:(is Empty (to))))))}) (rules (start {(place "Ox1" (handSite P1) count:12) (place "Tiger2" (sites Corners))}) phases:{(phase "Placement" P1 (play (move (from (handSite P1)) (to (sites Empty)) (then (forEach Site (sites Occupied by:Next) (if (not (can Move (or (step (from (site)) Orthogonal (to if:(is Empty (to)))) (hop (from (site)) Orthogonal (between if:(equals (who at:(between)) P1) (apply (remove (between)))) (to if:(is Empty (to))))))) (remove (site))))))) (nextPhase (all Sites (sites Hand P1) if:(equals 0 (count Cell at:(site)))) "MovementP1")) (phase "MovementP1" P1 (play (forEach Piece (then (forEach Site (sites Occupied by:Next) (if (not (can Move (or (step (from (site)) Orthogonal (to if:(is Empty (to)))) (hop (from (site)) Orthogonal (between if:(equals (who at:(between)) P1) (apply (remove (between)))) (to if:(is Empty (to))))))) (remove (site)))))))) (phase "FirstTigerMovement" P2 (play (forEach Piece (if (equals (count Steps (from) (last To)) (min (results from:(last To) to:(sites Corners) (count Steps (from) (to))))) (or (move Hop Orthogonal (between if:(is Enemy (who at:(between))) (apply (remove (between)))) (to if:(is Empty (to)))) (move Step (to if:(is Empty (to)))))))) (nextPhase Mover "MovementP2")) (phase "MovementP2" P2 (play (forEach Piece)))} (end {(if (no Pieces P1) (result P2 Win)) (if (ge 2 (count Pieces P2)) (result P1 Win))}))) 
