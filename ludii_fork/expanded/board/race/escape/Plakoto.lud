Played on a standard Backgammon board. Each player starts with fifteen pieces on the starting point of their track. Two six-sided dice. The pieces move around the board in opposite directions in a horseshoe-shaped track. Each player rolls one die. The player who rolls highest goes first. The player then rolls two die to begin play. The numbers on the two dice constitute separate moves; i.e. a piece must move the full value of an individual die. One piece may move the combined total of the two die. Doubles are played twice. A player must use both numbers of a roll if possible, or all four numbers in the case of doubles. If a player lands on a point occupied by a single opposing piece, the opponentâ€™s piece is trapped until the trapping player removes their piece. A piece may not be moved to a point occupied by two or more of the opponent's pieces. The player cannot move a piece to a point where the opponent has trapped another of the player's pieces. Once a player has moved all fifteen of their pieces into the their home section of the board (that is, the six points at the end of the player's track), the player may begin bearing off. A player cannot bear off when the player has one or more pieces trapped inside the their home section. A player bears off by rolling a number equal to the number of points left in the track of a piece, plus one. If there is no piece on the point indicated by the roll, then the player must make a legal move using a piece that will not remove it from the board. If there are no pieces available to fulfill this condition, the player must remove a piece that is furthest from the goal. The first player to bear off all fifteen pieces wins the game. If the last piece belonging to player remains in the starting position is trapped by the opponent before it has left the starting position, the player loses. The only exception is if the opponent still has pieces on their starting position. A game in which both players' respective pieces in the starting position are trapped is a draw. In Tavli, in subsequent rounds, the winner of the previous round plays first. The game is also typically played with a point system, where points are lost based on the winning conditions. Players lose two points by losing if they haven't yet borne off any of their pieces, or one point if they have borne off at least one piece. A player who loses because their final piece in the starting position was trapped loses two points.
(game "Plakoto" (players 2) (equipment {(board (rectangle 2 13) {(track "Track1" {12 11 10 9 8 7 5 4 3 2 1 0 13 14 15 16 17 18 20 21 22 23 24 25} P1 directed:True) (track "Track2" {25 24 23 22 21 20 18 17 16 15 14 13 0 1 2 3 4 5 7 8 9 10 11 12} P2 directed:True)} use:Vertex) (dice num:2) (regions P1 {20 21 22 23 24 25}) (regions P2 {7 8 9 10 11 12}) (piece "Disc" Each (forEach Die replayDouble:True if:(and {(notEqual (pips) 0) (notEqual (trackSite Move from:(from) steps:(pips)) -1) (notEqual (trackSite Move from:(from) steps:(pips)) -2)}) (move (from (from)) (to (trackSite Move from:(from) steps:(pips)) if:(or (not (is Enemy (who at:(to)))) (equals 1 (size Stack at:(to))))))))}) (rules (start {(place Stack "Disc1" 12 count:15) (place Stack "Disc2" 25 count:15)}) (play (do (if (not (is Prev Mover)) (roll)) next:(if (all Sites (sites Occupied by:Mover) if:(is In (site) (sites Mover))) (forEach Die replayDouble:True if:(notEqual (pips) 0) (forEach Site (sites Occupied by:Mover) (if (and (is Occupied (site)) (notEqual (trackSite Move from:(site) steps:(pips)) -1)) (if (equals (trackSite Move from:(site) steps:(pips)) -2) (move Remove (from)) (move (from (site)) (to (trackSite Move from:(site) steps:(pips)) if:(or (not (is Enemy (who at:(to)))) (equals 1 (size Stack at:(to)))))))) noMoveYet:(firstMoveOnTrack "Track" Mover (if (and (is Friend (who at:(site))) (lt (trackSite Move from:(site) steps:(pips)) 0)) (move Remove (from)))) (then (if (not (all DiceUsed)) (moveAgain))))) (max Distance "Track" Mover (forEach Piece top:True (then (if (not (all DiceUsed)) (moveAgain)))))))) (end {(if (no Pieces Mover) (byScore {(score P1 (if (is Mover P1) (if (equals (size Stack in:(sites Occupied by:P2)) 15) 2 1) 0)) (score P2 (if (is Mover P2) (if (equals (size Stack in:(sites Occupied by:P1)) 15) 2 1) 0))})) (if (and (equals (what at:12 level:0) (id "Disc1" P1)) (equals (what at:12 level:1) (id "Disc2" P2))) (byScore {(score P1 0) (score P2 2)})) (if (and (equals (what at:25 level:0) (id "Disc2" P2)) (equals (what at:25 level:1) (id "Disc1" P1))) (byScore {(score P1 2) (score P2 0)}))}))) 
