2x12 board, divided in half. Spaces on each side take the form of semi-circular sockets, into which the pieces fit. The points form a continuous track in a horseshoe shape; each player progresses in opposite directions (one from their bottom right to the top right, the other from their bottom left to their top left). Fifteen pieces per player. The starting position is as such, number the points from the origin of each player's track: point six: five pieces; point 8: three pieces; point 13: five pieces; point 24: two pieces. Two dice. Players move according to the number on each die by moving one piece the value on one die then another piece the value on the other die, or by moving one piece the value of one die and then the value of the other. When a player's piece lands on a spot occupied by a single piece belonging to the opponent, the opponent's piece is sent back to the quadrant in which that player started with two pieces. Players bear off their pieces at the end of their track. The first player to bear off all their pieces wins.
(game "Todas Tablas" (players 2) (equipment {(board (merge {(rectangle 1 6) (shift 7 0 (rectangle 1 6)) (shift 0 6 (rectangle 1 6)) (shift 7 6 (rectangle 1 6))}) {(track "Track1" {11 10 9 8 7 6 5 4 3 2 1 0 12 13 14 15 16 17 18 19 20 21 22 23} P1 directed:True) (track "Track2" {23 22 21 20 19 18 17 16 15 14 13 12 0 1 2 3 4 5 6 7 8 9 10 11} P2 directed:True)} use:Vertex) (dice d:6 num:2) (piece "Disc" Each (forEach Die if:(notEqual (pips) 0) (if (equals (trackSite Move from:(from) steps:(pips)) -1) (move Remove (from)) (move (from (from)) (to (trackSite Move from:(from) steps:(pips)) if:(or (not (is Enemy (who at:(to)))) (equals 1 (size Stack at:(to)))) (apply if:(is Enemy (who at:(to))) (fromTo (from (to)) (to (if (and (notEqual (to) (regionSite (sites Next "StartQuadrant") index:0)) (not (is Friend (who at:(regionSite (sites Next "StartQuadrant") index:0))))) (regionSite (sites Next "StartQuadrant") index:0) (if (and (notEqual (to) (regionSite (sites Next "StartQuadrant") index:1)) (not (is Friend (who at:(regionSite (sites Next "StartQuadrant") index:1))))) (regionSite (sites Next "StartQuadrant") index:1) (if (and (notEqual (to) (regionSite (sites Next "StartQuadrant") index:2)) (not (is Friend (who at:(regionSite (sites Next "StartQuadrant") index:2))))) (regionSite (sites Next "StartQuadrant") index:2) (if (and (notEqual (to) (regionSite (sites Next "StartQuadrant") index:3)) (not (is Friend (who at:(regionSite (sites Next "StartQuadrant") index:3))))) (regionSite (sites Next "StartQuadrant") index:3) (if (and (notEqual (to) (regionSite (sites Next "StartQuadrant") index:4)) (not (is Friend (who at:(regionSite (sites Next "StartQuadrant") index:4))))) (regionSite (sites Next "StartQuadrant") index:4) (if (and (notEqual (to) (regionSite (sites Next "StartQuadrant") index:5)) (not (is Friend (who at:(regionSite (sites Next "StartQuadrant") index:5))))) (regionSite (sites Next "StartQuadrant") index:5) (if (and (notEqual (to) (regionSite (sites Next "StartQuadrant") index:6)) (not (is Friend (who at:(regionSite (sites Next "StartQuadrant") index:6))))) (regionSite (sites Next "StartQuadrant") index:6) -1))))))))))))) (then (if (not (all DiceUsed)) (moveAgain))))) (regions "StartQuadrant" P1 (sites {6 7 8 9 10 11})) (regions "StartQuadrant" P2 (sites {18 19 20 21 22 23}))}) (rules (start {(place Stack "Disc1" 6 count:5) (place Stack "Disc1" 4 count:3) (place Stack "Disc1" 12 count:5) (place Stack "Disc1" 23 count:2) (place Stack "Disc2" 18 count:5) (place Stack "Disc2" 16 count:3) (place Stack "Disc2" 0 count:5) (place Stack "Disc2" 11 count:2)}) (play (do (if (not (is Prev Mover)) (roll)) next:(forEach Piece))) (end (if (no Pieces Mover) (result Mover Win))))) 
