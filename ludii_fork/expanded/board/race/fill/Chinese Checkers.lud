The game can be played by two, three, four, or six people. It is played on a board that is shaped like a six-pointed star with 121 holes for the pieces. Each point of the star has ten colored spheres and the goal of the game is to move all of one's pieces into the opposite point of the star. Players can move a piece to one adjacent hole, or can jump either their own or opponent's pieces. This does not result in capturing, and jumping is not mandatory. When fewer than six people play, players can play with only one color of pieces, but if two or three people play they can use more than one color, but each player must use an equal number of pieces. Six players occupy home regions (standard game). The game is played on a board of size 4.
(game "Chinese Checkers" (players 6) (equipment {(board (hex Star 4)) (piece "Marker" Each) (regions "Home" P1 (expand origin:(coord row:0 column:4) steps:(sub 4 1))) (regions "Home" P2 (expand origin:(coord row:4 column:(mul 4 3)) steps:(sub 4 1))) (regions "Home" P3 (expand origin:(coord row:(mul 4 3) column:(mul 4 4)) steps:(sub 4 1))) (regions "Home" P4 (expand origin:(coord row:(mul 4 4) column:(mul 4 3)) steps:(sub 4 1))) (regions "Home" P5 (expand origin:(coord row:(mul 4 3) column:4) steps:(sub 4 1))) (regions "Home" P6 (expand origin:(coord row:4 column:0) steps:(sub 4 1))) (map {(pair 1 4) (pair 2 5) (pair 3 6) (pair 4 1) (pair 5 2) (pair 6 3)})}) (rules (start {(place "Marker1" (sites P1)) (place "Marker2" (sites P2)) (place "Marker3" (sites P3)) (place "Marker4" (sites P4)) (place "Marker5" (sites P5)) (place "Marker6" (sites P6))}) phases:{(phase "Movement" (play (forEach Piece (or (move Hop (from (from)) (between if:(is Occupied (between))) (to if:(and (and (is Empty (to)) (not (is Visited (to)))) (or (not (is In (from) (sites (player (mapEntry (mover)))))) (is In (to) (sites (player (mapEntry (mover)))))))) (then (if (can Move (move Hop (from (last To)) (between if:(is Occupied (between))) (to if:(and (and (is Empty (to)) (not (is Visited (to)))) (or (not (is In (last To) (sites (player (mapEntry (mover)))))) (is In (to) (sites (player (mapEntry (mover)))))))))) (moveAgain)))) (move Step (to if:(and (is Empty (to)) (or (not (is In (from) (sites (player (mapEntry (mover)))))) (is In (to) (sites (player (mapEntry (mover)))))))))))) (nextPhase (is Mover (next)) "MultiJump")) (phase "MultiJump" (play (or (move Hop (from (last To)) (between if:(is Occupied (between))) (to if:(and (and (is Empty (to)) (not (is Visited (to)))) (or (not (is In (last To) (sites (player (mapEntry (mover)))))) (is In (to) (sites (player (mapEntry (mover)))))))) (then (if (can Move (move Hop (from (last To)) (between if:(is Occupied (between))) (to if:(and (and (is Empty (to)) (not (is Visited (to)))) (or (not (is In (last To) (sites (player (mapEntry (mover)))))) (is In (to) (sites (player (mapEntry (mover)))))))))) (moveAgain)))) (move Pass))) (nextPhase (not (is Mover (next))) "Movement"))} (end (if (equals (sites Occupied by:Mover) (sites (player (mapEntry (mover))))) (result Mover Win))))) 
