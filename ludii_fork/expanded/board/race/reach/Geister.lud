Geister is a two-player board game on a 6×6 game board. Each player has four good ghosts and four evil ghosts, whose type is not revealed to the opponent player. In each turn a player can move one of his ghosts one step vertically or horizontally. Moving into a square containing an opponent's ghost will capture the opponent's ghost and move it off from the board. Moving into a square containing an ally ghost is not allowed. A player can also move off one of his good ghosts from one of the opponent's corner squares. A player wins when one of the three conditions is satisfied: • All the player's evil ghosts are captured. • All the opponent's good ghosts are captured. • One of the player's good ghosts is moved off the board from one of the opponent's corner squares.
(game "Geister" (players 2) (equipment {(board (square 6)) (hand Each size:2) (piece "GhostGood" Each) (piece "GhostEvil" Each) (regions "HomeP1" P1 (difference (expand (sites Bottom) steps:1) (union (sites Side E) (sites Side W)))) (regions "HomeP2" P2 (difference (expand (sites Top) steps:1) (union (sites Side E) (sites Side W)))) (regions "EscapeP1" P1 {30 35}) (regions "EscapeP2" P2 {0 5}) (map "Where" {(pair (id "GhostGood" P1) (handSite P1)) (pair (id "GhostEvil" P1) (handSite P1 1)) (pair (id "GhostGood" P2) (handSite P2)) (pair (id "GhostEvil" P2) (handSite P2 1))})}) (rules (start {(place "GhostGood1" 36 count:4) (place "GhostEvil1" 37 count:4) (set Hidden (sites Hand P1) to:P2) (place "GhostGood2" 38 count:4) (place "GhostEvil2" 39 count:4) (set Hidden (sites Hand P2) to:P1)}) phases:{(phase "Placement" (play (move (from (sites Occupied by:Mover container:(mover))) (to (forEach (sites Mover "Home") if:(is Empty (site)))) (then (if (all Sites (sites Hand P2) if:(equals 0 (count Cell at:(site)))) (and {(set Hidden (sites P2 "Home") False to:P1) (set Hidden (sites P1 "Home") False to:P2) (set Hidden What (sites P2 "Home") to:P1) (set Hidden What (sites P1 "Home") to:P2)}))))) (nextPhase (all Sites (sites Hand P2) if:(equals 0 (count Cell at:(site)))) "Movement")) (phase "Movement" (play (forEach Piece {"GhostGood" "GhostEvil"} (or (move Step Orthogonal (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (add (piece (what at:(to))) (to (mapEntry "Where" (what at:(to))))))))) (move Select (from (intersection (sites Occupied by:Mover component:"GhostGood") (sites Mover "Escape"))) (then (trigger "Escaped" (mover))))))) (end {(if (or {(no Pieces Mover "GhostEvil" in:(sites Board)) (no Pieces Next "GhostGood" in:(sites Board)) (is Triggered "Escaped" Mover)}) (result Mover Win)) (if (or (no Pieces Next "GhostEvil" in:(sites Board)) (no Pieces Mover "GhostGood" in:(sites Board))) (result Mover Loss))}))})) 
