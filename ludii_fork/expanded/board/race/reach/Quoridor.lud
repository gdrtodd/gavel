The abstract strategy game Quoridor is surprisingly deep for its simple rules. The object of the game is to advance your pawn to the opposite edge of the board. On your turn you may either move your pawn or place a wall. You may hinder your opponent with wall placement, but not completely block them off. Meanwhile, they are trying to do the same to you. The first pawn to reach the opposite side wins. The game has 2 players
(game "Quoridor" (players 2) (equipment {(board (square 9)) (piece "Pawn" Each (or (move Step Orthogonal (to if:(and (is Empty (to)) (all Sites (sites Occupied by:Shared on:Edge) if:(not (is In (site) (intersection (sites Incident Edge of:Cell at:(from)) (sites Incident Edge of:Cell at:(to))))))))) (move Hop Orthogonal (between if:(is Enemy (who at:(between)))) (to if:(and {(is Empty (to)) (all Sites (sites Occupied by:Shared on:Edge) if:(not (is In (site) (intersection (sites Incident Edge of:Cell at:(from)) (sites Incident Edge of:Cell at:(between)))))) (all Sites (sites Occupied by:Shared on:Edge) if:(not (is In (site) (intersection (sites Incident Edge of:Cell at:(between)) (sites Incident Edge of:Cell at:(to))))))}))))) (piece "Rectangle" Shared) (hand Each) (regions P1 (sites Top)) (regions P2 (sites Bottom))}) (rules (start {(place "Rectangle" (handSite P1) count:10) (place "Rectangle" (handSite P2) count:10) (place "Pawn1" (intersection (sites Bottom) (sites Column (column of:(centrePoint))))) (place "Pawn2" (intersection (sites Top) (sites Column (column of:(centrePoint)))))}) (play (or (do (if (is Occupied (handSite Mover)) (move (from (handSite Mover)) (to Edge (difference (sites Empty Edge) (sites Outer Edge))))) ifAfterwards:(and {(notEqual 1000000000 (count Steps (step Orthogonal (to if:(and (is Empty (to)) (all Sites (sites Occupied by:Shared on:Edge) if:(not (is In (site) (intersection (sites Incident Edge of:Cell at:(from)) (sites Incident Edge of:Cell at:(to))))))))) (where "Pawn" P1) (sites P1))) (notEqual 1000000000 (count Steps (step Orthogonal (to if:(and (is Empty (to)) (all Sites (sites Occupied by:Shared on:Edge) if:(not (is In (site) (intersection (sites Incident Edge of:Cell at:(from)) (sites Incident Edge of:Cell at:(to))))))))) (where "Pawn" P2) (sites P2)))})) (forEach Piece))) (end (if (and (is LastTo Cell) (is In (last To) (sites Mover))) (result Mover Win))))) 
