The game is played on a 5x5 grid where each turn players build a town by placing building pieces up to four levels high. To win the game, players must move one of their two workers to the third level of the town. Beginning turns : The first player places his two workers on the board, then the second does the same. Normal turns : Each turn, the current player moves one of his two workers in an adjacent position (in horizontal, vertical or diagonal, i.e. king chess move) then he places a building tile adjacent to the moved worker (in a horizontal, vertical or diagonal adjacent position). The level of a position (i.e. a grid square) is the number of tiles. Workers can move onto a position with zero, one, two, or three tiles (but not with four tiles) only if the level of the destination position is less than or equal to the level of departure destination plus one. There can be no more than 4 tiles per position. The primary winning condition is to get one of his workers onto the third level (i.e. on a position with three tiles), though players may also win if their opponent is unable to make a move.
(game "Santorini" (players 2) (equipment {(board (square 5)) (hand Each) (map {(pair 0 "SquareLarge0") (pair 1 "SquareSmall0") (pair 2 "Octagon0") (pair 3 "Marker0")}) (piece "Pawn3d" Each (move Step (to if:(and (le (sub (size Stack at:(to)) (topLevel at:(from))) 1) (equals (who at:(to)) 0))) (then (moveAgain)))) (piece "SquareLarge" Neutral) (piece "SquareSmall" Neutral) (piece "Octagon" Neutral) (piece "Marker" Neutral)}) (rules (start {(place Stack "Pawn3d1" (handSite P1) count:2) (place Stack "Pawn3d2" (handSite P2) count:2)}) phases:{(phase "Placement" (play (move (from (handSite Mover)) (to (sites Empty)) (then (if (not (all Sites (sites Hand Mover) if:(equals 0 (count Cell at:(site))))) (moveAgain))))) (nextPhase Mover (all Sites (sites Hand Mover) if:(equals 0 (count Cell at:(site)))) "Movement")) (phase "Movement" (play (if (is Prev Mover) (move Select (from (sites Around (last To) if:(and (lt (size Stack at:(to)) 4) (equals (who at:(to)) 0)))) (then (add (piece (mapEntry (size Stack at:(last To)))) (to (last To)) stack:True))) (forEach Piece))))} (end {(if (and (equals 3 (topLevel at:(last To))) (equals (what at:(last To) level:(topLevel at:(last To))) (id "Pawn3d" Mover))) (result Mover Win)) (if (no Moves P1) (result P2 Win)) (if (no Moves P2) (result P1 Win))}))) 
