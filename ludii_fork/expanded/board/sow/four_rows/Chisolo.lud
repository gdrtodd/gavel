4x7-10 board (seven most common). Three counters in each hole, except the leftmost four in the inner row which have, from right to left: 0-0-1-2. On the first turn, sowing occurs in a clockwise direction. On the second turn, the player may sow in either direction, but must continue in the chosen direction for the rest of the game. When the final counter lands in an empty hole in the inner row, the contents of the hole in the opponent's inner row are also captured. If there are also contents in the opponent's outer row hole opposite, these are also taken. When a capture is made, the player may then capture the counters in any one of the opponent's holes as well. If the final counter lands in an occupied hole, the player picks up these counters and continues sowing. The player who captures all of the opponent's counters wins. Each player has 7 holes on each row. Starting positions of the Natatu ruleset. No Opening. Capture all the opposite holes.
(game "Chisolo" (players 2) (equipment {(mancalaBoard 4 7 store:None {(track "TrackCCW1" "0,E,N1,W" loop:True P1) (track "TrackCCW2" "14,E,N1,W" loop:True P2) (track "TrackCW1" "6,W,N1,E" loop:True P1) (track "TrackCW2" "21,E,S1,W" loop:True P2)}) (regions "Home" P1 (sites Track "TrackCCW1")) (regions "Home" P2 (sites Track "TrackCCW2")) (regions "Inner" P1 (difference (sites Track "TrackCCW1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "TrackCCW2") (sites Top))) (regions "FourLeftInner" P1 (sites {7 8 9 10})) (regions "FourLeftInner" P2 (sites {17 18 19 20})) (piece "Seed" Shared) (hand Each)}) (rules (start {(set Count 3 to:(difference (union (sites P1 "Home") (sites P2 "Home")) (union (sites P1 "FourLeftInner") (sites P2 "FourLeftInner")))) (set Count 1 to:(sites {8 19})) (set Count 2 to:(sites {7 20}))}) phases:{(phase "SowingCW" (play (if (and (is Prev Mover) (equals (var "CaptureOther") 1)) (move (from (sites Next) if:(is Occupied (from))) (to (handSite Mover)) count:(count at:(from)) (then (set Var "CaptureOther" 0))) (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(is Occupied (from))) (then (sow "TrackCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (moveAgain) (if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (add (to) 7) (sub (to) 7))) (and {(fromTo (from (if (is Mover P1) (add (to) 7) (sub (to) 7))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) 7) (sub (to) 7)))) (if (is Occupied (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (fromTo (from (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))))) (moveAgain) (set Var "CaptureOther" 1)}))))))))) (nextPhase Mover (not (is Next Mover)) "Sowing")) (phase "Sowing" (play (if (and (is Prev Mover) (equals (var "CaptureOther") 1)) (move (from (sites Next) if:(is Occupied (from))) (to (handSite Mover)) count:(count at:(from)) (then (set Var "CaptureOther" 0))) (or (if (or (le (value Player Mover) 0) (equals (value Player Mover) 1)) (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(is Occupied (from))) (then (and (sow "TrackCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (moveAgain) (if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (add (to) 7) (sub (to) 7))) (and {(fromTo (from (if (is Mover P1) (add (to) 7) (sub (to) 7))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) 7) (sub (to) 7)))) (if (is Occupied (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (fromTo (from (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))))) (moveAgain) (set Var "CaptureOther" 1)}))))) (set Value Mover 1))))) (if (or (le (value Player Mover) 0) (equals (value Player Mover) 2)) (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(is Occupied (from))) (then (and (sow "TrackCCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (moveAgain) (if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (add (to) 7) (sub (to) 7))) (and {(fromTo (from (if (is Mover P1) (add (to) 7) (sub (to) 7))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) 7) (sub (to) 7)))) (if (is Occupied (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (fromTo (from (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))))) (moveAgain) (set Var "CaptureOther" 1)}))))) (set Value Mover 2)))))))))} (end (forEach Player if:(no Moves Player) (result Player Loss))))) 
