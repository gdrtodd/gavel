4x8 board. Play begins with two counters in each hole. Opening moves: Players place all of the counters in the outer row into their rightmost hole. They then take one counter from each of the holes in the inner row and redistribute them into the outer row, one in each hole. Then, each player sows counters in an anti-clockwise direction beginning from the rightmost hole in the inner row, proceeding, picking up the contents of holes when the last counter falls into an occupied hole and continuing sowing. However, the final counter that would fall into the rightmost hole in the outer row (which should now contain 17 counters) is not placed there, but rather on the second to right hole in the inner row, which should now contain one counter. Initial phase: In the initial phase, the rightmost hole in the inner and outer row for each player are out of play. All sowing and capturing only occurs on the remaining holes. Sowing occurs in an anti-clockwise direction. When the final counter of a sowing lands in an empty hole, the turn ends. When it falls into an occupied hole in the player's inner row the contents of the opponent's opposite holes in the inner and outer row are captured. These are then sown in the player's holes beginning with the hole from where the previous sowing began. If the final counter of a sowing falls into an occupied hole that cannot make a capture, then the counters in this hole are picked up and sowing continues. Second phase: The initial phase ends when a player plays from the rightmost hole in the outer row. This can be by necessity or by choice. Once this happens, that player must play in all of their holes. The opponent may remain in the initial phase after this point until they play from their rightmost hole. The same sowing and capturing rules as before. Play continues until one player can no longer move.
(game "Isolo" (players 2) (equipment {(mancalaBoard 4 8 store:None {(track "TrackCCW1" "0,E,N1,W" loop:True P1) (track "TrackCCW2" "16,E,N1,W" loop:True P2)}) (regions "Home" P1 (sites Track "TrackCCW1")) (regions "Home" P2 (sites Track "TrackCCW2")) (regions "Inner" P1 (difference (sites Track "TrackCCW1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "TrackCCW2") (sites Top))) (regions "Outer" P1 (sites Bottom)) (regions "Outer" P2 (sites Top)) (piece "Seed" Shared) (hand Each) (map "RightmostOuter" {(pair P1 7) (pair P2 24)}) (map "RightmostInner" {(pair P1 15) (pair P2 16)}) (map "SecondRightmostInner" {(pair P1 14) (pair P2 17)})}) (rules (start (set Count 2 to:(union (sites P1 "Home") (sites P2 "Home")))) phases:{(phase "Opening1" (play (forEach Site (difference (sites Mover "Outer") (mapEntry "RightmostOuter" Mover)) (if (is Occupied (site)) (move (from (site)) (to (mapEntry "RightmostOuter" Mover)) count:(count at:(site)))))) (nextPhase Mover (all Sites (difference (sites Mover "Outer") (mapEntry "RightmostOuter" Mover)) if:(is Empty (site))) "Opening2")) (phase "Opening2" (play (forEach Site (sites Mover "Inner") (if (equals 2 (count at:(site))) (move (from (site)) (to (if (is Mover P1) (sub (site) 8) (add (site) 8))) count:1)))) (nextPhase Mover (all Sites (sites Mover "Inner") if:(equals (count at:(site)) 1)) "Opening3")) (phase "Opening3" (play (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites {(mapEntry "RightmostInner" Mover)}))) (then (sow "TrackCCW" owner:(mover) apply:(if (notEqual (to) (mapEntry "RightmostOuter" Mover)) (moveAgain) (fromTo (from (to)) (to (mapEntry "SecondRightmostInner" Mover)) count:1)))))) (nextPhase Mover (not (is Next Mover)) "InitialSowing")) (phase "InitialSowing" (play (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(is Occupied (from))) (then (sow "TrackCCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (if (is In (to) (sites Mover "Inner")) (if (or (is Occupied (if (is Mover P1) (add (to) 8) (sub (to) 8))) (is Occupied (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (and {(if (is Occupied (if (is Mover P1) (add (to) 8) (sub (to) 8))) (fromTo (from (if (is Mover P1) (add (to) 8) (sub (to) 8))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) 8) (sub (to) 8))))) (if (is Occupied (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (fromTo (from (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))))) (sow (last From) count:(add (count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (count at:(if (is Mover P1) (add (to) 8) (sub (to) 8)))) "TrackCCW" owner:(mover) skipIf:(is In (to) (sites {(mapEntry "RightmostOuter" Mover) (mapEntry "RightmostInner" Mover)})))}) (moveAgain)) (moveAgain))) skipIf:(is In (to) (sites {(mapEntry "RightmostOuter" Mover) (mapEntry "RightmostInner" Mover)})))))) (nextPhase Mover (is In (last From) (sites {(mapEntry "RightmostOuter" Mover) (mapEntry "RightmostInner" Mover)})) "InitialSowing")) (phase "Sowing" (play (move Select (from (sites Mover "Home") if:(is Occupied (from))) (then (sow "TrackCCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (if (is In (to) (sites Mover "Inner")) (if (or (is Occupied (if (is Mover P1) (add (to) 8) (sub (to) 8))) (is Occupied (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2))))) (and {(if (is Occupied (if (is Mover P1) (add (to) 8) (sub (to) 8))) (fromTo (from (if (is Mover P1) (add (to) 8) (sub (to) 8))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) 8) (sub (to) 8))))) (if (is Occupied (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (fromTo (from (if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (to (last From)) count:(count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))))) (sow (last From) count:(add (count at:(if (is Mover P1) (add (to) (mul 8 2)) (sub (to) (mul 8 2)))) (count at:(if (is Mover P1) (add (to) 8) (sub (to) 8)))) "TrackCCW" owner:(mover))}) (moveAgain)) (moveAgain))))))))} (end (forEach Player if:(no Moves Player) (result Player Loss))))) 
