4x10 board. Forty counters in total. Play begins with one counter in each hole. One player then rearranges these counters however they like, as long as they remain on their side of the board and they remain on the board. They can arrange it so that they capture counters from the opponent's side according to the capture rules. The other player then does the same. Play begins with a player picking up counters from one of the holes with more than one on their side. Counters are sown in an anti-clockwise direction. When the last counter lands in an occupied hole, these counters are picked up and sowing continues until the last counter falls in an empty hole. When the last counter falls into an empty hole, either the turn ends or the player captures. Captures are only made from the inner row; if the corresponding hole in the opponent's inner row holds counters, these are captured; if there are also counters in the corresponding hole in the opponent's outer row, these are also captured. Play continues until one player has nothing left or one player has only single counters in their holes. If the player has no counters left, they have lost. If only single counters remain in a player's holes, they may now move single counters, but only into empty holes. Captures are made in the same way as before.
(game "Makonn" (players 2) (equipment {(mancalaBoard 4 10 store:None {(track "Track1" "0,E,N1,W" loop:True P1) (track "Track2" "20,E,N1,W" loop:True P2)}) (regions "Home" P1 (sites Track "Track1")) (regions "Home" P2 (sites Track "Track2")) (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "Track2") (sites Top))) (piece "Seed" Shared)}) (rules (start (set Count 1 to:(union (sites P1 "Home") (sites P2 "Home")))) phases:{(phase "Rearrangement" (play (or (move (from (sites Mover "Home") if:(is Occupied (from))) (to (sites Mover "Home") if:(notEqual (from) (to))) (then (and (if (and {(notEqual 1 (value Player Mover)) (is In (last To) (sites Mover "Inner")) (equals 1 (count at:(last To)))}) (if (is Occupied (if (is Mover P1) (add (last To) 10) (sub (last To) 10))) (and {(set Value Mover 1) (remove (if (is Mover P1) (add (last To) 10) (sub (last To) 10))) (if (is Occupied (if (is Mover P1) (add (last To) (mul 10 2)) (sub (last To) (mul 10 2)))) (remove (if (is Mover P1) (add (last To) (mul 10 2)) (sub (last To) (mul 10 2)))))}))) (moveAgain)))) (move Pass))) (nextPhase Mover (was Pass) "Sowing")) (phase "Sowing" (play (move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover "Home")) if:(if (is Prev Mover) True (if (all Sites (sites Mover "Home") if:(ge 1 (count at:(site)))) (is Occupied (from)) (lt 1 (count at:(from)))))) (then (sow "Track" owner:(mover) apply:(if (lt 1 (count at:(to))) (and (set Var "Replay" (to)) (moveAgain)) (if (is Occupied (if (is Mover P1) (add (to) 10) (sub (to) 10))) (and (remove (if (is Mover P1) (add (to) 10) (sub (to) 10))) (if (is Occupied (if (is Mover P1) (add (to) (mul 10 2)) (sub (to) (mul 10 2)))) (remove (if (is Mover P1) (add (to) (mul 10 2)) (sub (to) (mul 10 2)))))))))))))} (end (if (all Sites (sites Next "Home") if:(equals 0 (count at:(site)))) (result Next Loss))))) 
