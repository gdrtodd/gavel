4x10-20 holes, with even numbers. Two counters in each hole in the outer row. Sowing occurs in an anti-clockwise direction. When the final counter lands in an occupied hole, these are picked up and sowing continues. When the final counter lands in an empty hole in the inner row, the counters in the opposite hole in the opponent's inner row are captured. If counters are captured from the inner row, and there are also counters in the outer row, the counters in the outer row are also captured. If counters in the inner and outer row are captured, the player may also capture counters from two other holes on the opponent's side of the board. Single counters cannot be sown until there are no holes with multiple counters on the player's side of the board, and then single counters may only be sown into empty holes. Play continues until one player captures all of their opponent's counters, thus winning the game. Each row has 10 holes.
(game "Msuwa wa Kunja" (players 2) (equipment {(mancalaBoard 4 10 store:None {(track "Track1" "0,E,N1,W" loop:True P1) (track "Track2" "20,E,N1,W" loop:True P2)}) (regions "Home" P1 (sites Track "Track1")) (regions "Home" P2 (sites Track "Track2")) (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "Track2") (sites Top))) (piece "Seed" Shared)}) (rules (start (set Count 2 to:(union (sites Top) (sites Bottom)))) (play (if (and (is Prev Mover) (lt 0 (var))) (move Remove (forEach (sites Next "Home") if:(lt 0 (count at:(site)))) (then (and (if (gt (var) 1) (moveAgain)) (set Var (sub (var) 1))))) (if (not (all Sites (forEach (sites Mover "Home") if:(lt 1 (count at:(site)))) if:(equals 0 (count at:(site))))) (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(lt 1 (count at:(from)))) (then (sow "Track" owner:(mover) apply:(if (lt 1 (count at:(to))) (moveAgain) (if (is In (to) (sites Mover "Inner")) (if (lt 0 (count at:(if (is Mover P1) (add (to) 10) (sub (to) 10)))) (and (remove (if (is Mover P1) (add (to) 10) (sub (to) 10))) (if (lt 0 (count at:(if (is Mover P1) (add (to) (mul 10 2)) (sub (to) (mul 10 2))))) (and {(remove (if (is Mover P1) (add (to) (mul 10 2)) (sub (to) (mul 10 2)))) (set Var 2) (moveAgain)}))))))))) (move Select (from (sites Mover "Home") if:(and (equals 1 (count at:(from))) (equals 0 (count at:(trackSite Move from:(from) steps:1))))) (then (sow "Track" owner:(mover) apply:(if (is In (to) (sites Mover "Inner")) (if (lt 0 (count at:(if (is Mover P1) (add (to) 10) (sub (to) 10)))) (and (remove (if (is Mover P1) (add (to) 10) (sub (to) 10))) (if (lt 0 (count at:(if (is Mover P1) (add (to) (mul 10 2)) (sub (to) (mul 10 2))))) (and {(remove (if (is Mover P1) (add (to) (mul 10 2)) (sub (to) (mul 10 2)))) (set Var 2) (moveAgain)}))))))))))) (end (forEach NonMover if:(all Sites (sites Player "Home") if:(equals 0 (count at:(site)))) (result Player Loss))))) 
