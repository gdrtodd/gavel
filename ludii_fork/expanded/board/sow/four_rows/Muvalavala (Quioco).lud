4x6-16 board. Number of counters per player is four times the number of holes in a row minus two. Counters are distributed only in the outer row, with two counters in each hole, except the hole on the far left which contains the rest. The counters are then redistributed so that there is one in every hole, except the one on the extreme left in the inner and outer hole. The one on the left in the inner hole remains empty and the one in the outer row retains the same number initially placed there. Play begins from any of the player's holes, sowing anti-clockwise. When the final counter lands in an occupied hole, these are picked up and sowing continues, unless a capture can be made. Captures are made when the final counter falls into an occupied hole in the inner row, and the opponent's hole opposite contains counters. If it is, they are captured, and if the hole in to outer row opposite also contains counters, these are also captured. These are then sown from the hole following the one from which the capture occurred. If the final counter falls into an empty hole, the turn is over. Single counters cannot be sown. Play ends when one player cannot move. Each row has 6 holes.
(game "Muvalavala (Quioco)" (players 2) (equipment {(mancalaBoard 4 6 store:None {(track "Track1" "0,E,N1,W" loop:True P1) (track "Track2" "12,E,N1,W" loop:True P2)}) (piece "Seed" Shared) (regions "Home" P1 (sites Track "Track1")) (regions "Home" P2 (sites Track "Track2")) (regions "Inner" P1 (difference (sites Track "Track1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "Track2") (sites Top))) (regions "Outer" P1 (sites Bottom)) (regions "Outer" P2 (sites Top))}) (rules (start {(set Count 1 to:(union {(difference (sites P1 "Home") (sites Left)) (difference (sites P2 "Home") (sites Right))})) (set Count (sub (sub (mul 4 6) 2) (mul 2 (sub 6 1))) to:(union (intersection (sites Left) (sites P1 "Outer")) (intersection (sites Right) (sites P2 "Outer"))))}) (play (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(gt (count at:(from)) 1)) (then (sow "Track" owner:(mover) apply:(if (and {(gt (count at:(to)) 1) (is In (to) (sites Mover "Inner")) (gt (count at:(if (is Mover P1) (add (to) 6) (sub (to) 6))) 0)}) (and {(fromTo (from (if (is Mover P1) (add (to) 6) (sub (to) 6))) (to (to)) count:(count at:(if (is Mover P1) (add (to) 6) (sub (to) 6)))) (if (gt (count at:(if (is Mover P1) (add (to) (mul 6 2)) (sub (to) (mul 6 2)))) 0) (fromTo (from (if (is Mover P1) (add (to) (mul 6 2)) (sub (to) (mul 6 2)))) (to (to)) count:(count at:(if (is Mover P1) (add (to) (mul 6 2)) (sub (to) (mul 6 2)))))) (sow (to) count:(add (count at:(if (is Mover P1) (add (to) 6) (sub (to) 6))) (count at:(if (is Mover P1) (add (to) (mul 6 2)) (sub (to) (mul 6 2))))) "Track" owner:(mover))}) (if (gt (count at:(to)) 1) (moveAgain))))))) (end (if (no Moves Next) (result Mover Win))))) 
