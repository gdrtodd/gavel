4x6, 9, 12, or 15. Two counters in each hole. Players begin by sowing from the rightmost hole in the inner row, placing one counter in each of the first two holes, then picking up the counters from the next hole and continuing to sow until the next hole after the sowing is empty (this should be the hole from which the sowing began). Each player then takes two counters from any of the holes in their inner row and places them in any empty hole in the outer row. The player then captures the counters in the opponent's opposite holes. The player then removes the contents of any one of the opponent's holes. Once both players have done this, the main phase begins. Players move by sowing from any of the holes on their side of the board in an anti-clockwise direction. When the final counter lands in an occupied hole, these are picked up and sowing continues. When they fall into an empty hole, the sowing ends. If this hole is in the inner row, the contents of the opponent's opposite hole in the inner row are also taken. If there are also counters in the opponent's outer row opposite, these are also taken. The player may also capture the contents of any other hole in the inner or outer row. Single counters may be moved. The player who captures all of their opponent's counters wins. Each player has 6 holes by row.
(game "Nchuwa" (players 2) (equipment {(mancalaBoard 4 6 store:None {(track "TrackCCW1" "0,E,N1,W" loop:True P1) (track "TrackCCW2" "12,E,N1,W" loop:True P2)}) (regions "Home" P1 (sites Track "TrackCCW1")) (regions "Home" P2 (sites Track "TrackCCW2")) (regions "Inner" P1 (sites Row 1)) (regions "Inner" P2 (sites Row 2)) (regions "Outer" P1 (sites Row 0)) (regions "Outer" P2 (sites Row 3)) (piece "Seed" Shared)}) (rules (start (set Count 2 to:(union (sites P1 "Home") (sites P2 "Home")))) phases:{(phase "Opening1" (play (move Select (from (if (is Mover P1) (intersection (sites Right) (sites Row 1)) (intersection (sites Left) (sites Row 2)))) (then (sow "TrackCCW" owner:(mover) apply:(set Value Mover (trackSite Move from:(to) steps:1)))))) (nextPhase Mover "Opening2")) (phase "Opening2" (play (move Select (from (value Player Mover)) (then (sow "TrackCCW" owner:(mover) apply:(if (equals (count at:(trackSite Move from:(to) steps:1)) 0) (set Value Mover -1) (set Value Mover (trackSite Move from:(to) steps:1))))))) (nextPhase Mover (equals (value Player Mover) -1) "Opening3")) (phase "Opening3" (play (move (from (forEach (sites Mover "Inner") if:(notEqual 0 (count at:(site))))) (to (forEach (sites Mover "Outer") if:(equals 0 (count at:(site))))) count:2)) (nextPhase Mover "Opening4")) (phase "Opening4" (play (move Remove (sites Next "Home"))) (nextPhase Mover "Opening5")) (phase "Opening5" (play (move Remove (sites Next "Home"))) (nextPhase Mover "Playing")) (phase "Playing" (play (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(gt (count at:(from)) 0)) (then (sow "TrackCCW" owner:(mover) apply:(if (equals (count at:(to)) 1) (if (is In (to) (sites Mover "Inner")) (if (gt (count at:(if (is Mover P1) (add (to) 6) (sub (to) 6))) 0) (and (remove (if (is Mover P1) (add (to) 6) (sub (to) 6))) (if (gt (count at:(if (is Mover P1) (add (to) (mul 6 2)) (sub (to) (mul 6 2)))) 0) (remove (if (is Mover P1) (add (to) (mul 6 2)) (sub (to) (mul 6 2)))))))) (moveAgain)))))))} (end (forEach Player if:(equals 0 (count in:(sites Player "Home"))) (result Player Loss))))) 
