4x7 board. Three counters in each hole in the outer row; before beginning each player rearranges these as they wish, with the following rules: The leftmost hole in the outer row must have the most counters; Each hole must have equal to or less than the number of the counters as the hole on its left; there can be a maximum of two holes with one counter in the inner row. Initial phase: Sowing occurs in an anti-clockwise direction, and when a counter lands in an occupied hole the sowing continues. When the final counter lands in an empty hole, the turn ends. If the empty hole is in the player's inner row, counters in the opponent's inner row opposite are captured, and if there are also counters in the opponent's outer row hole opposite, these are also taken. The initial phase ends for a player when they have one counter in each hole. After this, players can only move single counters into empty holes. The player who captures all of the opponent's counters wins.
(game "Quiela" (players 2) (equipment {(mancalaBoard 4 7 store:None {(track "TrackCCW1" "0,E,N1,W" loop:True P1) (track "TrackCCW2" "14,E,N1,W" loop:True P2)}) (regions "Home" P1 (sites Track "TrackCCW1")) (regions "Home" P2 (sites Track "TrackCCW2")) (regions "Inner" P1 (difference (sites Track "TrackCCW1") (sites Bottom))) (regions "Inner" P2 (difference (sites Track "TrackCCW2") (sites Top))) (regions "Outer" P1 (sites Bottom)) (regions "Outer" P2 (sites Top)) (piece "Seed" Shared) (map "LeftMost" {(pair P1 0) (pair P2 27)}) (hand Each)}) (rules (start (set Count 3 to:(union (sites P1 "Outer") (sites P2 "Outer")))) phases:{(phase "Rearrangement" (play (or (move (from (sites Mover "Home") if:(is Occupied (from))) (to (difference (sites Mover) (from)))) (if (and {(all Sites (difference (sites Mover "Home") (mapEntry "LeftMost" Mover)) if:(gt (count at:(mapEntry Mover)) (count at:(site)))) (all Sites (sites Mover "Home") if:(if (equals (site) (if (is Mover P1) (ahead (site) W) (ahead (site) E))) True (le (count at:(site)) (count at:(if (is Mover P1) (ahead (site) W) (ahead (site) E)))))) (ge 2 (count Sites in:(forEach (sites Mover "Inner") if:(equals 1 (count at:(site))))))}) (move Pass)))) (nextPhase (all Passed) "InitialPhase")) (phase "InitialPhase" (play (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(is Occupied (from))) (then (sow "TrackCCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (moveAgain) (if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (add (to) 7) (sub (to) 7))) (and (fromTo (from (if (is Mover P1) (add (to) 7) (sub (to) 7))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) 7) (sub (to) 7)))) (if (is Occupied (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (fromTo (from (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))))))))))))) (nextPhase Mover (all Sites (sites Mover "Home") if:(gt 2 (count at:(site)))) "MainPhase")) (phase "MainPhase" (play (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover "Home")) if:(if (lt 1 (count at:(from))) True (if (equals 1 (count at:(from))) (is Empty (trackSite Move from:(from) "TrackCCW" steps:1))))) (then (sow "TrackCCW" owner:(mover) apply:(if (lt 1 (count at:(to))) (moveAgain) (if (is In (to) (sites Mover "Inner")) (if (is Occupied (if (is Mover P1) (add (to) 7) (sub (to) 7))) (and (fromTo (from (if (is Mover P1) (add (to) 7) (sub (to) 7))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) 7) (sub (to) 7)))) (if (is Occupied (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (fromTo (from (if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) (mul 7 2)) (sub (to) (mul 7 2)))))))))))))))} (end (forEach NonMover if:(all Sites (sites Player "Home") if:(equals 0 (count at:(site)))) (result Player Loss))))) 
