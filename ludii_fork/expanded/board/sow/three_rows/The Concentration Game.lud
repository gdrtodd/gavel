Three rows of four holes; the central two holes in the middle row are stores. Each player owns the hole in the central row to their left. Ten counters in each hole. Players sow from one of their holes, sowing first into the hole from which the counters were lifted, in an anti-clockwise direction. When the final counter lands in a hole containing two counters, these counters are captured. The player captures like this seven times. The eighth captures happens when the final counter falls into a hole containing one counter; the next capture from a hole containing three; the next from a hole containing five; then repeating the pattern of one, three, five for the rest of the game. The player who captures the most counters wins. The number of counters to have in the hole to capture in the initial captures before the sequence is 2. The number of initial captures before the sequence is 7.
(game "The Concentration Game" (players 2) (equipment {(mancalaBoard 3 4 store:None (track "Track" "0,E,N,W,S2" loop:True)) (piece "Seed" Shared) (regions P1 (union (sites {4}) (sites Bottom))) (regions P2 (union (sites {7}) (sites Top))) (map {(pair P1 5) (pair P2 6)})}) (rules (start {(set Count 10 to:(sites Outer)) (set RememberValue "NumToCaptureP1" 2) (set RememberValue "NumToCaptureP2" 2) (set RememberValue "NumCaptureTwoP1" 0) (set RememberValue "NumCaptureTwoP2" 0)}) (play (move Select (from (sites Mover) if:(lt 1 (count at:(from)))) (then (sow if:(equals (count at:(to)) (if (is In 2 (if (is Mover P1) (sites (values Remembered "NumToCaptureP1")) (sites (values Remembered "NumToCaptureP2")))) (add 1 2) (if (is In 1 (if (is Mover P1) (sites (values Remembered "NumToCaptureP1")) (sites (values Remembered "NumToCaptureP2")))) 2 (if (is In 3 (if (is Mover P1) (sites (values Remembered "NumToCaptureP1")) (sites (values Remembered "NumToCaptureP2")))) 4 6)))) apply:(and (fromTo (from (to)) (to (mapEntry (mover))) count:(count at:(to))) (if (lt (value Player Mover) 5) (set Value Mover (add 1 (value Player Mover))) (if (is Mover P1) (and (forget Value "NumToCaptureP1" All) (if (is In 2 (if (is Mover P1) (sites (values Remembered "NumToCaptureP1")) (sites (values Remembered "NumToCaptureP2")))) (remember Value "NumToCaptureP1" 1) (if (is In 1 (if (is Mover P1) (sites (values Remembered "NumToCaptureP1")) (sites (values Remembered "NumToCaptureP2")))) (remember Value "NumToCaptureP1" 3) (if (is In 5 (if (is Mover P1) (sites (values Remembered "NumToCaptureP1")) (sites (values Remembered "NumToCaptureP2")))) (remember Value "NumToCaptureP1" 1) (remember Value "NumToCaptureP1" 5))))) (and (forget Value "NumToCaptureP2" All) (if (is In 2 (if (is Mover P1) (sites (values Remembered "NumToCaptureP1")) (sites (values Remembered "NumToCaptureP2")))) (remember Value "NumToCaptureP2" 1) (if (is In 1 (if (is Mover P1) (sites (values Remembered "NumToCaptureP1")) (sites (values Remembered "NumToCaptureP2")))) (remember Value "NumToCaptureP2" 3) (if (is In 5 (if (is Mover P1) (sites (values Remembered "NumToCaptureP1")) (sites (values Remembered "NumToCaptureP2")))) (remember Value "NumToCaptureP2" 1) (remember Value "NumToCaptureP2" 5)))))))) origin:True)))) (end (if (no Moves Next) (byScore {(score P1 (count at:(mapEntry P1))) (score P2 (count at:(mapEntry P2)))}))))) 
