2x4 board. Six counters per hole. Sowing occurs in a clockwise direction from the left half of a player's row, and anti-clockwise when played from the player's right half of the row. The first seed of sowing is placed in the hole from which the sowing began. When the final counter of a sowing falls into an occupied hole, and it now contains an even number of counters, these are captured, provided the contents of that hole have already been moved. Should the following hole also contain an even number of counters, these are also captured, as well as the next one, until there is a hole with an odd number of counters. If a player cannot move, they must pass until the opponent plays in such a way that they may play. If neither player is able to move, they both capture the counters in their rows. Players then count their counters by placing them six per hole. The player who has more counters than necessary to fill their holes places them aside for use in successive rounds. The player who is unable to fill a hole with six counters leaves it empty, also placing the extra counters aside for later use. This hole is not to be sown into. The player chooses which hole to leave empty. Subsequent rounds continue until one player cannot fill a hole with six counters. The board has 4 columns.
(game "Bechi" (players 2) (equipment {(mancalaBoard 2 4 store:None {(track "TrackCW" "3,W,N,E" loop:True) (track "TrackCCW" "0,E,N,W" loop:True)}) (regions "Home" P1 (sites Bottom)) (regions "Home" P2 (sites Top)) (regions "LeftSide" P1 (intersection (expand (sites Left) steps:1) (sites Bottom))) (regions "LeftSide" P2 (intersection (expand (sites Right) steps:1) (sites Top))) (regions "RightSide" P1 (intersection (expand (sites Right) steps:1) (sites Bottom))) (regions "RightSide" P2 (intersection (expand (sites Left) steps:1) (sites Top))) (piece "Seed" Shared) (hand Each)}) (rules (start (set Count 6 to:(sites Track))) phases:{(phase "Sowing" (play (if (can Move (or {(move Select (from (sites Mover "LeftSide") if:(gt (count at:(from)) 1)) (then (and (remember Value "HolesSowed" (last To)) (sow "TrackCW" apply:(if (and (is In (to) (values Remembered "HolesSowed")) (is Even (count at:(to)))) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)) (then (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:1))) (and (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:1)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:1))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:2))) (and (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:2)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:2))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:3))) (and (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:3)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:3))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:4))) (and (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:4)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:4))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:5))) (and (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:5)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:5))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:6))) (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:6)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:6))))))))))))))))) origin:True)))) (move Select (from (sites Mover "RightSide") if:(gt (count at:(from)) 1)) (then (and (remember Value "HolesSowed" (last To)) (sow "TrackCCW" apply:(if (and (is In (to) (values Remembered "HolesSowed")) (is Even (count at:(to)))) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)) (then (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:1))) (and (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:1)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:1))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:2))) (and (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:2)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:2))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:3))) (and (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:3)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:3))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:4))) (and (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:4)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:4))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:5))) (and (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:5)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:5))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:6))) (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:6)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:6))))))))))))))))) origin:True))))})) (or {(move Select (from (sites Mover "LeftSide") if:(gt (count at:(from)) 1)) (then (and (remember Value "HolesSowed" (last To)) (sow "TrackCW" apply:(if (and (is In (to) (values Remembered "HolesSowed")) (is Even (count at:(to)))) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)) (then (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:1))) (and (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:1)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:1))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:2))) (and (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:2)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:2))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:3))) (and (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:3)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:3))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:4))) (and (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:4)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:4))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:5))) (and (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:5)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:5))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCW" steps:6))) (fromTo (from (trackSite Move from:(last From) "TrackCW" steps:6)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCW" steps:6))))))))))))))))) origin:True)))) (move Select (from (sites Mover "RightSide") if:(gt (count at:(from)) 1)) (then (and (remember Value "HolesSowed" (last To)) (sow "TrackCCW" apply:(if (and (is In (to) (values Remembered "HolesSowed")) (is Even (count at:(to)))) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)) (then (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:1))) (and (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:1)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:1))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:2))) (and (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:2)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:2))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:3))) (and (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:3)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:3))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:4))) (and (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:4)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:4))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:5))) (and (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:5)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:5))) (if (is Even (count at:(trackSite Move from:(last From) "TrackCCW" steps:6))) (fromTo (from (trackSite Move from:(last From) "TrackCCW" steps:6)) (to (handSite Mover)) count:(count at:(trackSite Move from:(last From) "TrackCCW" steps:6))))))))))))))))) origin:True))))}) (move Pass (then (if (all Passed) (and {(forEach Site (sites P1 "Home") (if (is Occupied (site)) (fromTo (from (site)) (to (handSite P1)) count:(count at:(site))))) (forEach Site (sites P2 "Home") (if (is Occupied (site)) (fromTo (from (site)) (to (handSite P2)) count:(count at:(site))))) (forget Value "HolesSowed" All)})))))) (end (if (all Passed) {(if (gt 6 (count Cell at:(handSite P1))) (result P2 Win)) (if (gt 6 (count Cell at:(handSite P2))) (result P1 Win))})) (nextPhase (all Passed) "BetweenRounds")) (phase "BetweenRounds" (play (if (le 6 (count Cell at:(handSite Mover))) (move (from (handSite Mover)) (to (intersection (sites Empty) (sites Mover "Home"))) count:6))) (nextPhase (all Passed) "Sowing"))})) 
