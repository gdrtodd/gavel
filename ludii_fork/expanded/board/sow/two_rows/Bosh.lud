Play begins with four counters in each hole. Players move by picking up all of the counters in any of the holes in their row and sowing them anti-clockwise. If the next hole after the one in which the final counter is dropped contains counters, these are picked up and sowing continues. If the next hole after the one in which the last counter was sown is empty, the counters in the hole after this one are taken and the turn is over. If that hole is empty, none are taken. When all of the holes in one row are empty, the player whose row still contains counters captures these counters. A new game begins. Each player fills as many of the holes in their row with four counters. The player which cannot fill all of their holes with four counters removes from play all of the holes that cannot be filled, and sets aside the extra counters. They play another round with the same rules as before, but without the eliminated hole(s). The game ends when one player must close all of the holes in their row, thus being unable to play.
(game "Bosh" (players 2) (equipment {(mancalaBoard 2 5 store:None (track "Track" "0,E,N,W" loop:True)) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (piece "Seed" Shared) (hand Each)}) (rules (start {(set Count 4 to:(sites Track)) (set RememberValue "OwnedP1" (sites Bottom)) (set RememberValue "OwnedP2" (sites Top))}) phases:{(phase "Sowing" (play (or {(move Select (from (if (is Prev Mover) (sites {(trackSite Move from:(last To afterConsequence:True) steps:1)}) (if (is Mover P1) (sites (values Remembered "OwnedP1")) (sites (values Remembered "OwnedP2")))) if:(gt (count at:(from)) 0)) (then (sow apply:(if (and (equals (count at:(trackSite Move from:(to) steps:1)) 0) (gt (count at:(trackSite Move from:(to) steps:2)) 0)) (fromTo (from (trackSite Move from:(to) steps:2)) (to (handSite Mover)) count:(count at:(trackSite Move from:(to) steps:2))) (if (gt (count at:(trackSite Move from:(to) steps:1)) 0) (moveAgain))) skipIf:(not (is In (to) (union (values Remembered "OwnedP1") (values Remembered "OwnedP2")))))))} (then (if (or (no Pieces All in:(sites P1)) (no Pieces All in:(sites P2))) (and (forEach Site (sites P1) (fromTo (from (site)) (to (handSite P1)) count:(count at:(site)))) (forEach Site (sites P2) (fromTo (from (site)) (to (handSite P2)) count:(count at:(site))))))))) (nextPhase (all Sites (sites Board) if:(equals 0 (count at:(site)))) "BetweenRounds")) (phase "BetweenRounds" (play (if (le 4 (count Cell at:(handSite Mover))) (move (from (handSite Mover)) (to (intersection (sites Empty) (sites Mover))) count:4) (move Pass (then (forEach Site (if (is Mover P1) (sites (values Remembered "OwnedP1")) (sites (values Remembered "OwnedP2"))) (if (is Empty (site)) (if (is Mover P1) (forget Value "OwnedP1" (site)) (forget Value "OwnedP2" (site))))))))) (end (if (all Passed) {(if (if (equals 1 P1) (equals 0 (size Array (values Remembered "OwnedP1"))) (equals 0 (size Array (values Remembered "OwnedP2")))) (result P2 Win)) (if (if (equals 2 P1) (equals 0 (size Array (values Remembered "OwnedP1"))) (equals 0 (size Array (values Remembered "OwnedP2")))) (result P1 Win))})) (nextPhase (all Passed) "Sowing"))})) 
