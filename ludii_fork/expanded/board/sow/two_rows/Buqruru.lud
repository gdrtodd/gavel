2x4 board. Six counters in each hole. At the beginning of the game, each player chooses one hole to be their sowing hole, from which each move on their turn must begin. The players agree on a direction of play, which is maintained throughout the game. Players alternate turns sowing from their sowing hole. The players may choose to sow one-by-one, two-by-two, three-by-three, four-by-four, and so forth, into the following holes. When the final counter lands in a hole causing it to contain two, four, six, or eight counters, the contents of that hole are captured. If the preceding hole also contains two, four, six, or eight counters, these are also captured, proceeding until there is a no longer a hole with two, four, six, or eight counters. If at the end of a turn a player sowed into the opponent's row and any of the opponent's holes contain two, four, six, or eight counters, providing the player sowed into them, the opponent captures these counters. In a players own row, if either player sows into a hole with an odd number of counters, making it an even number of counters, the player who owns that row captures the counters. If a player's sowing hole is empty at the beginning of their turn, they pass. Play continues until all of the counters are captured, or there is only one left on the board. The single counter is captured by the player in whose row it is located. A new round begins. Players fill up as many holes as they can with six counters. If a player cannot, they fill as many as they can with six counters, and place the remainder in a hole, either between two with six counters or after them, and erases any empty holes. Play continues as before. When one player has erased all of their holes, the opponent wins. The game is played counter clockwise.
(game "Buqruru" (players 2) (equipment {(mancalaBoard 2 4 store:None (track "Track" "0,E,N,W" loop:True)) (piece "Seed" Shared) (hand Each) (regions P1 (sites Bottom)) (regions P2 (sites Top))}) (rules (start {(set Count 6 to:(sites Track)) (set RememberValue "Playable" (sites Board))}) phases:{(phase "SelectingHole" (play (move Select (from (sites Mover) if:(is In (from) (sites (values Remembered "Playable")))) (then (set Value Mover (last To))))) (nextPhase Mover "Sowing")) (phase "Sowing" (play (if (is Occupied (value Player Mover)) (or {(move Select (from (value Player Mover) if:(is In (from) (sites (values Remembered "Playable")))) (then (sow numPerHole:1 sowEffect:(if (and (is In (to) (sites Next)) (or {(equals 1 (count at:(to))) (equals 3 (count at:(to))) (equals 5 (count at:(to))) (equals 7 (count at:(to)))})) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)))) apply:(if (or {(equals 2 (count at:(to))) (equals 4 (count at:(to))) (equals 6 (count at:(to))) (equals 8 (count at:(to)))}) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)))) skipIf:(not (is In (to) (sites (values Remembered "Playable")))) backtracking:True))) (if (equals 0 (mod (count at:(value Player Mover)) 2)) (move Select (from (value Player Mover)) (then (sow numPerHole:2 sowEffect:(if (and (is In (to) (sites Next)) (or {(equals 0 (count at:(to))) (equals 2 (count at:(to))) (equals 4 (count at:(to))) (equals 6 (count at:(to)))})) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)))) apply:(if (or {(equals 2 (count at:(to))) (equals 4 (count at:(to))) (equals 6 (count at:(to))) (equals 8 (count at:(to)))}) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)))) skipIf:(not (is In (to) (sites (values Remembered "Playable")))) backtracking:True)))) (if (equals 0 (mod (count at:(value Player Mover)) 3)) (move Select (from (value Player Mover)) (then (sow numPerHole:3 sowEffect:(if (and (is In (to) (sites Next)) (or {(equals 1 (count at:(to))) (equals 3 (count at:(to))) (equals 5 (count at:(to)))})) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)))) apply:(if (or {(equals 2 (count at:(to))) (equals 4 (count at:(to))) (equals 6 (count at:(to))) (equals 8 (count at:(to)))}) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)))) skipIf:(not (is In (to) (sites (values Remembered "Playable")))) backtracking:True)))) (if (equals 0 (mod (count at:(value Player Mover)) 4)) (move Select (from (value Player Mover)) (then (sow numPerHole:4 sowEffect:(if (and (is In (to) (sites Next)) (or {(equals 0 (count at:(to))) (equals 2 (count at:(to))) (equals 4 (count at:(to)))})) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)))) apply:(if (or {(equals 2 (count at:(to))) (equals 4 (count at:(to))) (equals 6 (count at:(to))) (equals 8 (count at:(to)))}) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to)))) skipIf:(not (is In (to) (sites (values Remembered "Playable")))) backtracking:True))))}) (then (if (gt 2 (count in:(union (sites Top) (sites Bottom)))) (and {(forEach Site (sites P1) (if (is Occupied (site)) (fromTo (from (site)) (to (handSite P1)) count:(count at:(site))))) (forEach Site (sites P2) (if (is Occupied (site)) (fromTo (from (site)) (to (handSite P2)) count:(count at:(site))))) (forget Value "Playable" All)}))))) (end {(if (and (equals 0 (count at:(value Player P1))) (equals 0 (count at:(value Player P2)))) (result Mover Draw)) (if (gt 2 (count in:(union (sites Top) (sites Bottom)))) {(if (equals 0 (count Cell at:(handSite P1))) (result P2 Win)) (if (equals 0 (count Cell at:(handSite P2))) (result P1 Win))})}) (nextPhase (gt 2 (count in:(union (sites Top) (sites Bottom)))) "BetweenRounds")) (phase "BetweenRounds" (play (if (not (all Sites (sites Mover) if:(is Occupied (site)))) (if (le 6 (count at:(handSite Mover))) (move (from (handSite Mover)) (to (sites Mover)) count:6 (then (remember Value "Playable" (last To)))) (move (from (handSite Mover)) (to (sites Mover)) count:(count at:(handSite Mover)) (then (remember Value "Playable" (last To))))))) (nextPhase (all Passed) "SelectingHole"))})) 
