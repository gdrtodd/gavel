2x6 board. Three counters in each hole. Sowing occurs in an anti-clockwise direction. When the final counter falls into an occupied hole, the player picks up the counters in the next hole and continues sowing from it. If that next hole is empty, the turn ends. If the final counter falls into an empty hole, the contents of the following hole are captured. Play continues until one player can no longer play because there are no counters left on their side. The opponent then takes the remainder of the counters on the board. For the next round, each player counts out the counters they captured, placing three each of the holes in their row. For every three in excess of the amount required to fill all of the holes in a row, the player claims one hole from the opponent's row. Play continues in this fashion until one player captures all of the holes on the board.
(game "Gabata (Adegrat)" (players 2) (equipment {(mancalaBoard 2 6 store:None (track "Track" "0,E,N,W" loop:True)) (piece "Seed" Shared) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (hand Each) (map "LeftMost" {(pair P1 0) (pair P2 11)})}) (rules (start {(set Count 3 to:(sites Track)) (set RememberValue "OwnedP1" (sites Bottom)) (set RememberValue "OwnedP2" (sites Top))}) phases:{(phase "Sowing" (play (or {(move Select (from (if (is Prev Mover) (sites {(trackSite Move from:(last To afterConsequence:True) steps:1)}) (if (is Mover P1) (sites (values Remembered "OwnedP1")) (sites (values Remembered "OwnedP2")))) if:(gt (count at:(from)) 0)) (then (sow apply:(if (gt (count at:(to)) 1) (if (ge (count at:(trackSite Move from:(to) steps:1)) 1) (moveAgain)) (if (ge (count at:(trackSite Move from:(to) steps:1)) 1) (fromTo (from (trackSite Move from:(to) steps:1)) (to (handSite Mover)) count:(count at:(trackSite Move from:(to) steps:1))))))))} (then (if (or (all Sites (sites P1) if:(equals 0 (count at:(site)))) (all Sites (sites P2) if:(equals 0 (count at:(site))))) (and {(if (all Sites (sites P1) if:(equals 0 (count at:(site)))) (forEach Site (sites Board) (if (lt 0 (count at:(site))) (fromTo (from (site)) (to (handSite P2)) count:(count at:(site))))) (forEach Site (sites Board) (if (lt 0 (count at:(site))) (fromTo (from (site)) (to (handSite P1)) count:(count at:(site)))))) (forget Value "OwnedP1" All) (forget Value "OwnedP2" All)}))))) (end (if (all Sites (sites Board) if:(equals 0 (count at:(site)))) {(if (gt 3 (count Cell at:(handSite P1))) (result P2 Win)) (if (gt 3 (count Cell at:(handSite P2))) (result P1 Win))})) (nextPhase (all Sites (sites Board) if:(equals 0 (count at:(site)))) "BetweenRounds")) (phase "BetweenRounds" (play (if (le 3 (count Cell at:(handSite Mover))) (move (from (handSite Mover)) (to (trackSite FirstSite from:(mapEntry "LeftMost" Mover) if:(is Empty (to)))) count:3 (then (if (is Mover P1) (remember Value "OwnedP1" (last To)) (remember Value "OwnedP2" (last To))))))) (nextPhase (all Passed) "Sowing"))})) 
