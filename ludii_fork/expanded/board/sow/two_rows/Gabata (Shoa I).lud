2x6 board. Four counters in each hole. Players draw lots to see who goes first. Players pick up the counters in any of the holes in their row and sow them in an anti-clockwise direction. If the last counter falls into a hole that is occupied, the player picks up the contents of this hole and continues to sow. When the last counter falls into an empty hole, the play ends. Capturing occurs when the last counter falls into a hole on the opponent's side of the board containing three counters, increasing it to four. This hole then belongs to the player who captured it. A player cannot pick up counters from this hole, and the opponent can only do so if the last counter of their sowing falls there, in which case the opponent takes one counter from it, along with the final counter. The captured hole remains in the ownership of the person who captured it. If it remains empty and the opponent drops their last counter into this hole, the last counter is removed. If a player cannot move, they pass, but the opponent may continue to make moves. The player could then resume play if the opponent's moves create a possibility for a move. Play ends when there are no more counters available to move. Each player owns the counters in their captured holes or which they have removed from the board. A second round is played, each player placing four counters into each hole starting from the rightmost hole in their row. The player with more counters gains a hole from their opponent for every four extra balls they've captured. If an opponent has three extra after counting in such a way, they also gain a hole, but not if there are one or two extra. Play continues in several rounds like this until one player takes all the counters. Each row has 6 holes.
(game "Gabata (Shoa I)" (players 2) (equipment {(mancalaBoard 2 6 store:None {(track "TrackCCW" "0,E,N,W" loop:True) (track "TrackCW" "5,W,N,E" loop:True)}) (piece "Seed" Shared) (hand Each) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (map "RightMost" {(pair P1 5) (pair P2 6)})}) (rules (start {(set RememberValue "OwnedP1" (sites Bottom)) (set RememberValue "OwnedP2" (sites Top)) (set Count 4 to:(sites Track))}) phases:{(phase "Sowing" (play (or {(move Select (from (if (is Prev Mover) (sites {(var "Replay")}) (if (is Mover P1) (sites (values Remembered "OwnedP1")) (sites (values Remembered "OwnedP2")))) if:(and (lt 0 (count at:(from))) (equals 0 (state at:(from))))) (then (sow "TrackCCW" apply:(if (and (equals 0 (state at:(to))) (equals 4 (count at:(to)))) (set State at:(to) (mover)) (if (lt 1 (count at:(to))) (if (equals 0 (state at:(to))) (and (moveAgain) (set Var "Replay" (to))) (if (notEqual (mover) (state at:(to))) (and (fromTo (from (to)) (to (handSite Mover)) count:(min 2 (count at:(to)))) (set State at:(to) (state at:(to)))))))))))} (then (if (all Sites (forEach (sites Board) if:(equals 0 (state at:(site)))) if:(equals 0 (count at:(site)))) (and {(forEach Site (forEach (sites Board) if:(equals 1 (state at:(site)))) (fromTo (from (site)) (to (handSite P1)) count:(count at:(site)))) (forEach Site (forEach (sites Board) if:(equals 2 (state at:(site)))) (fromTo (from (site)) (to (handSite P2)) count:(count at:(site)))) (forget Value "OwnedP1" All) (forget Value "OwnedP2" All) (set Var "Round" (add 1 (var "Round")))}))))) (end (if (all Sites (sites Board) if:(equals 0 (count at:(site)))) {(if (ge 1 (count Cell at:(handSite P1))) (result P2 Win)) (if (ge 1 (count Cell at:(handSite P2))) (result P1 Win))})) (nextPhase (all Sites (sites Board) if:(equals 0 (count at:(site)))) "BetweenRounds")) (phase "BetweenRounds" (play (if (le 4 (count Cell at:(handSite Mover))) (move (from (handSite Mover)) (to (trackSite FirstSite "TrackCW" from:(mapEntry "RightMost" Mover) if:(is Empty (to)))) count:4 (then (and {(if (is Mover P1) (remember Value "OwnedP1" (last To)) (remember Value "OwnedP2" (last To))) (if (le 4 (count Cell at:(handSite Mover))) (moveAgain) (if (equals 3 (count Cell at:(handSite Mover))) (and {(fromTo (from (handSite Mover)) (to (trackSite FirstSite "TrackCW" from:(mapEntry "RightMost" Mover) if:(is Empty (to)))) count:3) (fromTo (from (handSite Next)) (to (trackSite FirstSite "TrackCW" from:(mapEntry "RightMost" Mover) if:(is Empty (to)))) count:1) (if (is Mover P1) (remember Value "OwnedP1" (trackSite FirstSite "TrackCW" from:(mapEntry "RightMost" Mover) if:(is Empty (to)))) (remember Value "OwnedP2" (trackSite FirstSite "TrackCW" from:(mapEntry "RightMost" Mover) if:(is Empty (to)))))}) (if (equals 2 (count Cell at:(handSite Mover))) (and {(fromTo (from (handSite Mover)) (to (trackSite FirstSite "TrackCW" from:(mapEntry "RightMost" Mover) if:(is Empty (to)))) count:2) (fromTo (from (handSite Next)) (to (trackSite FirstSite "TrackCW" from:(mapEntry "RightMost" Mover) if:(is Empty (to)))) count:2) (if (lt 50 (value Random (range 1 100))) (remember Value "OwnedP1" (trackSite FirstSite "TrackCW" from:(mapEntry "RightMost" Mover) if:(is Empty (to)))) (remember Value "OwnedP2" (trackSite FirstSite "TrackCW" from:(mapEntry "RightMost" Mover) if:(is Empty (to)))))}))))}))) (then (if (and (is Empty (handSite P1)) (is Empty (handSite P2))) (and (if (is Even (var "Round")) (set NextPlayer (player 2)) (set NextPlayer (player 1))) (set Pending)))))) (nextPhase (and (is Empty (handSite P1)) (is Empty (handSite P2))) "Sowing"))})) 
