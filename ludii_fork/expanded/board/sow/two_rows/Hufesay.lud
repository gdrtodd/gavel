2x6 board. Four counters in each hole. Sowing proceeds in an anti-clockwise direction. When the final counter of a sowing lands in an occupied hole, the contents are picked up and sowing continues. When the final counter falls in an empty hole, the turn ends. If the empty hole is in the player's row, any counters in the opponent's opposite hole are captured. If a player cannot play, they pass their turn until they are able. The player who captures all of the counters wins. Players then count their pieces by placing four in each hole, and the player who has more than their original number takes ownership of one of the opponent's holes for every four counters more than the original number that have been taken. If no player took four more than the original, the player with three extra gets the hole, if each player has two extra they draw lots to see who gets an extra hole. Play then begins again as before. Play continues until one player owns all of the holes.
(game "Hufesay" (players 2) (equipment {(mancalaBoard 2 6 store:None (track "Track" "0,E,N,W" loop:True)) (regions "Home" P1 (sites Bottom)) (regions "Home" P2 (sites Top)) (piece "Seed" Shared) (hand Each) (map "LeftMost" {(pair P1 0) (pair P2 11)})}) (rules (start {(set Count 4 to:(sites Track)) (set RememberValue "OwnedP1" (sites Bottom)) (set RememberValue "OwnedP2" (sites Top))}) phases:{(phase "Sowing" (play (or {(move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (if (is Mover P1) (sites (values Remembered "OwnedP1")) (sites (values Remembered "OwnedP2")))) if:(is Occupied (from))) (then (sow apply:(if (gt (count at:(to)) 1) (moveAgain) (if (and (is In (to) (sites Mover)) (gt (count at:(if (is Mover P1) (add (to) 6) (sub (to) 6))) 0)) (fromTo (from (if (is Mover P1) (add (to) 6) (sub (to) 6))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) 6) (sub (to) 6)))))))))} (then (if (or (all Sites (sites P1) if:(equals 0 (count at:(site)))) (all Sites (sites P2) if:(equals 0 (count at:(site))))) (and {(forEach Site (sites (values Remembered "OwnedP1")) (if (is Occupied (site)) (fromTo (from (site)) (to (handSite P1)) count:(count at:(site))))) (forEach Site (sites (values Remembered "OwnedP2")) (if (is Occupied (site)) (fromTo (from (site)) (to (handSite P2)) count:(count at:(site))))) (forget Value "OwnedP1" All) (forget Value "OwnedP2" All) (if (ge (add (count Cell at:(handSite P1)) (count in:(sites P1))) (add (count Cell at:(handSite P2)) (count in:(sites P2)))) (set NextPlayer (player 1)) (set NextPlayer (player 2)))}))))) (end (if (all Sites (sites Board) if:(equals 0 (count at:(site)))) {(if (gt 4 (count Cell at:(handSite P1))) (result P2 Win)) (if (gt 4 (count Cell at:(handSite P2))) (result P1 Win))})) (nextPhase (all Sites (sites Board) if:(equals 0 (count at:(site)))) "BetweenRounds")) (phase "BetweenRounds" (play (if (le 4 (count Cell at:(handSite Mover))) (move (from (handSite Mover)) (to (trackSite FirstSite from:(mapEntry "LeftMost" Mover) if:(is Empty (to)))) count:4 (then (and {(if (is Mover P1) (remember Value "OwnedP1" (last To)) (remember Value "OwnedP2" (last To))) (if (le 4 (count Cell at:(handSite Mover))) (moveAgain) (if (equals 3 (count Cell at:(handSite Mover))) (and {(fromTo (from (handSite Mover)) (to (trackSite FirstSite from:(mapEntry "LeftMost" Mover) if:(is Empty (to)))) count:3) (fromTo (from (handSite Next)) (to (trackSite FirstSite from:(mapEntry "LeftMost" Mover) if:(is Empty (to)))) count:1) (if (is Mover P1) (remember Value "OwnedP1" (trackSite FirstSite from:(mapEntry "LeftMost" Mover) if:(is Empty (to)))) (remember Value "OwnedP2" (trackSite FirstSite from:(mapEntry "LeftMost" Mover) if:(is Empty (to)))))}) (fromTo (from (handSite Mover)) (to (handSite Next)) count:(count Cell at:(handSite Mover)))))}))))) (nextPhase (and (is Empty (handSite P1)) (is Empty (handSite P2))) "Sowing"))})) 
