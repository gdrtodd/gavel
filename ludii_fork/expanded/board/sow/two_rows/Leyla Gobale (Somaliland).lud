2x6, 8, or 12 holes. Four counters in each hole. Play begins from a player's righthand hole and counters are sown clockwise. After this, a player may begin sowing from any hole in their row. When the final counter falls into an occupied hole, the counters in that hole are picked up and sowing continues. If the final counter falls into an empty hole, the turn ends; if this hole is in the player's own row, the contents of the opponent's hole are captured if they contain one, two, four, or more counters. If it contains three counters, one of the opponent's counters is taken and placed into the hole where sowing ended, so that each now has two counters. These holes cannot be sown from for the rest of the game and are owned by the player whose turn created them. Play ends when one player can no longer play. The opponent then takes all of the counters in their own row, and each player takes the counters that have accumulated in their captured holes. The player with the most counters wins. Each player has 6 holes.
(game "Leyla Gobale (Somaliland)" (players 2) (equipment {(mancalaBoard 2 6 store:None (track "Track" "5,W,N,E" loop:True)) (piece "Seed" Shared) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (hand Each)}) (rules (start (set Count 4 to:(sites Track))) (play (or {(move Select (from (if (equals 0 (count Moves)) (sites {5}) (if (is Prev Mover) (sites {(var "Replay")}) (sites Mover))) if:(and (is Occupied (from)) (equals 0 (state at:(from))))) (then (sow apply:(if (lt 1 (count at:(to))) (if (equals 0 (state at:(to))) (and (moveAgain) (set Var "Replay" (to)))) (if (is In (to) (sites Mover)) (if (notEqual 3 (count at:(if (is In (to) (sites Bottom)) (add (to) 6) (sub (to) 6)))) (if (notEqual 0 (count at:(if (is In (to) (sites Bottom)) (add (to) 6) (sub (to) 6)))) (fromTo (from (if (is In (to) (sites Bottom)) (add (to) 6) (sub (to) 6))) (to (handSite Mover)) count:(count at:(if (is In (to) (sites Bottom)) (add (to) 6) (sub (to) 6))))) (and {(fromTo (from (if (is In (to) (sites Bottom)) (add (to) 6) (sub (to) 6))) (to (to)) count:1) (set State at:(to) (mover)) (set State at:(if (is In (to) (sites Bottom)) (add (to) 6) (sub (to) 6)) (mover))})))))))} (then (if (and (not (is Next Mover)) (or (all Sites (sites P1) if:(or (notEqual 0 (state at:(site))) (is Empty (site)))) (all Sites (sites P2) if:(or (notEqual 0 (state at:(site))) (is Empty (site)))))) (and {(forEach Site (sites P1) (if (equals 0 (state at:(site))) (fromTo (from (site)) (to (handSite P1)) count:(count at:(site))))) (forEach Site (sites P2) (if (equals 0 (state at:(site))) (fromTo (from (site)) (to (handSite P2)) count:(count at:(site))))) (forEach Site (sites Board) (if (equals (state at:(site)) P1) (fromTo (from (site)) (to (handSite P1)) count:(count at:(site))) (if (equals (state at:(site)) P2) (fromTo (from (site)) (to (handSite P2)) count:(count at:(site))))))}))))) (end (if (all Sites (sites Board) if:(equals 0 (count at:(site)))) (byScore {(score P1 (count Cell at:(handSite P1))) (score P2 (count Cell at:(handSite P2)))}))))) 
