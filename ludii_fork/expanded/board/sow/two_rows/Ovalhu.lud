2x8 board, with a store on either end. Each player owns the store to their right. Eight counters in each hole. Players alternate turns sowing in an anti-clockwise direction from one of the holes on their side of the board. Sowing always includes the player's store (but not the opponent's store), and sowing cannot begin from the store. When the final counter lands in an occupied hole, the contents of that hole are picked up and sowing continues. If the last counter lands in the player's store, they may choose any of the holes on their side of the board and continue sowing from it. When the final counter lands in an empty hole, the counters in the opposite hole are captured. Play continues until all of the counters are captured. A new round begins. Players fill the holes on their side of the board with their captured counters. If a player cannot fill a hole with the required number of counters, the hole is closed and is out of play for that round. Play continues as before. Play continues in successive rounds until one player closes all of their opponent's holes and wins.
(game "Ovalhu" (players 2) (equipment {(mancalaBoard 2 8 {(track "Track1" "1,E,17,16,W" loop:True P1) (track "Track2" "1,E,N,W,0" loop:True P2)}) (piece "Seed" Shared) (map {(pair P1 LastSite) (pair P2 FirstSite)}) (regions P1 (sites Bottom)) (regions P2 (sites Top))}) (rules (start {(set RememberValue "Playable" (union (sites Top) (sites Bottom))) (set Count 8 to:(union (sites Bottom) (sites Top)))}) phases:{(phase "Sowing" (play (or {(move Select (from (if (and (is Pending) (is Prev Mover)) (sites {(var "Replay")}) (sites Mover)) if:(and (is Occupied (from)) (is In (from) (sites (values Remembered "Playable"))))) (then (sow "Track" owner:(mover) apply:(if (or (is In (to) (sites {(mapEntry P1) (mapEntry P2)})) (lt 1 (count at:(to)))) (and (moveAgain) (if (not (is In (to) (sites {(mapEntry P1) (mapEntry P2)}))) (and (set Pending) (set Var "Replay" (to))))) (if (is Occupied (if (is In (to) (sites Bottom)) (add (to) 8) (sub (to) 8))) (fromTo (from (if (is In (to) (sites Bottom)) (add (to) 8) (sub (to) 8))) (to (mapEntry Mover)) count:(count at:(if (is In (to) (sites Bottom)) (add (to) 8) (sub (to) 8)))))) skipIf:(and (not (is In (to) (sites {(mapEntry P1) (mapEntry P2)}))) (not (is In (to) (sites (values Remembered "Playable"))))))))} (then (if (no Pieces All in:(union (sites Top) (sites Bottom))) (forget Value "Playable" All))))) (end (if (no Pieces All in:(union (sites Top) (sites Bottom))) {(if (gt 8 (count at:(mapEntry P1))) (result P2 Win)) (if (gt 8 (count at:(mapEntry P2))) (result P1 Win))})) (nextPhase (no Pieces All in:(union (sites Top) (sites Bottom))) "BetweenRounds")) (phase "BetweenRounds" (play (if (not (all Sites (sites Mover) if:(is Occupied (site)))) (if (le 8 (count at:(mapEntry Mover))) (move (from (mapEntry Mover)) (to (sites Mover) if:(is Empty (to))) count:8 (then (remember Value "Playable" (last To))))))) (nextPhase (all Passed) "Sowing"))})) 
