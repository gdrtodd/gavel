2x7 board, with two stores. Each player owns the store to their left. Seven counters per hole. Players take counters from one hole and sow them in a clockwise direction starting in the next hole from which the counters were taken. Players include their own store when sowing but ignore their opponent's store. If last counter falls into an empty hole, move ends. If it is on the player's side, the counters in the opponent's hole opposite are taken and added to the player's store. If the last counter falls into the player's store, the player may sow counters from another hole on their side. If the last counter drops into an occupied hole on either side of the board, the counters are picked up and sowing continues until the last counter drops into an empty hole. When all of the counters are in the players' stores, a new round begins. Players fill their holes with the counters in their store. Any holes which cannot be filled with seven counters are out of play for this round; any extra counters go back in the store. Play continues until one player cannot fill any holes, and the opponent wins.
(game "Sungka" (players 2) (equipment {(mancalaBoard 2 7 (track "Track" "7,W,WNW,ENE,E,ESE" loop:True)) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (map {(pair P1 FirstSite) (pair P2 LastSite)}) (piece "Seed" Shared)}) (rules (start (set Count 7 to:(union (sites P1) (sites P2)))) phases:{(phase "Sowing" (play (move Select (from (if (and (is Prev Mover) (not (is Pending))) (sites {(var)}) (sites Mover)) if:(lt 0 (count at:(from)))) (then (sow apply:(if (equals (to) (mapEntry Mover)) (and (moveAgain) (set Pending)) (if (and {(is In (to) (sites Mover)) (equals (count at:(to)) 1) (lt 0 (count at:(if (is Mover P1) (add (to) 7) (sub (to) 7))))}) (fromTo (from (if (is Mover P1) (add (to) 7) (sub (to) 7))) (to (mapEntry (mover))) count:(count at:(if (is Mover P1) (add (to) 7) (sub (to) 7)))) (if (gt (count at:(to)) 1) (and (moveAgain) (set Var (to)))))) skipIf:(equals (to) (mapEntry Next)))))) (end (if (all Passed) {(if (gt 7 (count at:(mapEntry P1))) (result P2 Win)) (if (gt 7 (count at:(mapEntry P2))) (result P1 Win))})) (nextPhase (all Passed) "BetweenRounds")) (phase "BetweenRounds" (play (if (le 7 (count at:(mapEntry Mover))) (move (from (mapEntry Mover)) (to (intersection (sites Empty) (sites Mover))) count:7))) (nextPhase (all Passed) "Sowing"))})) 
