2x6 board. Four counters in each hole. Players sow from any of the holes in their row in an anti-clockwise direction. When the final counter of a sowing falls into an occupied hole (except in the scenario below), these are picked up and sowing continues. If the final counter falls into either an empty hole or one of the opponent's holes with three counters, making that hole now have four counters, the sowing ends. When the final counter falls into a hole in the opponent's row containing four counters after sowing concludes, this hole is marked. If a player sows their final counter into their opponent's marked hole, the final counter and one of the counters in the hole are captured. The player then gets another turn. If the final counter falls into a player's own marked hole, the turn ends. The contents of marked holes cannot be sown. The game ends when only marked holes contain counters. These are then captured by the players who marked them. A new game begins. The player with the most counters places four in each hole beginning from the left hole in their row. Each hole that contains four counters is owned by that player for the new round. If the player has three counters remaining after filling as many holes with four as possible, they borrow one counter from the opponent to make four and own the corresponding hole. If there are two or one remaining, the opponent borrows these to fill and own the last hole. Play continues until one player owns no more holes.
(game "Um el Banat" (players 2) (equipment {(mancalaBoard 2 6 store:None (track "Track" "0,E,N,W" loop:True)) (regions "Home" P1 (sites Bottom)) (regions "Home" P2 (sites Top)) (piece "Seed" Shared) (hand Each) (map "LeftMost" {(pair P1 0) (pair P2 11)})}) (rules (start {(set Count 4 to:(sites Track)) (set RememberValue "OwnedP1" (sites Bottom)) (set RememberValue "OwnedP2" (sites Top))}) phases:{(phase "Sowing" (play (or {(move Select (from (if (and (is Prev Mover) (equals 1 (var "ContinueSowing"))) (sites {(last To afterConsequence:True)}) (if (is Mover P1) (sites (values Remembered "OwnedP1")) (sites (values Remembered "OwnedP2")))) if:(and (lt 0 (count at:(from))) (equals 0 (state at:(from))))) (then (sow apply:(if (equals (next) (state at:(to))) (and {(move (from (to)) (to (handSite Mover)) count:(min 2 (count at:(to)))) (moveAgain) (set Var "ContinueSowing" 0)}) (if (equals (mover) (state at:(to))) (set Var "ContinueSowing" 0) (if (and (lt 1 (count at:(to))) (notEqual 4 (count at:(to)))) (and (moveAgain) (set Var "ContinueSowing" 1)) (if (and (equals 4 (count at:(to))) (not (is In (sites Mover "Home")))) (and (set State at:(to) (mover)) (set Var "ContinueSowing" 0)))))))))} (then (if (all Sites (forEach (sites Board) if:(equals 0 (state at:(site)))) if:(equals 0 (count at:(site)))) (and {(forEach Site (forEach (sites Board) if:(equals 1 (state at:(site)))) (fromTo (from (site)) (to (handSite P1)) count:(count at:(site)))) (forEach Site (forEach (sites Board) if:(equals 2 (state at:(site)))) (fromTo (from (site)) (to (handSite P2)) count:(count at:(site)))) (forget Value "OwnedP1" All) (forget Value "OwnedP2" All) (if (ge (add (count Cell at:(handSite 1)) (count in:(forEach (sites Board) if:(equals 1 (state at:(site)))))) (add (count Cell at:(handSite 2)) (count in:(forEach (sites Board) if:(equals 2 (state at:(site))))))) (set NextPlayer (player 1)) (set NextPlayer (player 2)))}))))) (end (if (all Sites (sites Board) if:(equals 0 (count at:(site)))) {(if (equals 0 (count Cell at:(handSite P1))) (result P2 Win)) (if (equals 0 (count Cell at:(handSite P2))) (result P1 Win))})) (nextPhase (all Sites (sites Board) if:(equals 0 (count at:(site)))) "BetweenRounds")) (phase "BetweenRounds" (play (if (le 4 (count Cell at:(handSite Mover))) (move (from (handSite Mover)) (to (trackSite FirstSite from:(mapEntry "LeftMost" Mover) if:(is Empty (to)))) count:4 (then (and {(if (is Mover P1) (remember Value "OwnedP1" (last To)) (remember Value "OwnedP2" (last To))) (if (le 4 (count Cell at:(handSite Mover))) (moveAgain) (if (equals 3 (count Cell at:(handSite Mover))) (and {(fromTo (from (handSite Mover)) (to (trackSite FirstSite from:(mapEntry "LeftMost" Mover) if:(is Empty (to)))) count:3) (fromTo (from (handSite Next)) (to (trackSite FirstSite from:(mapEntry "LeftMost" Mover) if:(is Empty (to)))) count:1) (if (is Mover P1) (remember Value "OwnedP1" (trackSite FirstSite from:(mapEntry "LeftMost" Mover) if:(is Empty (to)))) (remember Value "OwnedP2" (trackSite FirstSite from:(mapEntry "LeftMost" Mover) if:(is Empty (to)))))}) (fromTo (from (handSite Mover)) (to (handSite Next)) count:(count Cell at:(handSite Mover)))))}))))) (nextPhase (and (is Empty (handSite P1)) (is Empty (handSite P2))) "Sowing"))})) 
