2x3 board. Three counters in each hole. Players sow from any one of their holes. Sowing can occur in the following directions: From the leftmost hole, clockwise; from the rightmost hole, anti-clockwise; from the center hole, the player may choose either direction. If the final counter falls into a hole in the opponent's row containing one counter, making it now contain two, these are taken. If the holes before them also contain two, in an unbroken sequence, they may all be captured. Single counters cannot be sown. When neither player can move, the single counters in each player's rows are taken by the player belonging to those rows. The player with the most counters wins.
(game "Um el Tuweisat" (players 2) (equipment {(mancalaBoard 2 3 store:None {(track "TrackCCW" "0,E,N,W" loop:True) (track "TrackCW" "2,W,N,E" loop:True)}) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (map "RightHole" {(pair P1 2) (pair P2 3)}) (map "CenterHole" {(pair P1 1) (pair P2 4)}) (map "LeftHole" {(pair P1 0) (pair P2 5)}) (piece "Seed" Shared) (hand Each)}) (rules (start (set Count 3 to:(sites Track))) (play (or {(move Select (from (mapEntry "RightHole" (mover)) if:(gt (count at:(from)) 1)) (then (sow "TrackCCW" if:(and (equals (count at:(to)) 2) (is In (to) (sites Next))) apply:(fromTo (from (to)) (to (handSite Mover)) count:(count at:(to))) backtracking:True))) (move Select (from (mapEntry "LeftHole" (mover)) if:(gt (count at:(from)) 1)) (then (sow "TrackCW" if:(and (equals (count at:(to)) 2) (is In (to) (sites Next))) apply:(fromTo (from (to)) (to (handSite Mover)) count:(count at:(to))) backtracking:True))) (move Select (from (mapEntry "CenterHole" (mover)) if:(gt (count at:(from)) 1)) (then (sow "TrackCCW" if:(and (equals (count at:(to)) 2) (is In (to) (sites Next))) apply:(fromTo (from (to)) (to (handSite Mover)) count:(count at:(to))) backtracking:True))) (move Select (from (mapEntry "CenterHole" (mover)) if:(gt (count at:(from)) 1)) (then (sow "TrackCW" if:(and (equals (count at:(to)) 2) (is In (to) (sites Next))) apply:(fromTo (from (to)) (to (handSite Mover)) count:(count at:(to))) backtracking:True)))})) (end (if (and (no Moves P1) (no Moves P2)) (byScore {(score P1 (add (count Cell at:(handSite P1)) (count in:(sites P1)))) (score P2 (add (count Cell at:(handSite P2)) (count in:(sites P2))))}))))) 
