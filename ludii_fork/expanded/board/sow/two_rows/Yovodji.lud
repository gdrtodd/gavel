2x6 board. Four counters in each hole. A player picks up all of the counters in one of the holes in their row and sows them one-by-one in a counterclockwise direction in consecutive holes from the hole the pieces originated. The starting hole is always left empty, even if a player sows in a complete circuit of the board, the original house is skipped and sowing continues in the next hole after it. When the final counter falls into an occupied hole, these are picked up and sowing continues. When the final counter of a sowing lands on in an empty hole in the player's own row, the contents of the hole in the opponent's row opposite it are captured. If the opponent's holes are all empty, the other player must make a move placing counters in the opponent's row. If not possible, the player captures all the counters in their row. The player who has captured the most counters wins. If the game continues in a repeating loop, the players can agree to end the game and capture the counters remaining in their row.
(game "Yovodji" (players 2) (equipment {(mancalaBoard 2 6 store:None (track "Track" "0,E,N,W" loop:True)) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (piece "Seed" Shared) (hand Each)}) (rules (start (set Count 4 to:(sites Track))) (play (if (is Proposed "End") (or (move Vote "End") (move Vote "No")) (or (if (is Cycle) (move Propose "End")) (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover)) if:(lt 0 (count at:(from)))) (then (sow apply:(if (and (is In (to) (sites Next)) (or (equals (count at:(to)) 2) (equals (count at:(to)) 3))) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to))) (if (lt 1 (count at:(to))) (moveAgain) (if (and (is In (to) (sites Mover)) (lt 1 (count at:(if (is Mover P1) (add (to) 6) (sub (to) 6))))) (fromTo (from (if (is Mover P1) (add (to) 6) (sub (to) 6))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) 6) (sub (to) 6))))))) includeSelf:False backtracking:(and (is In (from) (sites Next)) (or (equals (count at:(from)) 2) (equals (count at:(from)) 3))))))))) (end (if (or (no Moves Mover) (is Decided "End")) (byScore {(score P1 (add (count Cell at:(handSite P1)) (count in:(sites P1)))) (score P2 (add (count Cell at:(handSite P2)) (count in:(sites P2))))}))))) 
