Each player has an allocated colour. The game is played in turns. On his first move, the second player may elect to swap colours (swap option). This is to prevent overly strong opening moves. Each turn the current player places one of their pegs on an empty hole, which may conquer one or more cells. A cell is conquered by the first player to occupy at least half of its surrounding holes. A blue rectangle is placed on cells conquered by Blue, and a red rectangle is placed on cells conquered by Red. The central cell, which has five holes, is conquered by the player who has occupied any three of these holes. The first player that completes a contiguous chain of connected cells of his colour between the 2 sides of his colour wins the game.
(game "ConHex" (players 2) (equipment {(board (add (keep (splitCrossings (merge (rotate 45 (dual (square 12 diagonals:Concentric))) (shift 3 3 (scale 6 (square 1))))) (poly {{3 3} {3 9} {9 9} {9 3}})) vertices:{{6 6}})) (piece "Marker" Each) (piece "Rectangle" Each) (regions "Holes" (union (difference (sites Board Vertex) (sites Outer Vertex)) (sites Corners Vertex))) (regions P1 {(sites Side N) (sites Side S)}) (regions P2 {(sites Side W) (sites Side E)})}) (rules (meta (swap)) (play (move Add (to Vertex (sites Empty Vertex) if:(is In (to) (sites "Holes"))) (then (forEach Site (sites Incident Cell of:Vertex at:(last To)) (if (if (is In (site) (sites Centre)) (ge (add (count Sites in:(intersection (intersection (sites Incident Vertex of:Cell at:(site)) (sites "Holes")) (sites Occupied by:Mover on:Vertex))) (if (equals (mover) (who Vertex at:(centrePoint Vertex))) 1 0)) 3) (ge (count Sites in:(intersection (intersection (sites Incident Vertex of:Cell at:(site)) (sites "Holes")) (sites Occupied by:Mover on:Vertex))) (if (is Even (count Sites in:(intersection (sites Incident Vertex of:Cell at:(site)) (sites "Holes")))) (div (count Sites in:(intersection (sites Incident Vertex of:Cell at:(site)) (sites "Holes"))) 2) (add (div (count Sites in:(intersection (sites Incident Vertex of:Cell at:(site)) (sites "Holes"))) 2) 1)))) (claim (piece (id "Rectangle" Mover)) (to Cell (site)))) (then (forEach Site (forEach (sites Incident Cell of:Vertex at:(last To)) if:(is Mover (who Cell at:(site)))) (if (is Connected at:(site) Mover) (trigger "Connected" Mover)))))))) (end {(if (is Triggered "Connected" Mover) (result Mover Win)) (if (le 52 (count Moves)) (result Mover Draw))}))) 
