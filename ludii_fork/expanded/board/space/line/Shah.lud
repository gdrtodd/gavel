Three concentric squares, with the midpoints of their sides connected with lines. Twelve pieces per player. Players take turns placing one of their pieces on an empty point on the board. The first player to make three in a row obtains the privilege of starting the next phase after all of the stones are placed; if no one makes three in a row the last player to place a stone begins the next phase. Ones all of the stones are placed, the player who has the right to begin the next phase removes any one of the opponent's stones, and the opponent does the same with one of the player's pieces. Then, players alternate turns moving one of their pieces to an empty adjacent space. When a player place three of their pieces in a row, they remove one of the opponent's pieces. If a player moves in such a way that the opponent cannot move, the player must make an extra move to allow the opponent a place to play. A player cannot capture an opponent's piece when this extra move is made. The player who captures all but two of the opponent's pieces wins. Games are usually played in sequence, starting with the winner of the previous game, with the first player to win five games in a row being the winner.
(game "Shah" (players 2) (equipment {(board (concentric Square rings:3) use:Vertex) (piece "Marker" Each (move Step (to if:(is Empty (to))) (then (if (and (not (is Prev Mover)) (is Line 3)) (moveAgain) (if (no Moves Next) (and (moveAgain) (set Pending))))))) (hand Each)}) (rules (start (place "Marker" "Hand" count:12)) phases:{(phase "Placement" (play (move (from (handSite Mover)) (to (sites Empty)) (then (and (if (and (lt (var) 1) (is Line 3)) (set Var (mover))) (if (and (all Sites (sites Hand P1) if:(equals 0 (count Cell at:(site)))) (all Sites (sites Hand P2) if:(equals 0 (count Cell at:(site))))) (if (lt (var) 1) (moveAgain) (set NextPlayer (player (var))))))))) (nextPhase (and (all Sites (sites Hand P1) if:(equals 0 (count Cell at:(site)))) (all Sites (sites Hand P2) if:(equals 0 (count Cell at:(site))))) "Remove")) (phase "Remove" (play (move Remove (sites Occupied by:Next container:"Board"))) (nextPhase Mover "Move")) (phase "Move" (play (if (and (not (is Pending)) (is Prev Mover)) (move Remove (sites Occupied by:Next container:"Board") (then (if (no Moves Next) (and (moveAgain) (set Pending))))) (if (is Pending) (do (forEach Piece (move Step (to if:(is Empty (to))))) ifAfterwards:(can Move (forEach Piece Next))) (forEach Piece)) (then (if (equals 2 (count Pieces P1)) (addScore P2 1 (then (if (notEqual (score P2) 5) (and {(remove (sites Occupied by:All)) (add (piece (id "Marker" P1)) (to (handSite P1)) count:12) (add (piece (id "Marker" P2)) (to (handSite P2)) count:12)})))) (if (equals 2 (count Pieces P2)) (addScore P1 1 (then (if (notEqual (score P1) 5) (and {(remove (sites Occupied by:All)) (add (piece (id "Marker" P1)) (to (handSite P1)) count:12) (add (piece (id "Marker" P2)) (to (handSite P2)) count:12)}))))))))) (nextPhase (equals 0 (count Sites in:(sites Occupied by:All container:"Board"))) "Placement"))} (end (if (equals (score Mover) 5) (result Mover Win))))) 
