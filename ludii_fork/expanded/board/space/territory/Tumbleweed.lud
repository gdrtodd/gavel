Tumbleweed is played with stackable tokens on a hexhex board. A stack is said to be seen from a hex when they are connected by a straight line, with no stacks in between. The players take turns settling hexes by placing a stack of their tokens on a hex of their choice. The height of a new stack is equal to the number of friendly stacks seen from the settled hex. Removing a stack occupying a hex and re-settling it with a new stack is possible, only as long as the new stack is taller than the previous one. This works with opponent stacks (to capture), or your own stacks (to reinforce). The board is initially empty, except for a central neutral (blue) two-stack. The first player sets up initial one-stacks: White and Red. The second player then chooses which side he wants to play, by clicking on a stone. Red goes first. The game ends when no more moves can be made by either player, or after two successive passes. The player who occupies over half the board wins. The program automatically scores indirectly controlled territory. Played on a size 8 board.
(game "Tumbleweed" (players 2) (equipment {(board (hex 8)) (piece "Disc" Each) (piece "Disc" Neutral)}) (rules (start (place Stack "Disc0" (centrePoint) count:2)) phases:{(phase "Opening" (play (if (equals 0 (count Moves)) (move Add (piece "Disc1") (to (sites Empty)) (then (moveAgain))) (if (equals 1 (count Moves)) (move Add (piece "Disc2") (to (sites Empty))) (move Select (from (union (sites Occupied by:P1) (sites Occupied by:P2))) (then (if (equals 1 (who at:(last From))) (do (swap Players 1 2) next:(set NextPlayer (player 1))) (pass))))))) (nextPhase (equals 3 (count Moves)) "Play")) (phase "Play" (play (or (move Select (from (forEach (sites Board) if:(gt (count Sites in:(intersection (sites Occupied by:Mover) (sites LineOfSight at:(site)))) (size Stack at:(site))))) (then (add (to (last From)) count:(sub (count Sites in:(intersection (sites Occupied by:Mover) (sites LineOfSight at:(last From)))) (size Stack at:(last From))) stack:True))) (move Pass))))} (end (if (all Passed) (byScore {(score P1 (add (count Sites in:(sites Occupied by:P1)) (count Sites in:(forEach (sites Empty) if:(gt (count Sites in:(intersection (sites Occupied by:P1) (sites LineOfSight at:(site)))) (count Sites in:(intersection (sites Occupied by:P2) (sites LineOfSight at:(site))))))))) (score P2 (add (count Sites in:(sites Occupied by:P2)) (count Sites in:(forEach (sites Empty) if:(gt (count Sites in:(intersection (sites Occupied by:P2) (sites LineOfSight at:(site)))) (count Sites in:(intersection (sites Occupied by:P1) (sites LineOfSight at:(site)))))))))}))))) 
