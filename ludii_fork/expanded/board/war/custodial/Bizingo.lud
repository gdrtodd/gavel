A player can move a piece to any empty adjacent cell of the same color; so, on an open board, six moves are possible. Throughout the game, a player's pieces are restricted to cells of the same color. A captured piece is immediately removed from the game. A player captures a regular enemy piece by surrounding it on three sides. A player captures an enemy captain by surrounding it on three sides, with the caveat that one of the surrounding pieces must be a captain. (Three regular pieces are insufficient and the enemy captain would be unaffected.) An enemy piece on the edge of the board can be captured by surrounding it on two sides, with the caveat that one of the surrounding pieces must be a captain. (Two regular pieces are insufficient.) If a piece (regular or captain) is moved to a cell already surrounded by three enemy pieces, it is instantly captured, unless the move itself performed a capture. A player wins the game by reducing the opponent to two pieces.
(game "Bizingo" (players 2) (equipment {(board (remove (tri 13) cells:{0 1 13 25 11 12 24 36 165 166 167 168})) (piece "Thrall" Each (move Step (to if:(and (is Empty (to)) (equals (phase of:(from)) (phase of:(to))))) (then (and {(if (not (can Move (or {(surround (from (last To)) Orthogonal (between if:(and {(is In (between) (sites Outer)) (equals 0 (phase of:(between))) (is Enemy (who at:(between)))}) (apply (remove (between)))) (to if:(is Friend (who at:(to)))) with:(piece (id "Jarl" Mover))) (surround (from (last To)) Orthogonal (between if:(and (or (not (is In (between) (sites Outer))) (and (is In (between) (sites Outer)) (equals 1 (phase of:(between))))) (equals (what at:(between)) (id "Thrall" Next))) (apply (remove (between)))) (to if:(is Friend (who at:(to))))) (surround (from (last To)) Orthogonal (between if:(and (or (not (is In (between) (sites Outer))) (and (is In (between) (sites Outer)) (equals 1 (phase of:(between))))) (equals (what at:(between)) (id "Jarl" Next))) (apply (remove (between)))) (to if:(is Friend (who at:(to)))) with:(piece (id "Jarl" Mover)))}))) (if (equals 3 (count Sites in:(intersection (sites Around (last To) Orthogonal) (sites Occupied by:Next)))) (remove (last To)))) (surround (from (last To)) Orthogonal (between if:(and {(is In (between) (sites Outer)) (equals 0 (phase of:(between))) (is Enemy (who at:(between)))}) (apply (remove (between)))) (to if:(is Friend (who at:(to)))) with:(piece (id "Jarl" Mover))) (surround (from (last To)) Orthogonal (between if:(and (or (not (is In (between) (sites Outer))) (and (is In (between) (sites Outer)) (equals 1 (phase of:(between))))) (equals (what at:(between)) (id "Thrall" Next))) (apply (remove (between)))) (to if:(is Friend (who at:(to))))) (surround (from (last To)) Orthogonal (between if:(and (or (not (is In (between) (sites Outer))) (and (is In (between) (sites Outer)) (equals 1 (phase of:(between))))) (equals (what at:(between)) (id "Jarl" Next))) (apply (remove (between)))) (to if:(is Friend (who at:(to)))) with:(piece (id "Jarl" Mover)))})))) (piece "Jarl" Each (move Step (to if:(and (is Empty (to)) (equals (phase of:(from)) (phase of:(to))))) (then (and {(if (not (can Move (or {(surround (from (last To)) Orthogonal (between if:(and {(is In (between) (sites Outer)) (equals 0 (phase of:(between))) (is Enemy (who at:(between)))}) (apply (remove (between)))) (to if:(is Friend (who at:(to)))) with:(piece (id "Jarl" Mover))) (surround (from (last To)) Orthogonal (between if:(and (or (not (is In (between) (sites Outer))) (and (is In (between) (sites Outer)) (equals 1 (phase of:(between))))) (equals (what at:(between)) (id "Thrall" Next))) (apply (remove (between)))) (to if:(is Friend (who at:(to))))) (surround (from (last To)) Orthogonal (between if:(and (or (not (is In (between) (sites Outer))) (and (is In (between) (sites Outer)) (equals 1 (phase of:(between))))) (equals (what at:(between)) (id "Jarl" Next))) (apply (remove (between)))) (to if:(is Friend (who at:(to)))) with:(piece (id "Jarl" Mover)))}))) (if (equals 3 (count Sites in:(intersection (sites Around (last To) Orthogonal) (sites Occupied by:Next)))) (remove (last To)))) (surround (from (last To)) Orthogonal (between if:(and {(is In (between) (sites Outer)) (equals 0 (phase of:(between))) (is Enemy (who at:(between)))}) (apply (remove (between)))) (to if:(is Friend (who at:(to)))) with:(piece (id "Jarl" Mover))) (surround (from (last To)) Orthogonal (between if:(and (or (not (is In (between) (sites Outer))) (and (is In (between) (sites Outer)) (equals 1 (phase of:(between))))) (equals (what at:(between)) (id "Thrall" Next))) (apply (remove (between)))) (to if:(is Friend (who at:(to))))) (surround (from (last To)) Orthogonal (between if:(and (or (not (is In (between) (sites Outer))) (and (is In (between) (sites Outer)) (equals 1 (phase of:(between))))) (equals (what at:(between)) (id "Jarl" Next))) (apply (remove (between)))) (to if:(is Friend (who at:(to)))) with:(piece (id "Jarl" Mover)))}))))}) (rules (start {(place "Thrall1" (sites {32 33 34 35 36 53 54 55 56 57 58 72 74 75 76 78})) (place "Jarl1" (sites {73 77})) (place "Thrall2" (sites {137 138 139 126 127 128 129 113 114 115 116 117 98 100 101 103})) (place "Jarl2" (sites {99 102}))}) (play (forEach Piece)) (end (forEach Player if:(le (count Pieces Player) 2) (result Player Loss))))) 
