21 holes, arranged in an arc, the central hole larger than the others. Ten pieces per player, each player's pieces beginning on one side of the board, one in each hole. Four beans used as dice, with a black side and a white side. The throws are as follows: Four white sides up = 4; four black sides up = 3; two white/two black up = 2; three white or three black = player loses their turn. Players continue to throw until they lose their turn. If a piece lands in the central hole, and it cannot move from it on its next opportunity, it is removed from the game. Pieces moving into the opponent's side of the board capture any of the opponent's pieces which occupy a space on which they land. When a piece reaches the end of the track, they proceed back in the other direction. The player who captures all ten of the opponent's pieces wins.
(game "Mapuche Game" (players 2) (equipment {(board (remove (concentric {26}) vertices:{0 1 2 3 4}) {(track "TrackCW1" {0 2 4 6 8 10 12 14 16 18 20 19 17 15 13 11 9 7 5 3 1} P1 directed:True) (track "TrackCCW1" {1 3 5 7 9 11 13 15 17 19 20 18 16 14 12 10 8 6 4 2 0} P1 directed:True) (track "TrackCW2" {0 2 4 6 8 10 12 14 16 18 20 19 17 15 13 11 9 7 5 3 1} P2 directed:True) (track "TrackCCW2" {1 3 5 7 9 11 13 15 17 19 20 18 16 14 12 10 8 6 4 2 0} P2 directed:True)} use:Vertex) (regions "AllSitesExceptTop" (difference (sites Board) 20)) (piece "Marker" Each (if (notEqual (if (equals 0 (state at:(from))) (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips)))) -1) (if (or (is In (if (equals 0 (state at:(from))) (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips)))) (sites Empty)) (is Enemy (who at:(if (equals 0 (state at:(from))) (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips))))))) (move (from) (to (if (equals 0 (state at:(from))) (trackSite Move "TrackCW" steps:(mapEntry "ThrowDiceValue" (count Pips))) (trackSite Move "TrackCCW" steps:(mapEntry "ThrowDiceValue" (count Pips)))) (apply if:(is Enemy (who at:(to))) (remove (to)))))))) (dice d:2 from:0 num:4) (map "ThrowDiceValue" {(pair 0 4) (pair 1 0) (pair 2 2) (pair 3 0) (pair 4 3)}) (hand Each)}) (rules (start {(place "Marker1" (sites {0 2 4 6 8 10 12 14 16 18})) (place "Marker2" (sites {1 3 5 7 9 11 13 15 17 19}) state:1)}) (play (do (roll) next:(if (can Move (if (notEqual (mapEntry "ThrowDiceValue" (count Pips)) 0) (forEach Piece))) (forEach Piece (then (if (notEqual (mapEntry "ThrowDiceValue" (count Pips)) 0) (moveAgain)))) (move Pass (then (if (notEqual (mapEntry "ThrowDiceValue" (count Pips)) 0) (moveAgain))))) (then (and (if (and (is Occupied 20) (notEqual 20 (last To))) (remove 20)) (if (equals (last To) (if (equals 0 (state at:(last To))) (trackSite EndSite Mover "TrackCW") (trackSite EndSite Mover "TrackCCW"))) (if (equals 0 (state at:(last To))) (set State at:(last To) 1) (set State at:(last To) 0))))))) (end {(if (no Pieces P1) (result P1 Loss)) (if (no Pieces P2) (result P2 Loss))}))) 
