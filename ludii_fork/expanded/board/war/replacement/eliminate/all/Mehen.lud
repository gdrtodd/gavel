6 spherical pieces and 6 lion or lioness pieces per player. Up to six players. Four throwing sticks as dice. Players enter their spherical pieces on the board with a throw of one. They then race to the center of the spiral. The central space must be reached with an exact throw. To leave the central space, the player must throw two ones. The player then races in the opposite direction to leave the board. When a piece leaves the board, that player introduces a lion piece, that player being the only one to introduce lion pieces. The player introduces more lions with each piece this player moves off the board. The lion races to the central spot, doubling the number of the throws. The lion attempts to capture the other player's pieces by landing on them. The rules are describing with the Kendall ruleset.
(game "Mehen" (players 2) (equipment {(board (spiral turns:5 sites:88) {(track "NormalTrack" {87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 -2} directed:True) (track "OppositeTrack" {0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 -2} directed:True)} use:Vertex) (dice d:2 from:0 num:4) (hand Each size:2) (piece "Disc" Each (if (and (equals (trackSite Move steps:(count Pips)) -2) (is Empty 0)) (move Select (from) (then (and (remove (last To)) (add (piece (id "Marker" Mover)) (to 0))))) (if (notEqual (trackSite Move "NormalTrack" steps:(count Pips)) -1) (if (is In (trackSite Move "NormalTrack" steps:(count Pips)) (sites Empty)) (move (from) (to (trackSite Move "NormalTrack" steps:(count Pips)))))))) (piece "Marker" Each (if (equals (trackSite Move "OppositeTrack" steps:(count Pips)) -2) (move Select (from) (then (and (remove (last To)) (add (piece (id "Lion" Mover)) (to (handSite Mover 1)))))) (if (notEqual (trackSite Move "OppositeTrack" steps:(count Pips)) -1) (if (is In (trackSite Move "OppositeTrack" steps:(count Pips)) (sites Empty)) (move (from) (to (trackSite Move "OppositeTrack" steps:(count Pips)))))))) (piece "Lion" Each (or (if (and (notEqual (trackSite Move "OppositeTrack" steps:(mul (count Pips) 2)) -1) (notEqual (trackSite Move "OppositeTrack" steps:(mul (count Pips) 2)) -2)) (if (not (is Friend (who at:(trackSite Move "OppositeTrack" steps:(mul (count Pips) 2))))) (move (from) (to (trackSite Move "OppositeTrack" steps:(mul (count Pips) 2)))))) (if (and (notEqual (trackSite Move "NormalTrack" steps:(mul (count Pips) 2)) -1) (notEqual (trackSite Move "NormalTrack" steps:(mul (count Pips) 2)) -2)) (if (not (is Friend (who at:(trackSite Move "NormalTrack" steps:(mul (count Pips) 2))))) (move (from) (to (trackSite Move "NormalTrack" steps:(mul (count Pips) 2))))))))}) (rules (start {(place "Disc1" (handSite P1) count:6) (place "Disc2" (handSite P2) count:6)}) (play (do (roll) next:(or {(if (and {(equals (count Pips) 1) (is Empty 87) (is Occupied (handSite Mover))}) (move (from (handSite Mover)) (to 87))) (if (and {(equals (count Pips) 1) (not (is Friend (who at:87))) (is Occupied (handSite Mover 1))}) (move (from (handSite Mover 1)) (to 87))) (forEach Piece)}))) (end (if (no Pieces Next) (result Next Loss))))) 
