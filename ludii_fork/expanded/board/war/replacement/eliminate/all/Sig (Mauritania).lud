The board consists of four rows of any number of holes. Two to twelve players, who play on two equal teams. The number of pieces per team is equal to the number of holes in one row. One team plays as pieces of camel dung, the other as sticks. The pieces begin, one in each hole, in the outer rows of the board. Eight sticks, used as dice, with a marked side and a blank side. The values of the throws are equal to the number of marked sides which land face up. A throw of 4 grants the player another throw. Pieces can only be moved for the first time with a throw of 1 or 8. One piece may move one space on a throw of 1, or eight pieces may each move one space on a throw of 8. Once a piece has made its initial move, it may move according to the throws of the sticks. The bottom team's pieces move from right to left in the home row, left to right in the next row, right to left in the third row, and then into the opponent's home row. The top team moves left to right (from their perspective) in their home row, right to left in the next row, left to right in the next row, and into the bottom player's home row. When a team's piece lands on a space in the central two rows occupied by an opponent's piece, the opponent's piece is captured. Pieces cannot be captured in the home rows. When a piece moves into the opponent's home row, they move back into the central two rows, moving in the opposite direction as before. After moving into the home row a piece can no longer be captured, even when it is in the central two rows. Play continues until both team's pieces have moved out of their home row and can no longer be captured. Players then alternate turns throwing the sticks, removing one of the opponent's pieces every time a 4 is thrown. A team wins when only their pieces are left on the board. The game involves 4 players. Each row has 20 Holes.
(game "Sig (Mauritania)" (players 4) (equipment {(board (rectangle 4 20) {(track "Track1" "19,W,N1,E,N1,W,N1,E" P1 directed:True) (track "Track2" "79,W,S1,E,S1,W,S1,E" P2 directed:True) (track "LoopTrack1" "40,E,S1,W" loop:True P1) (track "LoopTrack2" "20,E,N1,W" loop:True P2) (track "GoBackTrack1" "79,W,S1,E,S1,W" P1 directed:True) (track "GoBackTrack2" "19,W,N1,E,N1,W" P2 directed:True)} use:Vertex) (dice d:2 from:0 num:8) (piece "Marker" P1 (if (lt (state at:(from)) 2) (or (if (le (var) 0) (move (from (from) if:(if (lt 0 (state at:(from))) True (is In (count Pips) (sites {1 8})))) (to (trackSite Move "Track" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (or (is Empty (to)) (and (is Enemy (who at:(to))) (lt (state at:(to)) 2))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (if (not (lt 0 (state at:(last To)))) (set State at:(last To) 1))))) (if (or (equals (count Pips) 8) (gt (var) 0)) (move (from (from)) (to (trackSite Move "Track" steps:1) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (or (is Empty (to)) (and (is Enemy (who at:(to))) (lt (state at:(to)) 2))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (and (if (not (lt 0 (state at:(last To)))) (set State at:(last To) 1)) (if (gt (var) 0) (and (if (gt (var) 1) (moveAgain)) (set Var (sub (var) 1))) (and (set Var (sub (count Pips) 1)) (moveAgain))))))) (then (if (is In (last To) (if (is In (mover) (players Team1)) (sites Top) (sites Bottom))) (set State at:(last To) 2)))) (if (equals (state at:(from)) 2) (move (from (from)) (to (trackSite Move "GoBackTrack" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (not (is Friend (who at:(to)))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (if (is In (last To) (difference (sites Board) (union (sites Top) (sites Bottom)))) (set State at:(last To) 3)))) (if (equals (state at:(from)) 3) (move (from (from)) (to (trackSite Move "LoopTrack" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (not (is Friend (who at:(to)))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to)))))))))) (piece "Stick" P2 (if (lt (state at:(from)) 2) (or (if (le (var) 0) (move (from (from) if:(if (lt 0 (state at:(from))) True (is In (count Pips) (sites {1 8})))) (to (trackSite Move "Track" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (or (is Empty (to)) (and (is Enemy (who at:(to))) (lt (state at:(to)) 2))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (if (not (lt 0 (state at:(last To)))) (set State at:(last To) 1))))) (if (or (equals (count Pips) 8) (gt (var) 0)) (move (from (from)) (to (trackSite Move "Track" steps:1) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (or (is Empty (to)) (and (is Enemy (who at:(to))) (lt (state at:(to)) 2))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (and (if (not (lt 0 (state at:(last To)))) (set State at:(last To) 1)) (if (gt (var) 0) (and (if (gt (var) 1) (moveAgain)) (set Var (sub (var) 1))) (and (set Var (sub (count Pips) 1)) (moveAgain))))))) (then (if (is In (last To) (if (is In (mover) (players Team1)) (sites Top) (sites Bottom))) (set State at:(last To) 2)))) (if (equals (state at:(from)) 2) (move (from (from)) (to (trackSite Move "GoBackTrack" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (not (is Friend (who at:(to)))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))) (then (if (is In (last To) (difference (sites Board) (union (sites Top) (sites Bottom)))) (set State at:(last To) 3)))) (if (equals (state at:(from)) 3) (move (from (from)) (to (trackSite Move "LoopTrack" steps:(count Pips)) if:(if (is In (to) (difference (sites Board) (union (sites Top) (sites Bottom)))) (not (is Friend (who at:(to)))) (is Empty (to))) (apply (if (is Enemy (who at:(to))) (remove (to))))))))))}) (rules (start {(place "Marker1" (sites Bottom)) (place "Stick2" (sites Top)) (set Team 1 {P1 P3}) (set Team 2 {P2 P4})}) phases:{(phase "MovingPhase" (play (do (if (le (var) 0) (roll)) next:(if (is In (mover) (players Team1)) (forEach Piece P1) (forEach Piece P2)) (then (if (equals (count Pips) 4) (moveAgain))))) (nextPhase (and (equals 0 (count Sites in:(difference (sites Occupied by:All) (difference (sites Board) (union (sites Top) (sites Bottom)))))) (equals 0 (count Sites in:(forEach (sites Occupied by:All) if:(lt (state at:(site)) 2))))) "RemovingPhase")) (phase "RemovingPhase" (play (do (roll) next:(if (equals (count Pips) 4) (move Remove (sites Occupied by:Enemy))))))} (end (if (no Pieces Enemy) (result TeamMover Win))))) 
