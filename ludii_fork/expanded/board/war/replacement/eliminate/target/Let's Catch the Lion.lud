Each player starts the game with four pieces: - a Lion (king) in the center of the home row - a Giraffe (rook) to the right of the king - an Elephant (bishop) to the left of the king - a Chick (pawn) in front of the king Each piece moves as in standard shogi, but is limited to moving one square per turn. If the Chick advances to reach the final rank, it promotes to a Hen, which can move one square any way except diagonally backwards (like the gold general in shogi). As in shogi, if a Hen is captured, it may only be dropped back into play as a Chick. However, standard restrictions on where one may drop a Chick, such as not being allowed to give immediate checkmate, have two Chicks on a file, or drop the Chick on the final rank, do not apply. A chick dropped on the final rank, however, does not promote (and may make no further moves until it is recaptured). If the players play the same position three turns in a row, the game is a draw.
(game "Let's Catch the Lion" (players {(player N) (player S)}) (equipment {(board (rectangle 4 3)) (tile "Giraffe" Each (move Step Orthogonal (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (if (equals (what at:(to)) (id "Lion" Next)) (remove (to)) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to))))))))))) (tile "Elephant" Each (move Step Diagonal (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (if (equals (what at:(to)) (id "Lion" Next)) (remove (to)) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to))))))))))) (tile "Chick" Each (move Step Forward (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (if (equals (what at:(to)) (id "Lion" Next)) (remove (to)) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to))))))))) (then (if (is In (last To) (sites Mover "LastRank")) (move Promote (last To) (piece (id "Chicken" Mover))))))) (tile "Chicken" Each (move Step (directions {Forward Backward Rightward Leftward FL FR}) (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (if (equals (what at:(to)) (id "Lion" Next)) (remove (to)) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to))))))))))) (tile "Lion" Each (move Step Adjacent (to if:(not (is Friend (who at:(to)))) (apply (if (is Enemy (who at:(to))) (if (equals (what at:(to)) (id "Lion" Next)) (remove (to)) (add (piece (mapEntry "Captured" (what at:(to)))) (to (mapEntry "Where" (what at:(to))))))))))) (map "Captured" {(pair (id "Giraffe" P1) (id "Giraffe" P2)) (pair (id "Giraffe" P2) (id "Giraffe" P1)) (pair (id "Elephant" P1) (id "Elephant" P2)) (pair (id "Elephant" P2) (id "Elephant" P1)) (pair (id "Chick" P1) (id "Chick" P2)) (pair (id "Chick" P2) (id "Chick" P1)) (pair (id "Chicken" P1) (id "Chick" P2)) (pair (id "Chicken" P2) (id "Chick" P1))}) (map "Where" {(pair (id "Giraffe" P1) (handSite P2)) (pair (id "Giraffe" P2) (handSite P1)) (pair (id "Elephant" P1) (handSite P2 1)) (pair (id "Elephant" P2) (handSite P1 1)) (pair (id "Chick" P1) (handSite P2 2)) (pair (id "Chick" P2) (handSite P1 2)) (pair (id "Chicken" P1) (handSite P2 2)) (pair (id "Chicken" P2) (handSite P1 2))}) (regions "LastRank" P1 (sites Top)) (regions "LastRank" P2 (sites Bottom)) (hand Each size:3)}) (rules (start {(place "Giraffe1" coord:"C1") (place "Giraffe2" coord:"A4") (place "Chick1" coord:"B2") (place "Chick2" coord:"B3") (place "Lion1" coord:"B1") (place "Lion2" coord:"B4") (place "Elephant1" coord:"A1") (place "Elephant2" coord:"C4")}) (play (or (move (from (sites Occupied by:Mover container:"Hand" components:{"Giraffe" "Chick" "Elephant"})) (to (sites Empty))) (forEach Piece))) (end {(if (is Cycle) (result Mover Draw)) (if (or (equals (where "Lion" Next) -1) (is In (where "Lion" Mover) (sites Mover "LastRank"))) (result Mover Win))}))) 
