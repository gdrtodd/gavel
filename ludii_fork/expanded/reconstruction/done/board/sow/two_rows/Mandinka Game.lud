The game Mandinka Game is played by two players on a 2 x 6 Mancala board with 2 none stores. Regions: RegionP1: the bottom sites of the board for P1 RegionP2: the top sites of the board for P2 All players play with null The following pieces are shared by all players: Seeds. Players take turns moving. Setup: Set the count of the vertexes in track of board to 6. Rules: If The proposed is End, cast a vote with possible vote options [End] or cast a vote with possible vote options [No], else if we have repeated the same state three times, propose the following options [End] or select Vertex in RegionP1 or RegionP2 if 0 is less than the total number of vertex in the location of the piece then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, captureRule: to is in RegionP1 or RegionP2 and the total number of vertex in to is equal to 2 or the total number of vertex in to is equal to 3, backtracking: true, captureEffect: from vertex in to to vertex Player the moving player's hand site 0 moveRule: true, type: Vertex, includeSelf: false. Aim: If the moving player cannot move or End has been made, the game ends and the player with the highest score wins. The Mandinka Game (Ludii 1) ruleset.
(game "Mandinka Game" (players 2) (equipment {(mancalaBoard 2 6 store:None (track "Track" "5,W,N,E" loop:True)) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (piece "Seed" Shared) (hand Each)}) (rules (start (set Count 6 to:(sites Track))) (play (if (is Proposed "End") (or (move Vote "End") (move Vote "No")) (or (if (is Cycle) (move Propose "End")) (do (move Select (from (sites Mover) if:(lt 0 (count at:(from)))) (then (sow if:(and (is In (to) (sites Next)) (or (equals (count at:(to)) 2) (equals (count at:(to)) 3))) apply:(fromTo (from (to)) (to (handSite Mover)) count:(count at:(to))) includeSelf:False backtracking:True))) ifAfterwards:(lt 0 (count in:(sites Next))))))) (end (if (or (no Moves Mover) (is Decided "End")) (byScore {(score P1 (add (count Cell at:(handSite P1)) (count in:(sites P1)))) (score P2 (add (count Cell at:(handSite P2)) (count in:(sites P2))))}))))) 
