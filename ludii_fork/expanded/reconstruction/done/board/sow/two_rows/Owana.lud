The game Owana is played by two players on a 2 x 4 Mancala board with 2 outer stores. Regions: RegionP1: the bottom sites of the board for P1 RegionP2: the top sites of the board for P2 All players play with null The following pieces are shared by all players: Seeds. Players take turns moving. Setup: Set the count of the vertexes in track of board to 4. Rules: If The proposed is End, cast a vote with possible vote options [End] or cast a vote with possible vote options [No], else if we have repeated the same state three times, propose the following options [End] or select Vertex in if in the same turn if 0 is less than the total number of vertex in the location of the piece then Sow with the following rules, startLoc: the to location of the last move, countFn: the total number of vertex in the to location of the last move, numPerHoleFn: 1, origin: false, captureRule: true, backtracking: the location of the piece is in RegionP1 or RegionP2 and the total number of vertex in the location of the piece is equal to 2 or the total number of vertex in the location of the piece is equal to 3, captureEffect: if to is in RegionP1 or RegionP2 and the total number of vertex in to is equal to 2 or the total number of vertex in to is equal to 3, from vertex in to to vertex Player the moving player's hand site 0 moveRule: true, else if 1 is less than the total number of vertex in to, move again, else if to is in RegionP1 or RegionP2 and 1 is less than the total number of vertex in if 1 is the mover then add the following values: [to,6] otherwise to minus 6, from vertex in if 1 is the mover then add the following values: [to,6] otherwise to minus 6 to vertex Player the moving player's hand site 0 moveRule: true, type: Vertex, includeSelf: false. Aim: If all sites in [1,2,3,4] satisfy the condition 0 is equal to the total number of vertex in current site, player two wins If all sites in [5,6,7,8] satisfy the condition 0 is equal to the total number of vertex in current site, player one wins. The Owana (Ludii 1) ruleset.
(game "Owana" (players 2) (equipment {(mancalaBoard 2 4 (track "Track" "1,E,N,W" loop:True)) (regions P1 (sites Bottom)) (regions P2 (sites Top)) (piece "Seed" Shared) (hand Each)}) (rules (start (set Count 4 to:(sites Track))) (play (if (is Proposed "End") (or (move Vote "End") (move Vote "No")) (or (if (is Cycle) (move Propose "End")) (move Select (from (if (is Prev Mover) (sites {(last To afterConsequence:True)}) (sites Mover)) if:(lt 0 (count at:(from)))) (then (sow apply:(if (and (is In (to) (sites Next)) (or (equals (count at:(to)) 2) (equals (count at:(to)) 3))) (fromTo (from (to)) (to (handSite Mover)) count:(count at:(to))) (if (lt 1 (count at:(to))) (moveAgain) (if (and (is In (to) (sites Mover)) (lt 1 (count at:(if (is Mover P1) (add (to) 6) (sub (to) 6))))) (fromTo (from (if (is Mover P1) (add (to) 6) (sub (to) 6))) (to (handSite Mover)) count:(count at:(if (is Mover P1) (add (to) 6) (sub (to) 6))))))) includeSelf:False backtracking:(and (is In (from) (sites Next)) (or (equals (count at:(from)) 2) (equals (count at:(from)) 3))))))))) (end {(if (all Sites (sites P1) if:(equals 0 (count at:(site)))) (result P2 Win)) (if (all Sites (sites P2) if:(equals 0 (count at:(site)))) (result P1 Win))}))) 
