The game Davxar Zirge (Type 2) is played by two players on a noshape board with nobasis tiling. All players play with Markers. Rules for Pieces: Markers step adjacent. Players take turns moving. Rules: If in the same turn, remove pieces at not if a player places 4 [Lgame.functions.ints.IntFunction;@3932c79a pieces in an north direction line then a player places 4 of their pieces in an north direction line else a player places 3 of their pieces in an north direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@782859e pieces in an ne direction line then a player places 4 of their pieces in an ne direction line else a player places 3 of their pieces in an ne direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@23f5b5dc pieces in an east direction line then a player places 4 of their pieces in an east direction line else a player places 3 of their pieces in an east direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@34bde49d pieces in an se direction line then a player places 4 of their pieces in an se direction line else a player places 3 of their pieces in an se direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@1b1cfb87 pieces in an south direction line then a player places 4 of their pieces in an south direction line else a player places 3 of their pieces in an south direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@821330f pieces in an sw direction line then a player places 4 of their pieces in an sw direction line else a player places 3 of their pieces in an sw direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@6f43c82 pieces in an west direction line then a player places 4 of their pieces in an west direction line else a player places 3 of their pieces in an west direction line or if a player places 4 [Lgame.functions.ints.IntFunction;@5db6b9cd pieces in an nw direction line then a player places 4 of their pieces in an nw direction line else a player places 3 of their pieces in an nw direction line sites occupied by any component owned by Next in Board, else from vertex in Player the moving player's hand site 0 to vertex in the set of empty vertexs moveRule: true then if if a player places 4 [Lgame.functions.ints.IntFunction;@210ab13f pieces in an north direction line then a player places 4 of their pieces in an north direction line else a player places 3 of their pieces in an north direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@20b2475a pieces in an ne direction line then a player places 4 of their pieces in an ne direction line else a player places 3 of their pieces in an ne direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@7857fe2 pieces in an east direction line then a player places 4 of their pieces in an east direction line else a player places 3 of their pieces in an east direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@6f15d60e pieces in an se direction line then a player places 4 of their pieces in an se direction line else a player places 3 of their pieces in an se direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@1be2019a pieces in an south direction line then a player places 4 of their pieces in an south direction line else a player places 3 of their pieces in an south direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@29d80d2b pieces in an sw direction line then a player places 4 of their pieces in an sw direction line else a player places 3 of their pieces in an sw direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@58e1d9d pieces in an west direction line then a player places 4 of their pieces in an west direction line else a player places 3 of their pieces in an west direction line or if a player places 4 [Lgame.functions.ints.IntFunction;@446a1e84 pieces in an nw direction line then a player places 4 of their pieces in an nw direction line else a player places 3 of their pieces in an nw direction line, move again if in the same turn, remove pieces at not if a player places 4 [Lgame.functions.ints.IntFunction;@4f0f2942 pieces in an north direction line then a player places 4 of their pieces in an north direction line else a player places 3 of their pieces in an north direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@2657d4dd pieces in an ne direction line then a player places 4 of their pieces in an ne direction line else a player places 3 of their pieces in an ne direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@5340477f pieces in an east direction line then a player places 4 of their pieces in an east direction line else a player places 3 of their pieces in an east direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@47caedad pieces in an se direction line then a player places 4 of their pieces in an se direction line else a player places 3 of their pieces in an se direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@7139992f pieces in an south direction line then a player places 4 of their pieces in an south direction line else a player places 3 of their pieces in an south direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@69504ae9 pieces in an sw direction line then a player places 4 of their pieces in an sw direction line else a player places 3 of their pieces in an sw direction line, if a player places 4 [Lgame.functions.ints.IntFunction;@387a8303 pieces in an west direction line then a player places 4 of their pieces in an west direction line else a player places 3 of their pieces in an west direction line or if a player places 4 [Lgame.functions.ints.IntFunction;@28cda624 pieces in an nw direction line then a player places 4 of their pieces in an nw direction line else a player places 3 of their pieces in an nw direction line sites occupied by any component owned by Next in Board, else move one of your pieces. Aim: If there are no pieces owned by Player the next player, the moving player wins. The Davxar Zirge (Type 2) (Ludii 1) ruleset.
(game "Davxar Zirge (Type 2)" (players 2) (equipment {(board (add (merge {(shift 7 7 (remove (square 3) vertices:{4})) (shift 6 6 (scale 2 (remove (square 3) vertices:{4}))) (shift 4 4 (scale 4 (remove (square 3) vertices:{4}))) (scale 8 (remove (square 3) vertices:{4}))}) edges:{{21 30} {27 21} {27 16} {16 25} {25 18} {18 28} {28 23} {23 30} {30 22} {17 25} {19 27} {20 28} {22 13} {13 19} {19 8} {8 17} {17 10} {10 20} {20 15} {15 22} {14 5} {5 11} {11 0} {0 9} {9 2} {2 12} {12 7} {7 14} {6 14} {14 22} {3 11} {11 19} {1 9} {9 17} {4 12} {12 20} {13 21} {13 5} {21 29} {0 8} {8 16} {16 24} {2 10} {10 18} {18 26} {31 23} {23 15} {15 7}}) use:Vertex) (hand Each) (piece "Marker" Each (move Step (to if:(is Empty (to)))))}) (rules (start (place "Marker" "Hand" count:6)) phases:{(phase "Placement" (play (if (is Prev Mover) (move Remove (forEach (sites Occupied by:Next container:"Board") if:(not (or {(if (is Line 4 N through:(site) whats:{0 1 2}) (is Line 4 N through:(site) exact:True) (is Line 3 N through:(site) exact:True)) (if (is Line 4 NE through:(site) whats:{0 1 2}) (is Line 4 NE through:(site) exact:True) (is Line 3 NE through:(site) exact:True)) (if (is Line 4 E through:(site) whats:{0 1 2}) (is Line 4 E through:(site) exact:True) (is Line 3 E through:(site) exact:True)) (if (is Line 4 SE through:(site) whats:{0 1 2}) (is Line 4 SE through:(site) exact:True) (is Line 3 SE through:(site) exact:True)) (if (is Line 4 S through:(site) whats:{0 1 2}) (is Line 4 S through:(site) exact:True) (is Line 3 S through:(site) exact:True)) (if (is Line 4 SW through:(site) whats:{0 1 2}) (is Line 4 SW through:(site) exact:True) (is Line 3 SW through:(site) exact:True)) (if (is Line 4 W through:(site) whats:{0 1 2}) (is Line 4 W through:(site) exact:True) (is Line 3 W through:(site) exact:True)) (if (is Line 4 NW through:(site) whats:{0 1 2}) (is Line 4 NW through:(site) exact:True) (is Line 3 NW through:(site) exact:True))})))) (move (from (handSite Mover)) (to (sites Empty)) (then (if (or {(if (is Line 4 N whats:{0 1 2}) (is Line 4 N exact:True) (is Line 3 N exact:True)) (if (is Line 4 NE whats:{0 1 2}) (is Line 4 NE exact:True) (is Line 3 NE exact:True)) (if (is Line 4 E whats:{0 1 2}) (is Line 4 E exact:True) (is Line 3 E exact:True)) (if (is Line 4 SE whats:{0 1 2}) (is Line 4 SE exact:True) (is Line 3 SE exact:True)) (if (is Line 4 S whats:{0 1 2}) (is Line 4 S exact:True) (is Line 3 S exact:True)) (if (is Line 4 SW whats:{0 1 2}) (is Line 4 SW exact:True) (is Line 3 SW exact:True)) (if (is Line 4 W whats:{0 1 2}) (is Line 4 W exact:True) (is Line 3 W exact:True)) (if (is Line 4 NW whats:{0 1 2}) (is Line 4 NW exact:True) (is Line 3 NW exact:True))}) (moveAgain)))))) (nextPhase Mover (all Sites (sites Hand Mover) if:(equals 0 (count Cell at:(site)))) "Movement")) (phase "Movement" (play (if (is Prev Mover) (move Remove (forEach (sites Occupied by:Next container:"Board") if:(not (or {(if (is Line 4 N through:(site) whats:{0 1 2}) (is Line 4 N through:(site) exact:True) (is Line 3 N through:(site) exact:True)) (if (is Line 4 NE through:(site) whats:{0 1 2}) (is Line 4 NE through:(site) exact:True) (is Line 3 NE through:(site) exact:True)) (if (is Line 4 E through:(site) whats:{0 1 2}) (is Line 4 E through:(site) exact:True) (is Line 3 E through:(site) exact:True)) (if (is Line 4 SE through:(site) whats:{0 1 2}) (is Line 4 SE through:(site) exact:True) (is Line 3 SE through:(site) exact:True)) (if (is Line 4 S through:(site) whats:{0 1 2}) (is Line 4 S through:(site) exact:True) (is Line 3 S through:(site) exact:True)) (if (is Line 4 SW through:(site) whats:{0 1 2}) (is Line 4 SW through:(site) exact:True) (is Line 3 SW through:(site) exact:True)) (if (is Line 4 W through:(site) whats:{0 1 2}) (is Line 4 W through:(site) exact:True) (is Line 3 W through:(site) exact:True)) (if (is Line 4 NW through:(site) whats:{0 1 2}) (is Line 4 NW through:(site) exact:True) (is Line 3 NW through:(site) exact:True))})))) (forEach Piece (then (if (or {(if (is Line 4 N whats:{0 1 2}) (is Line 4 N exact:True) (is Line 3 N exact:True)) (if (is Line 4 NE whats:{0 1 2}) (is Line 4 NE exact:True) (is Line 3 NE exact:True)) (if (is Line 4 E whats:{0 1 2}) (is Line 4 E exact:True) (is Line 3 E exact:True)) (if (is Line 4 SE whats:{0 1 2}) (is Line 4 SE exact:True) (is Line 3 SE exact:True)) (if (is Line 4 S whats:{0 1 2}) (is Line 4 S exact:True) (is Line 3 S exact:True)) (if (is Line 4 SW whats:{0 1 2}) (is Line 4 SW exact:True) (is Line 3 SW exact:True)) (if (is Line 4 W whats:{0 1 2}) (is Line 4 W exact:True) (is Line 3 W exact:True)) (if (is Line 4 NW whats:{0 1 2}) (is Line 4 NW exact:True) (is Line 3 NW exact:True))}) (moveAgain)))))))} (end (if (no Pieces Next) (result Mover Win))))) 
