The game Lian Qi (A-Type) is played by two players on a square board with concentric tiling. All players play with Markers. Rules for Pieces: Markers step adjacent then if a player places 3 of their pieces in an adjacent direction line, move again. Players take turns moving. Setup: Place stack of [Marker1] at vertex Player 1's hand site 0 Place stack of [Marker2] at vertex Player 2's hand site 0. Rules: If in the same turn, from vertex in Player the moving player's hand site 0 to vertex in the size of the stack on vertex current site is equal to 1 sites occupied by any component owned by Next in Board moveRule: true, else if not all sites in the sites in Player the moving player's hand satisfy the condition 0 is equal to the total number of cell in current site, from vertex in Player the moving player's hand site 0 to vertex in the set of empty vertexs moveRule: true then if a player places 3 of their pieces in an adjacent direction line, move again if in the same turn, remove pieces at sites occupied by any component owned by Enemy in Board, else if the number of pieces owned by Player the moving player is greater than 3, move one of your pieces, else from vertex in sites occupied by any component owned by Mover to vertex in the set of empty vertexs moveRule: true. The Lian Qi (A-Type) (Ludii 1) ruleset.
(game "Lian Qi (A-Type)" (players 2) (equipment {(board (concentric Square rings:3 joinCorners:True) use:Vertex) (hand Each) (piece "Marker" Each (move Step (to if:(is Empty (to))) (then (if (is Line 3 if:(equals 1 (size Stack at:(to)))) (moveAgain)))))}) (rules (start {(place Stack "Marker1" (handSite P1) count:12) (place Stack "Marker2" (handSite P2) count:12)}) phases:{(phase "Placement" (play (if (is Prev Mover) (move (from (handSite Mover)) (to (forEach (sites Occupied by:Next container:"Board") if:(equals (size Stack at:(site)) 1)))) (if (not (all Sites (sites Hand Mover) if:(equals 0 (count Cell at:(site))))) (move (from (handSite Mover)) (to (sites Empty)) (then (if (is Line 3 if:(equals 1 (size Stack at:(to)))) (moveAgain))))) (then (if (and (not (is Next Mover)) (and (all Sites (sites Hand P1) if:(equals 0 (count Cell at:(site)))) (all Sites (sites Hand P2) if:(equals 0 (count Cell at:(site)))))) (and (forEach Site (forEach (sites Occupied by:P1 container:"Board") if:(equals (size Stack at:(site)) 2)) (and {(remove (site)) (remove (site)) (add (piece (id "Marker" P1)) (to (site)))})) (forEach Site (forEach (sites Occupied by:P2 container:"Board") if:(equals (size Stack at:(site)) 2)) (and {(remove (site)) (remove (site)) (add (piece (id "Marker" P2)) (to (site)))}))))))) (nextPhase (and (not (is Next Mover)) (and (all Sites (sites Hand P1) if:(equals 0 (count Cell at:(site)))) (all Sites (sites Hand P2) if:(equals 0 (count Cell at:(site)))))) "Movement")) (phase "Movement" (play (if (is Prev Mover) (move Remove (sites Occupied by:Enemy container:"Board")) (if (gt (count Pieces Mover) 3) (forEach Piece) (move (from (sites Occupied by:Mover)) (to (sites Empty)))))) (end (if (no Moves Next) (result Mover Win))))})) 
